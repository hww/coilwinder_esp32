(undo-tree-save-format-version . 1)
"b4aa174a1d3856870ba7ed20234133503a7a4522"
[nil nil nil nil (25139 16504 810266 77000) 0 nil]
([nil nil ((#(" m_" 0 3 (fontified nil)) . -2138) (2141 . 2142) (#(" m_" 0 3 (fontified t)) . -1932) (1935 . 1936) (#(" m_" 0 3 (fontified t)) . -1733) (1736 . 1737) (#(" m_" 0 3 (fontified t)) . -1544) (1547 . 1548) (#(" m_" 0 3 (fontified t)) . -1396) (1399 . 1400) (#(" m_" 0 3 (fontified nil)) . -1101) (1104 . 1105) (#(" m_" 0 3 (fontified t)) . -1090) (1093 . 1094) (#(" m_" 0 3 (fontified t)) . -1060) (1063 . 1064) (#(" m_" 0 2 (fontified t) 2 3 (fontified t)) . -1011) (1014 . 1015) (#(" m_" 0 1 (fontified t c-is-sws t c-in-sws t) 1 2 (fontified t c-is-sws t) 2 3 (fontified t)) . -950) (953 . 954) (#(" m_" 0 3 (fontified t)) . -384) (387 . 388) (#(" m_" 0 3 (fontified t)) . -370) (373 . 374) (#(" m_" 0 3 (fontified t)) . -344) (347 . 348) (#(" m_" 0 3 (fontified t)) . -209) (212 . 213) (#(" m_" 0 3 (fontified t)) . -187) (190 . 191) (#(" m_" 0 3 (fontified t)) . -119) (122 . 123) (#(" m_" 0 3 (fontified t)) . -101) (104 . 105) (#(" m_" 0 3 (fontified t)) . -78) (81 . 82) (#(" m_" 0 3 (fontified t)) . -58) (t 25139 10688 873289 619000) (61 . 62) 27 (t 25139 10688 873289 619000)) nil (25139 16504 810247 677000) 0 nil])
([nil nil ((#("line_num" 0 8 (fontified t)) . -2095) (2103 . 2107) (#("line_num" 0 8 (fontified t)) . -1746) (1754 . 1758) (#("line_num" 0 8 (fontified nil)) . -1709) (1717 . 1721) (nil fontified t 1691 . 1695) (nil face font-lock-variable-name-face 1691 . 1695) (#("line_num" 0 8 (fontified t face font-lock-variable-name-face)) . -1691) (1699 . 1703) (#("line_num" 0 8 (fontified t)) . -1525) (1533 . 1537) (#("line_num" 0 8 (fontified t)) . -1381) (1389 . 1393) (#("line_num" 0 8 (fontified t)) . -1071) (1079 . 1083) (#("line_num" 0 8 (fontified t)) . -1033) (1041 . 1045) (#("line_num" 0 8 (fontified t)) . -1000) (1008 . 1012) (#("line_num" 0 8 (fontified t)) . -974) (982 . 986) (#("line_num" 0 8 (fontified t)) . -947) (955 . 959) (nil fontified t 305 . 309) (nil face font-lock-variable-name-face 305 . 309) (#("line_num" 0 8 (fontified t face font-lock-variable-name-face)) . -305) (313 . 317) 1) nil (25139 16504 810216 177000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t face font-lock-function-name-face)) . -152) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 153 (t 25139 16504 813068 414000)) nil (25139 16529 344902 794000) 0 nil])
([nil nil ((152 . 153)) nil (25139 16529 344884 593000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t face font-lock-function-name-face)) . -280) (undo-tree-id4 . -1) 281) nil (25139 16529 344871 393000) 0 nil])
([nil nil ((280 . 281)) nil (25139 16529 344855 594000) 0 nil])
([nil nil ((284 . 285)) nil (25139 16529 344842 794000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face font-lock-function-name-face)) . 285)) nil (25139 16529 344829 994000) 0 nil])
([nil nil ((285 . 286)) nil (25139 16529 344817 293000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete)) . 347) (#("m" 0 1 (fontified t)) . 347)) nil (25139 16529 344804 293000) 0 nil])
([nil nil ((347 . 351)) nil (25139 16529 344791 294000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg delete)) . 351) (#("i" 0 1 (fontified t ws-butler-chg delete)) . 351) (#("l" 0 1 (fontified t ws-butler-chg delete)) . 351)) nil (25139 16529 344777 994000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 351) (#("m" 0 1 (fontified t ws-butler-chg delete)) . 351) (#("u" 0 1 (fontified t ws-butler-chg delete)) . 351)) nil (25139 16529 344763 893000) 0 nil])
([nil nil ((351 . 352)) nil (25139 16529 344750 493000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -357) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("m" 0 1 (fontified t)) . -358) (undo-tree-id3 . -1) 359) nil (25139 16529 344736 393000) 0 nil])
([nil nil ((357 . 358)) nil (25139 16529 344689 494000) 0 nil])
([nil nil ((55 . 1904) (#("  : root(nullptr)
    , current(nullptr)
    , edit(false)
    , refresh_at(0)
{

}

MenuSystem::update(float time)
{
    if (time > refresh_at) {
        refresh_at = time + 0.5f;
        Render();
    }
}

void MenuSystem::open_menu(Menu* menu, int line = -1)
{
    if (linum)
        menu.line = line;
    current=menu; refresh_at = 0;
}

void MenuSystem::CloseMenu(Menu* menu)
{
    if (m_curtrent != nullptr)
        OpenMenu(m_current.m_parrent);
}

/* The event for menu list  */
bool MenuSystem::OnEvent(MenuEvent evt) {
    switch (evt.event) {
                case MenuEvent::Render:
            Render();
            break;
        case MenuEvent::PressQuad:
            Menu::ToggleEditMode();
            break;
        case MenuEvent::Right:
            // Choose the menu line
            break;
        case MenuEvent::Left:
            // Choose the menu line
            line --;
            if (m_line < 0)
                line = 0;
            else if (m_line >= items.size())
                line = items.size() - 1;

            Render();
            OnModified();
            break;
        case MenuEvent::Reset:
            break;
        default:
            break;
        case MenuEvent::OnRotate:
            if (evt.edit) {
                // Edit the menu line
                return items[m_line]->event(evt);
            } else {
                return true;
            }

        case MenuEvent::OnPress:
            return items[m_line]->event(evt);

        default:
            break;
    }
    return true;
}


MenuSystem::Render()
{
    if (m_current_menu == nullptr)
        return;

    int line = current->m_line;
    int y = 0;
    int page = (line / MENU_MAX_LINES);
    int first_line = page * MENU_MAX_LINES;
    int last_line = first_line + MENU_MAX_LINES - 1;
    for (auto& item : current->m_items) {
        if (y>last_line)
            break;
        if (y>=first_line) {
            // Display cursor
            MenuRenderOption opt = MenuRenderOption::Default;
            if (y == line) {
                opt = edit_mode ? MenuRenderOption::Edit : MenuRenderOption::Select;
            }
            item->display(0, y-first_line, opt);
        }
        y++;
  " 0 3 (fontified t) 3 4 (fontified t ws-butler-chg chg) 4 9 (fontified t) 9 16 (fontified t face font-lock-constant-face) 16 18 (fontified t) 18 22 (fontified t) 22 23 (fontified t c-type c-not-decl) 23 24 (fontified t ws-butler-chg chg) 24 32 (fontified t) 32 39 (fontified t face font-lock-constant-face) 39 40 (fontified t) 40 41 (fontified t) 41 45 (fontified t) 45 46 (fontified t c-type c-not-decl) 46 47 (fontified t ws-butler-chg chg) 47 52 (fontified t) 52 57 (fontified t face font-lock-constant-face) 57 58 (fontified t) 58 59 (fontified t) 59 63 (fontified t) 63 64 (fontified t c-type c-not-decl) 64 65 (fontified t ws-butler-chg chg) 65 79 (fontified t) 79 82 (fontified t) 82 83 (fontified t c-type c-decl-id-start) 83 85 (fontified t) 85 95 (fontified t face font-lock-constant-face) 95 97 (fontified t) 97 98 (fontified t ws-butler-chg chg face font-lock-function-name-face) 98 99 (fontified t ws-butler-chg delete face font-lock-function-name-face) 99 103 (fontified t face font-lock-function-name-face) 103 104 (fontified t c-type c-decl-arg-start) 104 109 (fontified t face font-lock-type-face) 109 110 (fontified t) 110 114 (fontified t face font-lock-variable-name-face) 114 115 (fontified t) 115 118 (fontified t) 118 122 (fontified t) 122 124 (fontified t face font-lock-keyword-face) 124 132 (fontified t) 132 133 (ws-butler-chg chg fontified t) 133 147 (fontified t) 147 154 (fontified t) 154 155 (ws-butler-chg chg fontified t) 155 181 (fontified t) 181 208 (fontified t) 208 211 (fontified t face font-lock-type-face) 211 212 (fontified t c-type c-decl-id-start face font-lock-type-face) 212 213 (fontified t) 213 223 (fontified t face font-lock-constant-face) 223 225 (fontified t) 225 226 (fontified t ws-butler-chg chg face font-lock-function-name-face) 226 227 (fontified t ws-butler-chg delete face font-lock-function-name-face) 227 229 (fontified t face font-lock-function-name-face) 229 230 (fontified t ws-butler-chg chg face font-lock-function-name-face) 230 231 (fontified t ws-butler-chg chg face font-lock-function-name-face) 231 232 (fontified t ws-butler-chg delete face font-lock-function-name-face) 232 234 (fontified t face font-lock-function-name-face) 234 235 (fontified t c-type c-decl-arg-start) 235 239 (fontified t face font-lock-type-face) 239 241 (fontified t) 241 245 (fontified t face font-lock-variable-name-face) 245 246 (fontified t c-type c-decl-arg-start) 246 247 (fontified t) 247 250 (fontified t face font-lock-type-face) 250 251 (fontified t) 251 255 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 255 257 (fontified t) 257 261 (fontified t) 261 268 (fontified t) 268 270 (fontified t face font-lock-keyword-face) 270 279 (fontified t) 279 286 (fontified t) 286 287 (ws-butler-chg chg fontified t) 287 292 (fontified t) 292 293 (fontified t ws-butler-chg chg) 293 294 (fontified t ws-butler-chg chg) 294 295 (fontified t ws-butler-chg chg) 295 296 (fontified t ws-butler-chg chg) 296 297 (fontified t ws-butler-chg chg) 297 298 (fontified t ws-butler-chg delete) 298 302 (fontified t) 302 303 (fontified t ws-butler-chg chg) 303 304 (fontified t ws-butler-chg delete) 304 305 (fontified t) 305 308 (fontified t) 308 309 (ws-butler-chg chg fontified t) 309 317 (fontified t) 317 322 (fontified t) 322 323 (ws-butler-chg chg fontified t) 323 339 (fontified t) 339 342 (fontified t) 342 345 (fontified t face font-lock-type-face) 345 346 (fontified t c-type c-decl-id-start face font-lock-type-face) 346 347 (fontified t) 347 357 (fontified t face font-lock-constant-face) 357 359 (fontified t) 359 368 (fontified t face font-lock-function-name-face) 368 369 (fontified t c-type c-decl-arg-start) 369 373 (fontified t face font-lock-type-face) 373 375 (fontified t) 375 379 (fontified t face font-lock-variable-name-face) 379 387 (fontified t) 387 389 (fontified t face font-lock-keyword-face) 389 405 (fontified t) 405 412 (fontified t face font-lock-constant-face) 412 421 (fontified t) 421 453 (fontified t) 453 456 (fontified t) 456 457 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 457 459 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 459 482 (c-in-sws t fontified t face font-lock-comment-face) 482 486 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 486 487 (c-in-sws t fontified t) 487 488 (c-is-sws t fontified t face font-lock-type-face) 488 490 (fontified t face font-lock-type-face) 490 491 (fontified t c-type c-decl-id-start face font-lock-type-face) 491 492 (fontified t) 492 502 (fontified t face font-lock-constant-face) 502 504 (fontified t) 504 511 (fontified t face font-lock-function-name-face) 511 512 (fontified t c-type c-decl-arg-start) 512 521 (fontified t face font-lock-type-face) 521 522 (fontified t) 522 525 (fontified t face font-lock-variable-name-face) 525 533 (fontified t) 533 539 (fontified t face font-lock-keyword-face) 539 570 (fontified t) 570 574 (fontified t face font-lock-keyword-face) 574 575 (fontified t) 575 584 (fontified t face font-lock-constant-face) 584 592 (fontified t) 592 593 (fontified t c-type c-decl-end) 593 612 (fontified t) 612 615 (fontified t) 615 628 (fontified t) 628 633 (fontified t face font-lock-keyword-face) 633 643 (fontified t) 643 647 (fontified t face font-lock-keyword-face) 647 648 (fontified t) 648 657 (fontified t face font-lock-constant-face) 657 668 (fontified t) 668 669 (fontified t c-type c-decl-end) 669 674 (fontified t) 674 682 (fontified t) 682 686 (fontified t face font-lock-constant-face) 686 705 (fontified t) 705 706 (fontified t) 706 718 (fontified t) 718 723 (fontified t face font-lock-keyword-face) 723 733 (fontified t) 733 737 (fontified t face font-lock-keyword-face) 737 738 (fontified t) 738 747 (fontified t face font-lock-constant-face) 747 754 (fontified t) 754 755 (fontified t c-type c-decl-end) 755 756 (fontified t) 756 757 (c-in-sws t c-is-sws t fontified t) 757 768 (c-in-sws t c-is-sws t fontified t) 768 769 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 769 771 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 771 792 (c-in-sws t fontified t face font-lock-comment-face) 792 797 (c-is-sws t c-in-sws t fontified t) 797 798 (c-is-sws t fontified t) 798 804 (fontified t) 804 809 (face font-lock-keyword-face fontified t) 809 811 (fontified t) 811 819 (fontified t) 819 823 (fontified t face font-lock-keyword-face) 823 824 (fontified t) 824 833 (fontified t face font-lock-constant-face) 833 839 (fontified t) 839 840 (fontified t c-type c-decl-end) 840 841 (fontified t) 841 853 (c-in-sws t c-is-sws t fontified t) 853 854 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 854 856 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 856 877 (c-in-sws t fontified t face font-lock-comment-face) 877 888 (c-is-sws t c-in-sws t fontified t) 888 889 (ws-butler-chg chg fontified t) 889 893 (ws-butler-chg chg fontified t) 893 897 (fontified t) 897 898 (fontified t) 898 910 (fontified t) 910 912 (fontified t face font-lock-keyword-face) 912 916 (fontified t) 916 920 (ws-butler-chg chg fontified t) 920 925 (fontified t) 925 941 (fontified t) 941 942 (ws-butler-chg chg fontified t) 942 946 (ws-butler-chg chg fontified t) 946 948 (fontified t) 948 952 (fontified t) 952 964 (fontified t) 964 968 (fontified t face font-lock-keyword-face) 968 969 (fontified t) 969 971 (fontified t face font-lock-keyword-face) 971 975 (fontified t) 975 979 (ws-butler-chg chg fontified t) 979 982 (fontified t) 982 983 (ws-butler-chg chg fontified t) 983 997 (fontified t) 997 1012 (fontified t) 1012 1013 (ws-butler-chg chg fontified t) 1013 1017 (ws-butler-chg chg fontified t) 1017 1019 (fontified t) 1019 1020 (ws-butler-chg chg fontified t) 1020 1038 (fontified t) 1038 1099 (fontified t) 1099 1104 (fontified t face font-lock-keyword-face) 1104 1114 (fontified t) 1114 1118 (fontified t face font-lock-keyword-face) 1118 1119 (fontified t) 1119 1128 (fontified t face font-lock-constant-face) 1128 1135 (fontified t) 1135 1136 (fontified t c-type c-decl-end) 1136 1149 (fontified t) 1149 1154 (fontified t face font-lock-keyword-face) 1154 1164 (fontified t) 1164 1171 (fontified t face font-lock-keyword-face) 1171 1172 (fontified t c-type c-decl-end) 1172 1185 (fontified t) 1185 1186 (fontified t face font-lock-keyword-face) 1186 1190 (fontified t face font-lock-keyword-face) 1190 1192 (fontified t) 1192 1200 (fontified t) 1200 1204 (fontified t face font-lock-keyword-face) 1204 1205 (fontified t) 1205 1206 (fontified t face font-lock-constant-face) 1206 1214 (fontified t face font-lock-constant-face) 1214 1224 (fontified t) 1224 1225 (fontified t c-type c-decl-end) 1225 1238 (fontified t) 1238 1240 (fontified t face font-lock-keyword-face) 1240 1251 (fontified t) 1251 1254 (fontified t) 1254 1270 (c-in-sws t c-is-sws t fontified t) 1270 1271 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1271 1273 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1273 1291 (c-in-sws t fontified t face font-lock-comment-face) 1291 1292 (c-in-sws t fontified t face font-lock-comment-face) 1292 1293 (c-is-sws t c-in-sws t fontified t) 1293 1308 (c-in-sws t c-is-sws t fontified t) 1308 1309 (c-is-sws t fontified t face font-lock-keyword-face) 1309 1311 (fontified t face font-lock-keyword-face) 1311 1314 (face font-lock-keyword-face fontified t) 1314 1315 (ws-butler-chg chg fontified t) 1315 1323 (fontified t) 1323 1327 (ws-butler-chg chg fontified t) 1327 1341 (fontified t) 1341 1342 (fontified t) 1356 1360 (face font-lock-keyword-face) 1379 1385 (face font-lock-keyword-face) 1386 1390 (face font-lock-constant-face) 1415 1419 (face font-lock-keyword-face) 1420 1428 (face font-lock-constant-face) 1428 1429 (face font-lock-constant-face) 1438 1439 (c-type c-decl-end) 1452 1458 (face font-lock-keyword-face) 1458 1459 (ws-butler-chg chg) 1467 1471 (ws-butler-chg chg) 1495 1502 (face font-lock-keyword-face) 1502 1503 (c-type c-decl-end) 1516 1521 (face font-lock-keyword-face) 1533 1539 (face font-lock-keyword-face) 1540 1544 (face font-lock-constant-face) 1546 1547 (c-type c-decl-id-start) 1550 1560 (face font-lock-constant-face) 1562 1568 (face font-lock-function-name-face) 1577 1579 (face font-lock-keyword-face) 1599 1606 (face font-lock-constant-face) 1616 1622 (face font-lock-keyword-face) 1629 1631 (face font-lock-type-face) 1631 1632 (c-type c-decl-id-start face font-lock-type-face) 1633 1637 (ws-butler-chg chg face font-lock-variable-name-face) 1639 1640 (ws-butler-chg chg) 1651 1655 (ws-butler-chg chg) 1661 1663 (face font-lock-type-face) 1663 1664 (c-type c-decl-id-start face font-lock-type-face) 1665 1666 (face font-lock-variable-name-face) 1676 1678 (face font-lock-type-face) 1678 1679 (c-type c-decl-id-start face font-lock-type-face) 1680 1684 (face font-lock-variable-name-face) 1688 1692 (ws-butler-chg chg) 1716 1718 (face font-lock-type-face) 1718 1719 (c-type c-decl-id-start face font-lock-type-face) 1720 1730 (face font-lock-variable-name-face) 1760 1762 (face font-lock-type-face) 1762 1763 (c-type c-decl-id-start face font-lock-type-face) 1764 1773 (face font-lock-variable-name-face) 1813 1816 (face font-lock-keyword-face) 1818 1821 (face font-lock-keyword-face) 1821 1822 (face font-lock-keyword-face c-type c-decl-id-start) 1824 1828 (face font-lock-variable-name-face) 1830 1831 (ws-butler-chg chg) 1859 1861 (face font-lock-keyword-face) 1888 1893 (face font-lock-keyword-face) 1903 1905 (face font-lock-keyword-face) 1924 1936 (c-in-sws t c-is-sws t) 1936 1937 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 1937 1939 (c-in-sws t face font-lock-comment-delimiter-face) 1939 1953 (c-in-sws t face font-lock-comment-face) 1953 1954 (c-in-sws t face font-lock-comment-face) 1954 1966 (c-is-sws t c-in-sws t) 1966 1967 (c-is-sws t face font-lock-type-face) 1967 1969 (face font-lock-type-face) 1969 1981 (face font-lock-type-face) 1981 1982 (c-type c-decl-id-start face font-lock-type-face) 1983 1986 (face font-lock-variable-name-face) 1989 2005 (face font-lock-constant-face) 2028 2030 (face font-lock-keyword-face) 2036 2037 (ws-butler-chg chg) 2037 2041 (ws-butler-chg chg) 2079 2095 (face font-lock-constant-face) 2104 2120 (face font-lock-constant-face)) . 55) (undo-tree-id8 . -342) (undo-tree-id9 . -454) (undo-tree-id10 . -369) (undo-tree-id11 . -380) (undo-tree-id12 . -83) (undo-tree-id13 . -487) (undo-tree-id14 . -1547) (undo-tree-id15 . -512) (undo-tree-id16 . -526) (undo-tree-id17 . -1550) (undo-tree-id18 . -97) (undo-tree-id19 . -97) (undo-tree-id20 . -85) (undo-tree-id21 . -206) (undo-tree-id22 . -104) (undo-tree-id23 . -115) (undo-tree-id24 . -208) (undo-tree-id25 . -340) (undo-tree-id26 . -235) (undo-tree-id27 . -246) (undo-tree-id28 . -247) (undo-tree-id29 . -260) (undo-tree-id30 . -303) (undo-tree-id31 . -303) (undo-tree-id32 . -329) (undo-tree-id33 . -509) (undo-tree-id34 . -305) (undo-tree-id35 . -322) (undo-tree-id36 . -322) (undo-tree-id37 . -181) (undo-tree-id38 . -322) (undo-tree-id39 . -322) (undo-tree-id40 . -322) (undo-tree-id41 . -181) (undo-tree-id42 . -181) (undo-tree-id43 . -322) (undo-tree-id44 . -322) (undo-tree-id45 . -322) (t 25139 16529 346400 812000)) nil (25139 16539 408233 920000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . 390) (t 25139 16539 409733 765000)) nil (25139 16548 400963 979000) 0 nil])
([nil nil ((390 . 391)) nil (25139 16548 400950 579000) 0 nil])
([nil nil ((395 . 396)) nil (25139 16548 400927 279000) 0 nil])
([nil nil ((396 . 397)) nil (25139 16548 400914 379000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . 397)) nil (25139 16548 400897 679000) 0 nil])
([nil nil ((#("O" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . 530) (t 25139 16548 403066 751000)) nil (25139 16572 832998 482000) 0 nil])
([nil nil ((530 . 532)) nil (25139 16572 832985 382000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg delete fontified t face font-lock-function-name-face)) . 532)) nil (25139 16572 832972 682000) 0 nil])
([nil nil ((532 . 534)) nil (25139 16572 832959 982000) 0 nil])
([nil nil ((#("E" 0 1 (ws-butler-chg delete fontified t face font-lock-function-name-face)) . 534)) nil (25139 16572 832946 782000) 0 nil])
([nil nil ((#("    line --;
" 0 4 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 4 5 (ws-butler-chg chg c-is-sws t fontified t) 5 13 (ws-butler-chg chg fontified t)) . 817)) nil (25139 16572 832933 882000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 817)) nil (25139 16572 832921 82000) 0 nil])
([nil nil ((#("    if (m_line < 0)
" 0 1 (ws-butler-chg delete fontified t c-is-sws t) 1 4 (ws-butler-chg chg fontified t) 4 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 20 (ws-butler-chg chg fontified t)) . 817)) nil (25139 16572 832908 182000) 0 nil])
([nil nil ((#("      line = 0;
" 0 1 (ws-butler-chg delete fontified t c-is-sws t) 1 16 (ws-butler-chg chg fontified t)) . 817)) nil (25139 16572 832895 282000) 0 nil])
([nil nil ((#("    else if (m_line >= items.size())
" 0 1 (ws-butler-chg delete fontified t c-is-sws t) 1 4 (ws-butler-chg chg fontified t) 4 8 (ws-butler-chg chg fontified t face font-lock-keyword-face) 8 9 (ws-butler-chg chg fontified t) 9 11 (ws-butler-chg chg fontified t face font-lock-keyword-face) 11 37 (ws-butler-chg chg fontified t)) . 817)) nil (25139 16572 832882 182000) 0 nil])
([nil nil ((#("      line = items.size() - 1;
" 0 1 (ws-butler-chg delete fontified t c-is-sws t) 1 9 (ws-butler-chg chg fontified t) 9 12 (ws-butler-chg chg fontified t) 12 31 (ws-butler-chg chg fontified t)) . 817)) nil (25139 16572 832869 282000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 817)) nil (25139 16572 952599 803000) 0 nil])
([nil nil ((#("    // Choose the menu line
" 0 4 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t) 4 5 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-delimiter-face) 7 27 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 27 28 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . 789) (undo-tree-id51 . -28)) nil (25139 16578 658378 364000) 0 nil] [nil nil ((#("    // Choose the menu line
" 0 4 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 4 5 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 5 7 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 7 27 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 27 28 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 789) (undo-tree-id46 . -28) (undo-tree-id47 . -28)) ((nil ws-butler-chg delete 817 . 818) (789 . 817)) (25139 16572 833960 82000) 0 nil])
([nil nil ((#("    Render();
" 0 1 (fontified t c-is-sws t ws-butler-chg delete) 1 14 (ws-butler-chg chg fontified t)) . 789) (undo-tree-id50 . -14)) nil (25139 16578 658361 964000) 0 nil])
([nil nil ((#("    Render();
" 0 1 (ws-butler-chg delete fontified t c-is-sws t) 1 14 (ws-butler-chg chg fontified t)) . 789)) ((nil ws-butler-chg delete 803 . 804) (789 . 803)) (25139 16572 832814 582000) 0 nil])
([nil nil ((#("    OnModified();
" 0 1 (fontified t ws-butler-chg delete) 1 18 (ws-butler-chg chg fontified t)) . 789) (undo-tree-id49 . -18)) nil (25139 16578 658345 564000) 0 nil])
nil
([nil nil ((#("    // Choose the menu line
" 0 4 (ws-butler-chg chg fontified t) 4 7 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 7 28 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 725) (undo-tree-id48 . -28)) nil (25139 16578 658327 364000) 0 nil])
([nil nil ((699 . 704) (t 25139 16578 663065 601000)) nil (25139 16608 543344 596000) 0 nil])
([nil nil ((704 . 718)) nil (25139 16608 543331 496000) 0 nil])
([nil nil ((717 . 718) (700 . 702) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 700) (718 . 719)) nil (25139 16608 543318 297000) 0 nil])
([nil nil ((718 . 720)) nil (25139 16608 543304 596000) 0 nil])
([nil nil ((720 . 721)) nil (25139 16608 543291 696000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -720) (undo-tree-id61 . -1) 721) nil (25139 16608 543278 497000) 0 nil])
([nil nil ((720 . 721)) nil (25139 16608 543262 397000) 0 nil])
([nil nil ((721 . 726)) nil (25139 16608 543249 297000) 0 nil])
([nil nil ((726 . 731)) nil (25139 16608 543236 596000) 0 nil])
([nil nil ((731 . 732)) nil (25139 16608 543223 596000) 0 nil])
([nil nil ((732 . 737)) nil (25139 16608 543210 796000) 0 nil])
([nil nil ((737 . 745)) nil (25139 16608 543197 996000) 0 nil])
([nil nil ((742 . 752) (#("Men" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t)) . -742) (undo-tree-id60 . -3) 745) nil (25139 16608 543184 497000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t ws-butler-chg chg)) . -746) (undo-tree-id54 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg)) . -747) (undo-tree-id55 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -748) (undo-tree-id56 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -749) (undo-tree-id57 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -750) (undo-tree-id58 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -751) (undo-tree-id59 . -1) 752) nil (25139 16608 543163 696000) 0 nil])
([nil nil ((746 . 751)) nil (25139 16608 543140 996000) 0 nil])
([nil nil ((750 . 751) (733 . 735) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 733) (751 . 752)) nil (25139 16608 543127 696000) 0 nil])
([nil nil ((751 . 755)) nil (25139 16608 543114 96000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -754) (undo-tree-id53 . -1) 755) nil (25139 16608 543100 496000) 0 nil])
([nil nil ((754 . 755)) nil (25139 16608 543081 696000) 0 nil])
([nil nil ((755 . 756)) nil (25139 16608 543068 997000) 0 nil])
([nil nil ((756 . 759)) nil (25139 16608 543056 296000) 0 nil])
([nil nil ((759 . 764)) nil (25139 16608 543043 696000) 0 nil])
([nil nil ((764 . 765)) nil (25139 16608 543030 796000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -755) (undo-tree-id52 . -1) 756) nil (25139 16608 543017 496000) 0 nil])
([nil nil ((755 . 756)) nil (25139 16608 542992 596000) 0 nil])
([nil nil ((757 . 761) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 757)) nil (25139 16608 542973 996000) 0 nil])
([nil nil ((#("  case MenuEvent::OnRotate:
" 0 2 (ws-butler-chg chg fontified t) 2 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 13 (ws-butler-chg chg fontified t face font-lock-constant-face) 13 16 (ws-butler-chg chg fontified t face font-lock-constant-face) 16 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t c-type c-decl-end) 27 28 (ws-butler-chg chg fontified t)) . 901) (t 25139 16608 546397 800000)) nil (25139 16622 443182 697000) 0 nil])
([nil nil ((#("    if (evt.edit) {
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 11 (ws-butler-chg chg fontified t) 11 17 (ws-butler-chg chg fontified t) 17 20 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443169 797000) 0 nil])
([nil nil ((#("      // Edit the menu line
" 0 1 (ws-butler-chg delete fontified t) 1 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 7 9 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-delimiter-face) 9 28 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . 901)) nil (25139 16622 443156 997000) 0 nil])
([nil nil ((#("      return items[m_line]->event(evt);
" 0 1 (ws-butler-chg delete fontified t c-in-sws t) 1 6 (ws-butler-chg chg fontified t c-in-sws t) 6 7 (ws-butler-chg chg fontified t c-is-sws t face font-lock-keyword-face) 7 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443144 398000) 0 nil])
([nil nil ((#("    } else {
" 0 1 (ws-butler-chg delete fontified t) 1 6 (ws-butler-chg chg fontified t) 6 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 13 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443131 898000) 0 nil])
([nil nil ((#("      return true;
" 0 1 (ws-butler-chg delete fontified t) 1 6 (ws-butler-chg chg fontified t) 6 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 13 (ws-butler-chg chg fontified t) 13 17 (ws-butler-chg chg fontified t face font-lock-constant-face) 17 19 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443119 97000) 0 nil])
([nil nil ((#("    }
" 0 1 (ws-butler-chg delete fontified t) 1 6 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443106 397000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 901)) nil (25139 16622 443093 297000) 0 nil])
([nil nil ((#("  case MenuEvent::OnPress:
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 16 (ws-butler-chg chg fontified t face font-lock-constant-face) 16 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t c-type c-decl-end) 26 27 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443080 497000) 0 nil])
([nil nil ((#("    return items[m_line]->event(evt);
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 37 (ws-butler-chg chg fontified t) 37 38 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443067 798000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 901)) nil (25139 16622 443054 797000) 0 nil])
([nil nil ((#("  default:
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 9 (ws-butler-chg chg fontified t face font-lock-keyword-face) 9 10 (ws-butler-chg chg fontified t c-type c-decl-end) 10 11 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443042 97000) 0 nil])
([nil nil ((#("    break;
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 9 (ws-butler-chg chg fontified t face font-lock-keyword-face) 9 11 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443029 597000) 0 nil])
([nil nil ((#("  }
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 443016 697000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 901)) nil (25139 16622 443003 898000) 0 nil])
([nil nil ((#("  return true;
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 8 (ws-butler-chg chg fontified t face font-lock-keyword-face) 8 9 (ws-butler-chg chg fontified t) 9 13 (ws-butler-chg chg fontified t face font-lock-constant-face) 13 15 (ws-butler-chg chg fontified t)) . 901)) nil (25139 16622 442991 298000) 0 nil])
([nil nil ((#("}
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t)) . 901) (undo-tree-id62 . -1)) nil (25139 16622 442977 897000) 0 nil])
([nil nil ((900 . 902) (900 . 901)) nil (25139 16622 442951 198000) 0 nil])
([nil nil ((904 . 905) (t 25139 16622 446397 267000)) nil (25139 16627 53661 993000) 0 nil])
([nil nil ((#("R" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . 919) (t 25139 16627 56397 87000)) nil (25139 16631 785713 709000) 0 nil])
([nil nil ((919 . 920)) nil (25139 16631 785696 609000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg delete fontified t)) . 936) (#("m" 0 1 (ws-butler-chg chg fontified t)) . 936) (t 25139 16631 789730 240000)) nil (25139 16637 989797 346000) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg delete fontified t)) . 943) (#("n" 0 1 (ws-butler-chg delete fontified t)) . 943) (#("e" 0 1 (ws-butler-chg delete fontified t)) . 943) (#("m" 0 1 (ws-butler-chg delete fontified t)) . 943) (#("_" 0 1 (ws-butler-chg chg fontified t)) . 943)) nil (25139 16637 989772 346000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg delete fontified t)) . 991) (#("m" 0 1 (ws-butler-chg chg fontified t)) . 991) (t 25139 16637 993063 334000)) nil (25139 16647 236165 544000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg delete fontified t)) . 1171) (#("m" 0 1 (ws-butler-chg chg fontified t)) . 1171) (t 25139 16647 239729 647000)) nil (25139 16669 83089 754000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg delete fontified t)) . 1366) (#("d" 0 1 (ws-butler-chg delete fontified t)) . 1366) (#("o" 0 1 (ws-butler-chg delete fontified t)) . 1366) (#("m" 0 1 (ws-butler-chg delete fontified t)) . 1366) (#("_" 0 1 (ws-butler-chg chg fontified t)) . 1366)) nil (25139 16669 83071 55000) 0 nil])
([nil nil ((#("      item->display(0, y - first_line, opt);
" 0 8 (ws-butler-chg chg fontified t) 8 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg chg fontified t)) . 1429) (t 25139 16669 86395 482000)) nil (25139 16714 200396 888000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1473 . 1474) (nil fontified nil 1473 . 1474) (nil fontified nil 1437 . 1473) (nil fontified nil 1429 . 1437) (1429 . 1474)) nil (25139 16714 200383 588000) 0 nil])
([nil nil ((1347 . 1356)) nil (25139 16714 200369 888000) 0 nil])
([nil nil ((1348 . 1356) (#("              " 0 8 (ws-butler-chg chg fontified nil) 8 14 (ws-butler-chg chg fontified nil)) . 1348) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (nil rear-nonsticky nil 1400 . 1401) (nil fontified nil 1400 . 1401) (nil fontified nil 1364 . 1400) (nil fontified nil 1356 . 1364) (1356 . 1401)) nil (25139 16714 200356 288000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1395)) nil (25139 16714 200336 688000) 0 nil])
([nil nil ((1475 . 1481)) nil (25139 16714 200324 388000) 0 nil])
([nil nil ((1474 . 1476)) nil (25139 16714 200311 888000) 0 nil])
([nil nil ((1476 . 1477)) nil (25139 16714 200299 588000) 0 nil])
([nil nil ((1477 . 1478)) nil (25139 16714 200287 88000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -1476) (undo-tree-id72 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1477) (undo-tree-id73 . -1) 1478) nil (25139 16714 200273 688000) 0 nil])
([nil nil ((1476 . 1479)) nil (25139 16714 200257 88000) 0 nil])
([nil nil ((1479 . 1480) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 1479) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (1475 . 1479) 1479) nil (25139 16714 200243 688000) 0 nil])
([nil nil ((1480 . 1481)) nil (25139 16714 200224 588000) 0 nil])
([nil nil ((1481 . 1490)) nil (25139 16714 200212 188000) 0 nil])
([nil nil ((1482 . 1491) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 1482) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) 1490) nil (25139 16714 200199 88000) 0 nil])
([nil nil ((1483 . 1489) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 1483) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (1491 . 1492)) nil (25139 16714 200179 888000) 0 nil])
([nil nil ((#("      " 0 6 (ws-butler-chg chg fontified t)) . 1491) 1490) nil (25139 16714 200150 188000) 0 nil])
([nil nil ((#("      item->display(0, y - first_line, opt);
" 0 6 (ws-butler-chg chg fontified t) 6 8 (ws-butler-chg chg fontified t) 8 10 (ws-butler-chg chg fontified t) 10 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg chg rear-nonsticky t fontified t)) . 1492) (t 25139 16714 203060 428000)) nil (25139 16734 788494 606000) 0 nil])
([nil nil ((1482 . 1490) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 1482) (nil fontified nil 1526 . 1527) (nil fontified nil 1492 . 1526) (nil fontified nil 1490 . 1492) (nil fontified nil 1488 . 1490) (nil fontified nil 1482 . 1488) (1482 . 1527)) nil (25139 16734 788480 307000) 0 nil])
([nil nil ((#("0" 0 1 (ws-butler-chg chg fontified t)) . 1504)) nil (25139 16734 788464 106000) 0 nil])
([nil nil ((1504 . 1505)) nil (25139 16734 788447 406000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg rear-nonsticky t fontified t)) . -1528) (undo-tree-id88 . -1) 1529 (t 25139 16734 793059 644000)) nil (25139 16751 597858 349000) 0 nil])
([nil nil ((1481 . 1490)) nil (25139 16751 597842 649000) 0 nil])
([nil nil ((1490 . 1491)) nil (25139 16751 597830 349000) 0 nil])
([nil nil ((1491 . 1495)) nil (25139 16751 597817 849000) 0 nil])
([nil nil ((1495 . 1496)) nil (25139 16751 597805 449000) 0 nil])
([nil nil ((1496 . 1501)) nil (25139 16751 597793 149000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg chg)) . -1499) (undo-tree-id86 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -1500) (undo-tree-id87 . -1) 1501) nil (25139 16751 597779 949000) 0 nil])
([nil nil ((1499 . 1504)) nil (25139 16751 597763 550000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -1503) (undo-tree-id85 . -1) 1504) nil (25139 16751 597750 449000) 0 nil])
([nil nil ((1503 . 1504)) nil (25139 16751 597734 749000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -1496) (undo-tree-id77 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1497) (undo-tree-id78 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -1498) (undo-tree-id79 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -1499) (undo-tree-id80 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -1500) (undo-tree-id81 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1501) (undo-tree-id82 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg)) . -1502) (undo-tree-id83 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -1503) (undo-tree-id84 . -1) 1504) nil (25139 16751 597719 549000) 0 nil])
([nil nil ((1496 . 1501)) nil (25139 16751 597684 849000) 0 nil])
([nil nil ((1501 . 1502)) nil (25139 16751 597671 949000) 0 nil])
([nil nil ((1502 . 1504)) nil (25139 16751 597659 149000) 0 nil])
([nil nil ((1504 . 1505)) nil (25139 16751 597642 849000) 0 nil])
([nil nil ((1505 . 1514) (t 25139 16751 599725 666000)) nil (25139 16755 304570 409000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . 1506) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) 1514) nil (25139 16755 304553 609000) 0 nil])
([nil nil ((1506 . 1514) (t 25139 16755 309725 524000)) nil (25139 16800 35731 387000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1560 . 1561) (nil fontified nil 1558 . 1561) (nil fontified nil 1554 . 1558) (nil fontified nil 1552 . 1554) (nil fontified nil 1548 . 1552) (nil fontified nil 1547 . 1548) (nil fontified nil 1542 . 1547) (nil fontified nil 1541 . 1542) (nil fontified nil 1540 . 1541) (nil fontified nil 1539 . 1540) (nil fontified nil 1538 . 1539) (nil fontified nil 1535 . 1538) (nil fontified nil 1534 . 1535) (nil fontified nil 1533 . 1534) (nil fontified nil 1532 . 1533) (nil fontified nil 1531 . 1532) (nil fontified nil 1528 . 1531) (nil fontified nil 1527 . 1528) (nil fontified nil 1514 . 1527) (1514 . 1561)) nil (25139 16800 35717 87000) 0 nil])
([nil nil ((#("        item->render();
" 0 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg)) . 1482) (undo-tree-id140 . -24) (undo-tree-id141 . -24) (undo-tree-id142 . -24)) nil (25139 16800 35686 187000) 0 nil])
([nil nil ((1324 . 1331)) nil (25139 16800 35664 787000) 0 nil])
([nil nil ((1325 . 1331) (#("              " 0 6 (ws-butler-chg chg fontified nil) 6 14 (ws-butler-chg chg fontified nil)) . 1325) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (nil rear-nonsticky nil 1354 . 1355) (nil fontified nil 1354 . 1355) (nil fontified nil 1353 . 1354) (nil fontified nil 1352 . 1353) (nil fontified nil 1351 . 1352) (nil fontified nil 1350 . 1351) (nil fontified nil 1349 . 1350) (nil fontified nil 1348 . 1349) (nil fontified nil 1347 . 1348) (nil fontified nil 1346 . 1347) (nil fontified nil 1345 . 1346) (nil fontified nil 1344 . 1345) (nil fontified nil 1343 . 1344) (nil fontified nil 1342 . 1343) (nil fontified nil 1341 . 1342) (nil fontified nil 1340 . 1341) (nil fontified nil 1339 . 1340) (nil fontified nil 1331 . 1339) (1331 . 1355)) nil (25139 16800 35650 786000) 0 nil])
([nil nil ((#("        display_print(int x, int y, const char* text );
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 25 (ws-butler-chg chg fontified t face font-lock-type-face) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 27 28 (ws-butler-chg chg fontified t) 28 29 (ws-butler-chg chg fontified t) 29 32 (ws-butler-chg chg fontified t face font-lock-type-face) 32 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 34 35 (ws-butler-chg chg fontified t) 35 36 (ws-butler-chg chg fontified t) 36 41 (ws-butler-chg chg fontified t face font-lock-keyword-face) 41 42 (ws-butler-chg chg fontified t) 42 46 (ws-butler-chg chg fontified t face font-lock-type-face) 46 48 (ws-butler-chg chg fontified t) 48 52 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 52 54 (ws-butler-chg chg fontified t) 54 55 (ws-butler-chg chg rear-nonsticky t fontified t) 55 56 (ws-butler-chg delete fontified t)) . 1505)) nil (25139 16800 35628 987000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1560 . 1561) (nil fontified nil 1560 . 1561) (nil fontified nil 1559 . 1560) (nil fontified nil 1557 . 1559) (nil fontified nil 1553 . 1557) (nil fontified nil 1551 . 1553) (nil fontified nil 1547 . 1551) (nil fontified nil 1546 . 1547) (nil fontified nil 1541 . 1546) (nil fontified nil 1540 . 1541) (nil fontified nil 1539 . 1540) (nil fontified nil 1538 . 1539) (nil fontified nil 1537 . 1538) (nil fontified nil 1534 . 1537) (nil fontified nil 1533 . 1534) (nil fontified nil 1532 . 1533) (nil fontified nil 1531 . 1532) (nil fontified nil 1530 . 1531) (nil fontified nil 1527 . 1530) (nil fontified nil 1526 . 1527) (nil fontified nil 1513 . 1526) (nil fontified nil 1506 . 1513) (nil fontified nil 1505 . 1506) (1505 . 1561)) nil (25139 16800 35614 987000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1560 . 1561) (nil fontified nil 1560 . 1561) (nil fontified nil 1559 . 1560) (nil fontified nil 1557 . 1559) (nil fontified nil 1553 . 1557) (nil fontified nil 1551 . 1553) (nil fontified nil 1547 . 1551) (nil fontified nil 1546 . 1547) (nil fontified nil 1541 . 1546) (nil fontified nil 1540 . 1541) (nil fontified nil 1539 . 1540) (nil fontified nil 1538 . 1539) (nil fontified nil 1537 . 1538) (nil fontified nil 1534 . 1537) (nil fontified nil 1533 . 1534) (nil fontified nil 1532 . 1533) (nil fontified nil 1531 . 1532) (nil fontified nil 1530 . 1531) (nil fontified nil 1527 . 1530) (nil fontified nil 1526 . 1527) (nil fontified nil 1513 . 1526) (nil fontified nil 1506 . 1513) (nil fontified nil 1505 . 1506) (1505 . 1561)) nil (25139 16800 35595 87000) 0 nil])
([nil nil ((#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 1531)) nil (25139 16800 35576 887000) 0 nil])
([nil nil ((1531 . 1532)) nil (25139 16800 35563 587000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -1541) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -1542) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -1543) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -1544) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-keyword-face)) . -1545) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1546) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1547) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1548) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1549) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1550) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("*" 0 1 (ws-butler-chg chg fontified t)) . -1551) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1552) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -1553) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -1554) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -1555) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -1556) (undo-tree-id137 . -1) 1557) nil (25139 16800 35544 87000) 0 nil])
([nil nil ((1543 . 1544) (nil syntax-table nil 1546 . 1547) (nil syntax-table (1) 1541 . 1542) (1542 . 1543) (nil syntax-table nil 1545 . 1546) (nil syntax-table (1) 1541 . 1542) (1541 . 1542)) nil (25139 16800 35458 287000) 0 nil])
([nil nil ((#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 1574) (t 25139 16800 43057 153000)) nil (25139 16817 600691 250000) 0 nil])
([nil nil ((1574 . 1575)) nil (25139 16817 600678 350000) 0 nil])
([nil nil ((1587 . 1588) (nil syntax-table nil 1606 . 1607) (nil syntax-table (1) 1584 . 1585) (1586 . 1587) (nil syntax-table nil 1605 . 1606) (nil syntax-table (1) 1584 . 1585) (1585 . 1586) (nil syntax-table nil 1604 . 1605) (nil syntax-table (1) 1584 . 1585) (1584 . 1585)) nil (25139 16817 600665 150000) 0 nil])
([nil nil ((1588 . 1589)) nil (25139 16817 600649 950000) 0 nil])
([nil nil ((1589 . 1590)) nil (25139 16817 600633 450000) 0 nil])
([nil nil ((1347 . 1354) (t 25139 16817 603056 487000)) nil (25139 16885 595435 158000) 0 nil])
([nil nil ((1348 . 1355) (#("      " 0 6 (fontified t ws-butler-chg chg)) . 1348) (undo-tree-id147 . -6) 1354) nil (25139 16885 595421 458000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t ws-butler-chg chg)) . 1349) (undo-tree-id146 . -6) 1355) nil (25139 16885 595219 459000) 0 nil])
([nil nil ((1347 . 1353)) nil (25139 16885 595203 959000) 0 nil])
([nil nil ((1353 . 1354)) nil (25139 16885 595191 358000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -1353) (undo-tree-id145 . -1) 1354) nil (25139 16885 595177 958000) 0 nil])
([nil nil ((1353 . 1364)) nil (25139 16885 595161 858000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t ws-butler-chg chg)) . -1362) (undo-tree-id143 . -1) (#("2" 0 1 (fontified t ws-butler-chg chg)) . -1363) (undo-tree-id144 . -1) 1364) nil (25139 16885 595147 758000) 0 nil])
([nil nil ((1362 . 1365)) nil (25139 16885 595122 659000) 0 nil])
([nil nil ((1365 . 1366)) nil (25139 16885 595109 558000) 0 nil])
([nil nil ((1366 . 1373)) nil (25139 16885 595097 159000) 0 nil])
([nil nil ((1373 . 1381)) nil (25139 16885 595084 458000) 0 nil])
([nil nil ((1381 . 1382)) nil (25139 16885 595071 758000) 0 nil])
([nil nil ((1382 . 1386)) nil (25139 16885 595059 258000) 0 nil])
([nil nil ((1386 . 1388)) nil (25139 16885 595046 658000) 0 nil])
([nil nil ((1382 . 1383)) nil (25139 16885 595034 158000) 0 nil])
([nil nil ((1389 . 1390)) nil (25139 16885 595021 658000) 0 nil])
([nil nil ((1390 . 1392)) nil (25139 16885 595008 959000) 0 nil])
([nil nil ((1392 . 1393)) nil (25139 16885 594996 459000) 0 nil])
([nil nil ((1393 . 1394)) nil (25139 16885 594983 958000) 0 nil])
([nil nil ((1394 . 1399)) nil (25139 16885 594971 358000) 0 nil])
([nil nil ((1399 . 1400)) nil (25139 16885 594958 858000) 0 nil])
([nil nil ((1400 . 1405)) nil (25139 16885 594946 158000) 0 nil])
([nil nil ((1405 . 1406)) nil (25139 16885 594932 959000) 0 nil])
([nil nil ((1406 . 1407)) nil (25139 16885 594916 358000) 0 nil])
([nil nil ((1395 . 1397) (nil syntax-table nil 1408 . 1409) (nil syntax-table (1) 1394 . 1395) (1394 . 1395) (t 25139 16885 599720 572000)) nil (25139 16933 613626 241000) 0 nil])
([nil nil ((#("7" 0 1 (fontified t ws-butler-chg chg)) . -1391) (undo-tree-id157 . -1) 1392) nil (25139 16933 613608 841000) 0 nil])
([nil nil ((1391 . 1392)) nil (25139 16933 613593 441000) 0 nil])
([nil nil ((1392 . 1393)) nil (25139 16933 613580 941000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t ws-butler-chg chg)) . -1392) (undo-tree-id156 . -1) 1393) nil (25139 16933 613568 141000) 0 nil])
([nil nil ((1392 . 1393)) nil (25139 16933 613552 641000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -1391) (undo-tree-id154 . -1) (#("4" 0 1 (fontified t ws-butler-chg chg)) . -1392) (undo-tree-id155 . -1) 1393) nil (25139 16933 613539 541000) 0 nil])
([nil nil ((1391 . 1392)) nil (25139 16933 613522 841000) 0 nil])
([nil nil ((1395 . 1397)) nil (25139 16933 613510 341000) 0 nil])
([nil nil ((#("      snprintf(&buf[1], 7, \"%s\" item->title);
" 0 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg delete) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg face font-lock-string-face) 28 29 (fontified t ws-butler-chg chg face font-lock-string-face) 29 30 (fontified t ws-butler-chg chg face font-lock-string-face) 30 31 (fontified t ws-butler-chg chg face font-lock-string-face) 31 32 (fontified t ws-butler-chg chg) 32 33 (fontified t ws-butler-chg chg) 33 34 (fontified t ws-butler-chg chg) 34 35 (fontified t ws-butler-chg chg) 35 36 (fontified t ws-butler-chg chg) 36 37 (fontified t ws-butler-chg chg) 37 38 (fontified t ws-butler-chg chg) 38 39 (fontified t ws-butler-chg chg) 39 40 (fontified t ws-butler-chg chg) 40 41 (fontified t ws-butler-chg chg) 41 42 (fontified t ws-butler-chg chg) 42 43 (fontified t ws-butler-chg chg) 43 44 (fontified t ws-butler-chg chg) 44 45 (ws-butler-chg chg fontified t) 45 46 (ws-butler-chg delete fontified t)) . 1367)) nil (25139 16933 613497 341000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1412 . 1413) (nil fontified nil 1412 . 1413) (nil fontified nil 1411 . 1412) (nil fontified nil 1410 . 1411) (nil fontified nil 1409 . 1410) (nil fontified nil 1408 . 1409) (nil fontified nil 1407 . 1408) (nil fontified nil 1406 . 1407) (nil fontified nil 1405 . 1406) (nil fontified nil 1404 . 1405) (nil fontified nil 1403 . 1404) (nil fontified nil 1402 . 1403) (nil fontified nil 1401 . 1402) (nil fontified nil 1400 . 1401) (nil fontified nil 1399 . 1400) (nil fontified nil 1398 . 1399) (nil fontified nil 1397 . 1398) (nil fontified nil 1396 . 1397) (nil fontified nil 1395 . 1396) (nil fontified nil 1394 . 1395) (nil fontified nil 1393 . 1394) (nil fontified nil 1392 . 1393) (nil fontified nil 1391 . 1392) (nil fontified nil 1390 . 1391) (nil fontified nil 1389 . 1390) (nil fontified nil 1388 . 1389) (nil fontified nil 1387 . 1388) (nil fontified nil 1386 . 1387) (nil fontified nil 1385 . 1386) (nil fontified nil 1384 . 1385) (nil fontified nil 1383 . 1384) (nil fontified nil 1382 . 1383) (nil fontified nil 1381 . 1382) (nil fontified nil 1380 . 1381) (nil fontified nil 1379 . 1380) (nil fontified nil 1378 . 1379) (nil fontified nil 1377 . 1378) (nil fontified nil 1376 . 1377) (nil fontified nil 1375 . 1376) (nil fontified nil 1374 . 1375) (nil fontified nil 1373 . 1374) (nil fontified nil 1367 . 1373) (1367 . 1413)) nil (25139 16933 613482 941000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1458 . 1459) (nil fontified nil 1458 . 1459) (nil fontified nil 1457 . 1458) (nil fontified nil 1456 . 1457) (nil fontified nil 1455 . 1456) (nil fontified nil 1454 . 1455) (nil fontified nil 1453 . 1454) (nil fontified nil 1452 . 1453) (nil fontified nil 1451 . 1452) (nil fontified nil 1450 . 1451) (nil fontified nil 1449 . 1450) (nil fontified nil 1448 . 1449) (nil fontified nil 1447 . 1448) (nil fontified nil 1446 . 1447) (nil fontified nil 1445 . 1446) (nil fontified nil 1444 . 1445) (nil fontified nil 1443 . 1444) (nil fontified nil 1442 . 1443) (nil fontified nil 1441 . 1442) (nil fontified nil 1440 . 1441) (nil fontified nil 1439 . 1440) (nil fontified nil 1438 . 1439) (nil fontified nil 1437 . 1438) (nil fontified nil 1436 . 1437) (nil fontified nil 1435 . 1436) (nil fontified nil 1434 . 1435) (nil fontified nil 1433 . 1434) (nil fontified nil 1432 . 1433) (nil fontified nil 1431 . 1432) (nil fontified nil 1430 . 1431) (nil fontified nil 1429 . 1430) (nil fontified nil 1428 . 1429) (nil fontified nil 1427 . 1428) (nil fontified nil 1426 . 1427) (nil fontified nil 1425 . 1426) (nil fontified nil 1424 . 1425) (nil fontified nil 1423 . 1424) (nil fontified nil 1422 . 1423) (nil fontified nil 1421 . 1422) (nil fontified nil 1420 . 1421) (nil fontified nil 1419 . 1420) (nil fontified nil 1413 . 1419) (1413 . 1459)) nil (25139 16933 613458 941000) 0 nil])
([nil nil ((#("1" 0 1 (ws-butler-chg chg fontified t)) . -1433) (undo-tree-id153 . -1) 1434) nil (25139 16933 613435 541000) 0 nil])
([nil nil ((1433 . 1434)) nil (25139 16933 613420 241000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -1451) (undo-tree-id148 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -1452) (undo-tree-id149 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -1453) (undo-tree-id150 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -1454) (undo-tree-id151 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -1455) (undo-tree-id152 . -1) 1456) nil (25139 16933 613405 441000) 0 nil])
([nil nil ((1451 . 1456)) nil (25139 16933 613372 941000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 1459) (undo-tree-id158 . -1) (t 25139 16933 619718 751000)) nil (25139 16937 82150 565000) 0 nil])
([nil nil ((#("        display_print(int 0, int y, \" \" );
" 0 1 (ws-butler-chg chg fontified t) 1 8 (ws-butler-chg chg fontified t) 8 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 25 (ws-butler-chg chg fontified t face font-lock-type-face) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg delete fontified t) 28 29 (ws-butler-chg chg fontified t) 29 32 (ws-butler-chg chg fontified t face font-lock-type-face) 32 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 34 35 (ws-butler-chg chg fontified t) 35 36 (ws-butler-chg chg fontified t) 36 37 (ws-butler-chg chg fontified t face font-lock-string-face) 37 38 (ws-butler-chg chg fontified t face font-lock-string-face) 38 39 (ws-butler-chg chg fontified t face font-lock-string-face) 39 40 (ws-butler-chg delete fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg rear-nonsticky t fontified t) 42 43 (ws-butler-chg chg rear-nonsticky t fontified t)) . 1617) (t 25139 16937 86385 284000)) nil (25139 17016 585479 806000) 0 nil])
([nil nil ((1734 . 1740) (#("        " 0 1 (ws-butler-chg chg fontified nil) 1 8 (ws-butler-chg chg fontified nil)) . 1734) (nil fontified nil 1776 . 1777) (nil fontified nil 1775 . 1776) (nil fontified nil 1774 . 1775) (nil fontified nil 1773 . 1774) (nil fontified nil 1772 . 1773) (nil fontified nil 1771 . 1772) (nil fontified nil 1770 . 1771) (nil fontified nil 1769 . 1770) (nil fontified nil 1768 . 1769) (nil fontified nil 1767 . 1768) (nil fontified nil 1766 . 1767) (nil fontified nil 1763 . 1766) (nil fontified nil 1762 . 1763) (nil fontified nil 1761 . 1762) (nil fontified nil 1760 . 1761) (nil fontified nil 1759 . 1760) (nil fontified nil 1756 . 1759) (nil fontified nil 1755 . 1756) (nil fontified nil 1742 . 1755) (nil fontified nil 1735 . 1742) (nil fontified nil 1734 . 1735) (1734 . 1777)) nil (25139 17016 585465 406000) 0 nil])
([nil nil ((1459 . 1465)) nil (25139 17016 585447 406000) 0 nil])
([nil nil ((1465 . 1467)) nil (25139 17016 585434 707000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id172 . -1) 1467) nil (25139 17016 585421 306000) 0 nil])
([nil nil ((1466 . 1472)) nil (25139 17016 585405 506000) 0 nil])
([nil nil ((1472 . 1475)) nil (25139 17016 585392 706000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -1474) (undo-tree-id171 . -1) (nil syntax-table nil 1475 . 1476) (nil syntax-table (1) 1474 . 1475)) nil (25139 17016 585379 506000) 0 nil])
([nil nil ((1474 . 1478)) nil (25139 17016 585362 906000) 0 nil])
([nil nil ((1478 . 1487)) nil (25139 17016 585349 706000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -1477) (undo-tree-id161 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -1478) (undo-tree-id162 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1479) (undo-tree-id163 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1480) (undo-tree-id164 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1481) (undo-tree-id165 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1482) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1483) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1484) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1485) (undo-tree-id169 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1486) (undo-tree-id170 . -1) 1487) nil (25139 17016 585137 6000) 0 nil])
([nil nil ((1477 . 1478)) nil (25139 17016 585108 206000) 0 nil])
([nil nil ((1478 . 1485)) nil (25139 17016 585095 706000) 0 nil])
([nil nil ((1485 . 1486)) nil (25139 17016 585083 206000) 0 nil])
([nil nil ((1486 . 1499)) nil (25139 17016 585070 606000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -1498) (undo-tree-id159 . -1) (undo-tree-id160 . -1) 1499) nil (25139 17016 585057 6000) 0 nil])
([nil nil ((1498 . 1499)) nil (25139 17016 585028 206000) 0 nil])
([nil nil ((#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-warning-face)) . -1808) (undo-tree-id204 . -1) (nil syntax-table nil 1812 . 1813) (nil syntax-table (1) 1808 . 1809) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1809) (undo-tree-id205 . -1) (nil syntax-table nil 1813 . 1814) (nil syntax-table (1) 1808 . 1809) (#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1810) (undo-tree-id206 . -1) 1811 (t 25139 17016 589715 587000)) nil (25139 17034 664158 546000) 0 nil])
([nil nil ((1808 . 1811)) nil (25139 17034 664139 746000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t)) . -1801) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -1802) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -1803) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1804) (undo-tree-id203 . -1) 1805) nil (25139 17034 664125 646000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . -1807) (undo-tree-id187 . -1) 1808) nil (25139 17034 664094 346000) 0 nil])
([nil nil ((#(" else {" 0 1 (ws-butler-chg chg fontified t) 1 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t)) . 1649) (undo-tree-id186 . -7)) nil (25139 17034 664078 546000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 1649) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("        " 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t)) . -1650) 1649) nil (25139 17034 664061 746000) 0 nil])
([nil nil ((#("display_print(int 1, int y, \"%s\", const char* text );" 0 1 (ws-butler-chg delete fontified t) 1 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 17 (ws-butler-chg chg fontified t face font-lock-type-face) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg delete fontified t) 20 21 (ws-butler-chg chg fontified t) 21 24 (ws-butler-chg chg fontified t face font-lock-type-face) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t) 28 29 (ws-butler-chg chg fontified t face font-lock-string-face) 29 30 (ws-butler-chg chg fontified t face font-lock-string-face) 30 31 (ws-butler-chg chg fontified t face font-lock-string-face) 31 32 (ws-butler-chg chg fontified t face font-lock-string-face) 32 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg fontified t) 34 39 (ws-butler-chg chg fontified t face font-lock-keyword-face) 39 40 (ws-butler-chg chg fontified t) 40 44 (ws-butler-chg chg fontified t face font-lock-type-face) 44 46 (ws-butler-chg chg fontified t) 46 50 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 50 52 (ws-butler-chg chg fontified t) 52 53 (ws-butler-chg chg rear-nonsticky t fontified t)) . 1649) (undo-tree-id179 . -53)) nil (25139 17034 663916 646000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete rear-nonsticky t fontified t)) . 1649) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("        " 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t)) . -1650) 1649) nil (25139 17034 663900 746000) 0 nil])
([nil nil ((#("item->display(1, y - first_line, opt);" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 4 (ws-butler-chg chg fontified t) 4 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg delete fontified t) 16 31 (ws-butler-chg chg fontified t) 31 32 (ws-butler-chg chg fontified t) 32 38 (ws-butler-chg chg fontified t)) . 1649) (undo-tree-id176 . -38)) nil (25139 17034 663883 346000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 1649) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("      " 0 6 (ws-butler-chg chg fontified t)) . -1650) 1649) nil (25139 17034 663867 146000) 0 nil])
([nil nil ((#("}" 0 1 (ws-butler-chg delete fontified t)) . 1649) (undo-tree-id173 . -1)) nil (25139 17034 663847 346000) 0 nil])
([nil nil ((1522 . 1531) (t 25139 17034 669714 898000)) nil (25139 17095 911681 727000) 0 nil])
([nil nil ((1531 . 1534)) nil (25139 17095 911669 27000) 0 nil])
([nil nil ((1534 . 1535)) nil (25139 17095 911656 427000) 0 nil])
([nil nil ((1535 . 1540)) nil (25139 17095 911643 827000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1539) (undo-tree-id218 . -1) 1540) nil (25139 17095 911630 727000) 0 nil])
([nil nil ((1539 . 1540)) nil (25139 17095 911615 327000) 0 nil])
([nil nil ((1540 . 1541)) nil (25139 17095 911602 527000) 0 nil])
([nil nil ((1541 . 1542)) nil (25139 17095 911589 927000) 0 nil])
([nil nil ((1542 . 1553)) nil (25139 17095 911577 327000) 0 nil])
([nil nil ((1543 . 1551) (#("          " 0 10 (ws-butler-chg chg fontified nil)) . 1543) (undo-tree-id217 . -10) (1553 . 1554)) nil (25139 17095 911564 127000) 0 nil])
([nil nil ((#("      buf[0] = ' ';
" 0 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg face font-lock-string-face) 16 17 (fontified t ws-butler-chg chg face font-lock-string-face) 17 18 (fontified t ws-butler-chg chg face font-lock-string-face) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg)) . 1459)) nil (25139 17095 911548 27000) 0 nil])
([nil nil ((#("      buf[15] = ' ';
" 0 1 (fontified t ws-butler-chg delete) 1 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg face font-lock-string-face) 17 18 (fontified t ws-butler-chg chg face font-lock-string-face) 18 19 (fontified t ws-butler-chg chg face font-lock-string-face) 19 20 (fontified t ws-butler-chg chg) 20 21 (ws-butler-chg delete fontified t)) . 1459)) nil (25139 17095 911535 327000) 0 nil])
([nil nil ((#("      if (y == line) {
" 0 1 (ws-butler-chg delete fontified t) 1 6 (ws-butler-chg chg fontified t) 6 8 (ws-butler-chg chg fontified t face font-lock-keyword-face) 8 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t)) . 1459)) nil (25139 17095 911522 527000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1522 . 1523) (nil fontified nil 1522 . 1523) (nil fontified nil 1521 . 1522) (nil fontified nil 1520 . 1521) (nil fontified nil 1508 . 1520) (nil fontified nil 1506 . 1508) (nil fontified nil 1501 . 1506) (nil fontified nil 1500 . 1501) (nil fontified nil 1499 . 1500) (nil fontified nil 1498 . 1499) (nil fontified nil 1497 . 1498) (nil fontified nil 1496 . 1497) (nil fontified nil 1495 . 1496) (nil fontified nil 1494 . 1495) (nil fontified nil 1493 . 1494) (nil fontified nil 1492 . 1493) (nil fontified nil 1491 . 1492) (nil fontified nil 1490 . 1491) (nil fontified nil 1489 . 1490) (nil fontified nil 1488 . 1489) (nil fontified nil 1487 . 1488) (nil fontified nil 1486 . 1487) (nil fontified nil 1485 . 1486) (nil fontified nil 1480 . 1485) (nil fontified nil 1479 . 1480) (nil fontified nil 1478 . 1479) (nil fontified nil 1477 . 1478) (nil fontified nil 1476 . 1477) (nil fontified nil 1475 . 1476) (nil fontified nil 1474 . 1475) (nil fontified nil 1473 . 1474) (nil fontified nil 1472 . 1473) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (nil fontified nil 1469 . 1470) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1466 . 1467) (nil fontified nil 1465 . 1466) (nil fontified nil 1459 . 1465) (1459 . 1523)) nil (25139 17095 911508 27000) 0 nil])
([nil nil ((#("      buf[0] = ' ';
" 0 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t face font-lock-string-face) 16 17 (ws-butler-chg chg fontified t face font-lock-string-face) 17 18 (ws-butler-chg chg fontified t face font-lock-string-face) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t)) . 1459)) nil (25139 17095 911460 127000) 0 nil])
([nil nil ((#("      buf[15] = ' ';
" 0 1 (ws-butler-chg delete fontified t) 1 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t face font-lock-string-face) 17 18 (ws-butler-chg chg fontified t face font-lock-string-face) 18 19 (ws-butler-chg chg fontified t face font-lock-string-face) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t)) . 1459)) nil (25139 17095 911447 427000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1499 . 1500) (nil fontified nil 1499 . 1500) (nil fontified nil 1498 . 1499) (nil fontified nil 1497 . 1498) (nil fontified nil 1496 . 1497) (nil fontified nil 1495 . 1496) (nil fontified nil 1494 . 1495) (nil fontified nil 1493 . 1494) (nil fontified nil 1492 . 1493) (nil fontified nil 1491 . 1492) (nil fontified nil 1490 . 1491) (nil fontified nil 1489 . 1490) (nil fontified nil 1488 . 1489) (nil fontified nil 1487 . 1488) (nil fontified nil 1486 . 1487) (nil fontified nil 1485 . 1486) (nil fontified nil 1480 . 1485) (nil fontified nil 1479 . 1480) (nil fontified nil 1478 . 1479) (nil fontified nil 1477 . 1478) (nil fontified nil 1476 . 1477) (nil fontified nil 1475 . 1476) (nil fontified nil 1474 . 1475) (nil fontified nil 1473 . 1474) (nil fontified nil 1472 . 1473) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (nil fontified nil 1469 . 1470) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1466 . 1467) (nil fontified nil 1465 . 1466) (nil fontified nil 1459 . 1465) (1459 . 1500)) nil (25139 17095 911433 527000) 0 nil])
([nil nil ((1542 . 1553)) nil (25139 17095 911413 427000) 0 nil])
([nil nil ((1567 . 1577) (#("      " 0 1 (ws-butler-chg chg fontified nil) 1 6 (ws-butler-chg chg fontified nil)) . 1567) (1543 . 1553) (#("                " 0 10 (ws-butler-chg chg fontified nil) 10 16 (ws-butler-chg chg fontified nil)) . 1543) (undo-tree-id215 . -10) (undo-tree-id216 . -10) (nil rear-nonsticky nil 1593 . 1594) (nil fontified nil 1593 . 1594) (nil fontified nil 1592 . 1593) (nil fontified nil 1591 . 1592) (nil fontified nil 1590 . 1591) (nil fontified nil 1589 . 1590) (nil fontified nil 1588 . 1589) (nil fontified nil 1587 . 1588) (nil fontified nil 1586 . 1587) (nil fontified nil 1585 . 1586) (nil fontified nil 1584 . 1585) (nil fontified nil 1583 . 1584) (nil fontified nil 1582 . 1583) (nil fontified nil 1581 . 1582) (nil fontified nil 1580 . 1581) (nil fontified nil 1579 . 1580) (nil fontified nil 1574 . 1579) (nil fontified nil 1573 . 1574) (nil fontified nil 1572 . 1573) (nil fontified nil 1571 . 1572) (nil fontified nil 1570 . 1571) (nil fontified nil 1569 . 1570) (nil fontified nil 1568 . 1569) (nil fontified nil 1567 . 1568) (nil fontified nil 1566 . 1567) (nil fontified nil 1565 . 1566) (nil fontified nil 1564 . 1565) (nil fontified nil 1563 . 1564) (nil fontified nil 1562 . 1563) (nil fontified nil 1561 . 1562) (nil fontified nil 1560 . 1561) (nil fontified nil 1559 . 1560) (nil fontified nil 1553 . 1559) (1553 . 1594)) nil (25139 17095 911398 427000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -1591) (undo-tree-id214 . -1) 1592) nil (25139 17095 911373 427000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1588) (undo-tree-id213 . -1) 1589) nil (25139 17095 911357 427000) 0 nil])
([nil nil ((1588 . 1589)) nil (25139 17095 911342 27000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1563) (undo-tree-id212 . -1) 1564) nil (25139 17095 911329 127000) 0 nil])
([nil nil ((1563 . 1564)) nil (25139 17095 911313 327000) 0 nil])
([nil nil ((1601 . 1610)) nil (25139 17095 911300 927000) 0 nil])
([nil nil ((#("        " 0 8 (ws-butler-chg chg fontified t)) . 1602) (undo-tree-id211 . -8) 1610) nil (25139 17095 911287 727000) 0 nil])
([nil nil ((1601 . 1606)) nil (25139 17095 911272 227000) 0 nil])
([nil nil ((1606 . 1607) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 1606) (undo-tree-id210 . -4) (1602 . 1606) 1606) nil (25139 17095 911259 127000) 0 nil])
([nil nil ((1607 . 1608)) nil (25139 17095 911243 327000) 0 nil])
([nil nil ((1608 . 1619)) nil (25139 17095 911230 827000) 0 nil])
([nil nil ((1609 . 1617) (#("          " 0 10 (fontified nil ws-butler-chg chg)) . 1609) (undo-tree-id209 . -10) (1619 . 1620)) nil (25139 17095 911217 627000) 0 nil])
([nil nil ((#("          buf[0] = '[';
" 0 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg delete fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t face font-lock-string-face) 20 21 (ws-butler-chg chg fontified t face font-lock-string-face) 21 22 (ws-butler-chg delete fontified t face font-lock-string-face) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t)) . 1543)) nil (25139 17095 911201 527000) 0 nil])
([nil nil ((#("          buf[15] = ']';
" 0 1 (ws-butler-chg delete fontified t) 1 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg delete fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t face font-lock-string-face) 21 22 (ws-butler-chg chg fontified t face font-lock-string-face) 22 23 (ws-butler-chg delete fontified t face font-lock-string-face) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg delete fontified t)) . 1543)) nil (25139 17095 911188 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1591 . 1592) (nil fontified nil 1591 . 1592) (nil fontified nil 1590 . 1591) (nil fontified nil 1589 . 1590) (nil fontified nil 1588 . 1589) (nil fontified nil 1587 . 1588) (nil fontified nil 1586 . 1587) (nil fontified nil 1585 . 1586) (nil fontified nil 1584 . 1585) (nil fontified nil 1583 . 1584) (nil fontified nil 1582 . 1583) (nil fontified nil 1581 . 1582) (nil fontified nil 1580 . 1581) (nil fontified nil 1579 . 1580) (nil fontified nil 1578 . 1579) (nil fontified nil 1577 . 1578) (nil fontified nil 1568 . 1577) (nil fontified nil 1567 . 1568) (nil fontified nil 1566 . 1567) (nil fontified nil 1565 . 1566) (nil fontified nil 1564 . 1565) (nil fontified nil 1563 . 1564) (nil fontified nil 1562 . 1563) (nil fontified nil 1561 . 1562) (nil fontified nil 1560 . 1561) (nil fontified nil 1559 . 1560) (nil fontified nil 1558 . 1559) (nil fontified nil 1557 . 1558) (nil fontified nil 1556 . 1557) (nil fontified nil 1555 . 1556) (nil fontified nil 1554 . 1555) (nil fontified nil 1553 . 1554) (nil fontified nil 1543 . 1553) (1543 . 1592)) nil (25139 17095 911174 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1657 . 1658) (nil fontified nil 1657 . 1658) (nil fontified nil 1656 . 1657) (nil fontified nil 1655 . 1656) (nil fontified nil 1654 . 1655) (nil fontified nil 1653 . 1654) (nil fontified nil 1652 . 1653) (nil fontified nil 1651 . 1652) (nil fontified nil 1650 . 1651) (nil fontified nil 1649 . 1650) (nil fontified nil 1648 . 1649) (nil fontified nil 1647 . 1648) (nil fontified nil 1646 . 1647) (nil fontified nil 1645 . 1646) (nil fontified nil 1644 . 1645) (nil fontified nil 1643 . 1644) (nil fontified nil 1634 . 1643) (nil fontified nil 1633 . 1634) (nil fontified nil 1632 . 1633) (nil fontified nil 1631 . 1632) (nil fontified nil 1630 . 1631) (nil fontified nil 1629 . 1630) (nil fontified nil 1628 . 1629) (nil fontified nil 1627 . 1628) (nil fontified nil 1626 . 1627) (nil fontified nil 1625 . 1626) (nil fontified nil 1624 . 1625) (nil fontified nil 1623 . 1624) (nil fontified nil 1622 . 1623) (nil fontified nil 1621 . 1622) (nil fontified nil 1620 . 1621) (nil fontified nil 1619 . 1620) (nil fontified nil 1609 . 1619) (1609 . 1658)) nil (25139 17095 911153 227000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1629) (undo-tree-id208 . -1) 1630) nil (25139 17095 911132 627000) 0 nil])
([nil nil ((1629 . 1630)) nil (25139 17095 911116 827000) 0 nil])
([nil nil ((#("]" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1654) (undo-tree-id207 . -1) 1655) nil (25139 17095 911103 427000) 0 nil])
([nil nil ((1654 . 1655)) nil (25139 17095 911075 327000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 1668) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (t 25139 17095 916379 236000)) nil (25139 17100 991206 797000) 0 nil])
([nil nil ((#("        item->display(0, y - first_line, opt);
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg delete fontified t) 9 10 (ws-butler-chg chg fontified t) 10 12 (ws-butler-chg chg fontified t) 12 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 46 (ws-butler-chg chg fontified t) 46 47 (ws-butler-chg chg rear-nonsticky t fontified t)) . 1668) (undo-tree-id220 . -47)) nil (25139 17100 991185 697000) 0 nil])
([nil nil ((#("        opt = edit ? MenuRenderOption::Edit : MenuRenderOption::Select;
" 0 1 (ws-butler-chg delete fontified t) 1 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg delete fontified t) 19 21 (ws-butler-chg chg fontified t) 21 37 (ws-butler-chg chg fontified t face font-lock-constant-face) 37 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg fontified t) 42 46 (ws-butler-chg chg fontified t) 46 62 (ws-butler-chg chg fontified t face font-lock-constant-face) 62 63 (ws-butler-chg chg fontified t) 63 71 (ws-butler-chg chg fontified t) 71 72 (ws-butler-chg chg fontified t)) . 1668) (undo-tree-id219 . -72)) nil (25139 17100 991167 297000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg rear-nonsticky t fontified t)) . -1711) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 1712 (t 25139 17100 999712 376000)) nil (25139 17102 445492 318000) 0 nil])
([nil nil ((721 . 726) (t 25139 17102 453045 654000)) nil (25139 17156 184707 757000) 0 nil])
([nil nil ((726 . 728)) nil (25139 17156 184694 656000) 0 nil])
([nil nil ((555 . 558)) nil (25139 17156 184682 57000) 0 nil])
([nil nil ((558 . 561)) nil (25139 17156 184669 457000) 0 nil])
([nil nil ((561 . 562)) nil (25139 17156 184656 957000) 0 nil])
([nil nil ((562 . 564)) nil (25139 17156 184644 357000) 0 nil])
([nil nil ((564 . 580)) nil (25139 17156 184631 556000) 0 nil])
([nil nil ((580 . 581)) nil (25139 17156 184618 956000) 0 nil])
([nil nil ((581 . 586)) nil (25139 17156 184606 57000) 0 nil])
([nil nil ((586 . 592)) nil (25139 17156 184593 457000) 0 nil])
([nil nil ((592 . 593)) nil (25139 17156 184576 57000) 0 nil])
([nil nil ((593 . 596) (t 25139 17156 189710 271000)) nil (25139 17163 700433 493000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t)) . 594) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) 596) nil (25139 17163 700419 794000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -737) (undo-tree-id227 . -1) (undo-tree-id228 . -1) 738) nil (25139 17163 700398 593000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -668) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 669) nil (25139 17163 700378 794000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -763) (undo-tree-id234 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -764) (undo-tree-id235 . -1) 765 (t 25139 17163 706376 650000)) nil (25139 17183 449161 86000) 0 nil])
([nil nil ((763 . 771)) nil (25139 17183 449134 485000) 0 nil])
([nil nil ((771 . 772)) nil (25139 17183 449121 785000) 0 nil])
([nil nil ((772 . 780)) nil (25139 17183 449109 85000) 0 nil])
([nil nil ((780 . 781)) nil (25139 17183 449096 285000) 0 nil])
([nil nil ((781 . 784)) nil (25139 17183 449083 585000) 0 nil])
([nil nil ((784 . 785)) nil (25139 17183 449070 885000) 0 nil])
([nil nil ((785 . 786)) nil (25139 17183 449054 186000) 0 nil])
([nil nil ((#("    current->on_event(evt);
" 0 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg delete fontified t)) . 759) (undo-tree-id236 . -21) (undo-tree-id237 . -27) (t 25139 17183 456375 898000)) nil (25139 17187 793062 342000) 0 nil])
([nil nil ((nil rear-nonsticky nil 786 . 787) (nil fontified nil 786 . 787) (nil fontified nil 785 . 786) (nil fontified nil 784 . 785) (nil fontified nil 783 . 784) (nil fontified nil 782 . 783) (nil fontified nil 781 . 782) (nil fontified nil 780 . 781) (nil fontified nil 779 . 780) (nil fontified nil 778 . 779) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 774 . 775) (nil fontified nil 773 . 774) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 770 . 771) (nil fontified nil 769 . 770) (nil fontified nil 768 . 769) (nil fontified nil 767 . 768) (nil fontified nil 766 . 767) (nil fontified nil 765 . 766) (nil fontified nil 764 . 765) (nil fontified nil 763 . 764) (nil fontified nil 759 . 763) (759 . 787)) nil (25139 17187 793034 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 849 . 850) (nil fontified nil 849 . 850) (nil fontified nil 848 . 849) (nil fontified nil 847 . 848) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 844 . 845) (nil fontified nil 843 . 844) (nil fontified nil 842 . 843) (nil fontified nil 841 . 842) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 836 . 837) (nil fontified nil 835 . 836) (nil fontified nil 834 . 835) (nil fontified nil 833 . 834) (nil fontified nil 832 . 833) (nil fontified nil 831 . 832) (nil fontified nil 830 . 831) (nil fontified nil 829 . 830) (nil fontified nil 828 . 829) (nil fontified nil 827 . 828) (nil fontified nil 826 . 827) (nil fontified nil 822 . 826) (822 . 850)) nil (25139 17187 793010 142000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -896) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 897 (t 25139 17187 799709 64000)) nil (25139 17198 913878 930000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -931) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 932) nil (25139 17198 913859 230000) 0 nil])
([nil nil ((885 . 890) (t 25139 17198 919708 643000)) nil (25139 17207 488164 932000) 0 nil])
([nil nil ((886 . 890) (#("        " 0 4 (ws-butler-chg chg fontified nil) 4 8 (ws-butler-chg chg fontified nil)) . 886) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (nil rear-nonsticky nil 917 . 918) (nil fontified nil 917 . 918) (nil fontified nil 916 . 917) (nil fontified nil 915 . 916) (nil fontified nil 914 . 915) (nil fontified nil 913 . 914) (nil fontified nil 912 . 913) (nil fontified nil 911 . 912) (nil fontified nil 910 . 911) (nil fontified nil 909 . 910) (nil fontified nil 908 . 909) (nil fontified nil 907 . 908) (nil fontified nil 906 . 907) (nil fontified nil 905 . 906) (nil fontified nil 904 . 905) (nil fontified nil 903 . 904) (nil fontified nil 902 . 903) (nil fontified nil 901 . 902) (nil fontified nil 900 . 901) (nil fontified nil 899 . 900) (nil fontified nil 898 . 899) (nil fontified nil 897 . 898) (nil fontified nil 896 . 897) (nil fontified nil 895 . 896) (nil fontified nil 894 . 895) (nil fontified nil 890 . 894) (890 . 918)) nil (25139 17207 488150 532000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -913) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 914) nil (25139 17207 488127 132000) 0 nil])
([nil nil ((948 . 953)) nil (25139 17207 488110 732000) 0 nil])
([nil nil ((949 . 953) (#("        " 0 4 (ws-butler-chg chg fontified nil) 4 8 (ws-butler-chg chg fontified nil)) . 949) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (nil rear-nonsticky nil 980 . 981) (nil fontified nil 980 . 981) (nil fontified nil 979 . 980) (nil fontified nil 978 . 979) (nil fontified nil 977 . 978) (nil fontified nil 976 . 977) (nil fontified nil 975 . 976) (nil fontified nil 974 . 975) (nil fontified nil 973 . 974) (nil fontified nil 972 . 973) (nil fontified nil 971 . 972) (nil fontified nil 970 . 971) (nil fontified nil 969 . 970) (nil fontified nil 968 . 969) (nil fontified nil 967 . 968) (nil fontified nil 966 . 967) (nil fontified nil 965 . 966) (nil fontified nil 964 . 965) (nil fontified nil 963 . 964) (nil fontified nil 962 . 963) (nil fontified nil 961 . 962) (nil fontified nil 960 . 961) (nil fontified nil 959 . 960) (nil fontified nil 958 . 959) (nil fontified nil 957 . 958) (nil fontified nil 953 . 957) (953 . 981)) nil (25139 17207 488096 532000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -976) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 977) nil (25139 17207 488068 432000) 0 nil])
([nil nil ((1878 . 1881) (t 25139 17207 493041 654000)) nil (25139 17867 612577 58000) 0 nil])
([nil nil ((1898 . 1900) (#("    " 0 1 (ws-butler-chg chg fontified nil) 1 4 (ws-butler-chg chg fontified nil)) . 1898) (1879 . 1881) (#("      " 0 2 (fontified nil ws-butler-chg chg) 2 3 (ws-butler-chg chg fontified nil) 3 6 (ws-butler-chg chg fontified nil)) . 1879) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (nil rear-nonsticky nil 1923 . 1924) (nil fontified nil 1923 . 1924) (nil fontified nil 1922 . 1923) (nil fontified nil 1903 . 1922) (nil fontified nil 1902 . 1903) (nil fontified nil 1901 . 1902) (nil fontified nil 1898 . 1901) (nil fontified nil 1885 . 1898) (nil fontified nil 1882 . 1885) (nil fontified nil 1881 . 1882) (1881 . 1924)) nil (25139 17867 612561 957000) 0 nil])
([nil nil ((#("  render_screen();
" 0 2 (fontified t ws-butler-chg chg) 2 3 (ws-butler-chg delete fontified t) 3 15 (ws-butler-chg chg fontified t) 15 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t)) . 1879) (undo-tree-id254 . -19)) nil (25139 17867 612534 658000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -1898) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) 1899 (t 25139 17867 619683 198000)) nil (25139 17868 857285 146000) 0 nil])
([nil nil ((27 . 28) (t 25139 17868 863016 484000)) nil (25139 17880 346965 491000) 0 nil])
([nil nil ((28 . 33)) nil (25139 17880 346952 891000) 0 nil])
([nil nil ((44 . 45) (nil syntax-table nil 44 . 45) (nil syntax-table (1) 36 . 37) (43 . 44) (nil syntax-table nil 43 . 44) (nil syntax-table (1) 36 . 37) (42 . 43) (nil syntax-table nil 42 . 43) (nil syntax-table (1) 36 . 37) (41 . 42) (nil syntax-table nil 41 . 42) (nil syntax-table (1) 36 . 37) (40 . 41) (nil syntax-table nil 40 . 41) (nil syntax-table (1) 36 . 37) (39 . 40) (nil syntax-table nil 39 . 40) (nil syntax-table (1) 36 . 37) (38 . 39) (nil syntax-table nil 38 . 39) (nil syntax-table (1) 36 . 37) (37 . 38) (nil syntax-table nil 37 . 38) (nil syntax-table (1) 36 . 37) (33 . 37)) nil (25139 17880 346939 91000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face c-in-sws t)) . -44) (undo-tree-id263 . -1) (nil syntax-table nil 45 . 46) (nil syntax-table (1) 36 . 37)) nil (25139 17880 346914 591000) 0 nil])
([nil nil ((46 . 47) (nil syntax-table nil 46 . 47) (nil syntax-table (1) 36 . 37) (45 . 46) (nil syntax-table nil 45 . 46) (nil syntax-table (1) 36 . 37) (44 . 45) (nil syntax-table nil 44 . 45) (nil syntax-table (1) 36 . 37)) nil (25139 17880 346890 991000) 0 nil])
([nil nil ((47 . 48)) nil (25139 17880 346872 991000) 0 nil])
([nil nil ((#("M" 0 1 (ws-butler-chg chg fontified t)) . -739) (undo-tree-id264 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -740) (undo-tree-id265 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -741) (undo-tree-id266 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -742) (undo-tree-id267 . -1) 743 (t 25139 17880 353016 51000)) nil (25139 18330 240794 784000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg chg fontified t)) . 729)) nil (25139 18330 240760 383000) 0 nil])
([nil nil ((729 . 730)) nil (25139 18330 240747 283000) 0 nil])
([nil nil ((735 . 736)) nil (25139 18330 240734 383000) 0 nil])
([nil nil ((#("E" 0 1 (ws-butler-chg chg fontified t)) . 736)) nil (25139 18330 240720 984000) 0 nil])
([nil nil ((736 . 737)) nil (25139 18330 240704 983000) 0 nil])
([nil nil ((48 . 49) (t 25139 18330 256332 286000)) nil (25139 18387 446099 546000) 0 nil])
([nil nil ((#("  " 0 1 (ws-butler-chg chg fontified nil c-is-sws t c-in-sws t) 1 2 (ws-butler-chg chg fontified nil c-is-sws t c-in-sws t)) . 49) (nil rear-nonsticky nil 78 . 79) (nil fontified nil 78 . 79) (nil fontified nil 77 . 78) (nil fontified nil 69 . 77) (nil fontified nil 68 . 69) (nil fontified nil 67 . 68) (nil fontified nil 58 . 67) (nil fontified nil 57 . 58) (nil fontified nil 51 . 57) (nil fontified nil 50 . 51) (nil fontified nil 49 . 50) (49 . 79)) nil (25139 18387 446085 546000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t c-is-sws t c-in-sws t)) . 49) (#("c" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 49) (#("i" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 49) (#("t" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 49) (#("a" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 49) (#("t" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 49) (#("s" 0 1 (ws-butler-chg delete fontified t c-is-sws t face font-lock-keyword-face)) . 49)) nil (25139 18387 446067 946000) 0 nil])
([nil nil ((60 . 69)) nil (25139 18387 446053 746000) 0 nil])
([nil nil ((69 . 70)) nil (25139 18387 446041 46000) 0 nil])
([nil nil ((70 . 72)) nil (25139 18387 446028 146000) 0 nil])
([nil nil ((80 . 82)) nil (25139 18387 446011 246000) 0 nil])
([nil nil ((187 . 188) (t 25139 18387 452996 769000)) nil (25139 18960 829685 823000) 0 nil])
([nil nil ((188 . 193)) nil (25139 18960 829672 823000) 0 nil])
([nil nil ((188 . 198) (#("MenuS" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -188) (undo-tree-id273 . -5) 193) nil (25139 18960 829659 523000) 0 nil])
([nil nil ((198 . 200)) nil (25139 18960 829643 623000) 0 nil])
([nil nil ((200 . 204)) nil (25139 18960 829631 23000) 0 nil])
([nil nil ((204 . 206)) nil (25139 18960 829618 623000) 0 nil])
([nil nil ((206 . 207)) nil (25139 18960 829606 223000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -206) (undo-tree-id271 . -1) (undo-tree-id272 . -1) 207) nil (25139 18960 829593 23000) 0 nil])
([nil nil ((206 . 209)) nil (25139 18960 829576 223000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified nil)) . 207) (undo-tree-id270 . -2) (209 . 210)) nil (25139 18960 829563 23000) 0 nil])
([nil nil ((208 . 211)) nil (25139 18960 829547 123000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified nil)) . 209) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (211 . 212)) nil (25139 18960 829532 223000) 0 nil])
([nil nil ((210 . 211) (t 25139 18960 836308 277000)) nil (25139 18970 339165 859000) 0 nil])
([nil nil ((208 . 211)) nil (25139 18970 339152 759000) 0 nil])
([nil nil ((211 . 231)) nil (25139 18970 339140 160000) 0 nil])
([nil nil ((231 . 233)) nil (25139 18970 339127 160000) 0 nil])
([nil nil ((233 . 234)) nil (25139 18970 339110 359000) 0 nil])
([nil nil ((#("MenuSystem::init()
" 0 9 (fontified t ws-butler-chg chg face font-lock-constant-face) 9 10 (fontified t ws-butler-chg chg face font-lock-constant-face) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t face font-lock-function-name-face) 13 14 (ws-butler-chg chg fontified t face font-lock-function-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-function-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-function-name-face) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t)) . 188) (undo-tree-id274 . -19) (t 25139 18970 346307 910000)) nil (25139 18972 566519 199000) 0 nil])
([nil nil ((nil rear-nonsticky nil 206 . 207) (nil fontified nil 206 . 207) (nil fontified nil 205 . 206) (nil fontified nil 204 . 205) (nil fontified nil 203 . 204) (nil fontified nil 202 . 203) (nil fontified nil 201 . 202) (nil fontified nil 200 . 201) (nil fontified nil 199 . 200) (nil fontified nil 198 . 199) (nil fontified nil 197 . 198) (nil fontified nil 188 . 197) (188 . 207)) nil (25139 18972 566485 699000) 0 nil])
([nil nil ((153 . 156) (t 25139 18972 572974 493000)) nil (25139 25154 921589 528000) 0 nil])
([nil nil ((167 . 172)) nil (25139 25154 921576 928000) 0 nil])
([nil nil ((168 . 170) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 168) (undo-tree-id302 . -4) (172 . 173)) nil (25139 25154 921564 128000) 0 nil])
([nil nil ((171 . 182)) nil (25139 25154 921537 428000) 0 nil])
([nil nil ((182 . 183)) nil (25139 25154 921525 128000) 0 nil])
([nil nil ((183 . 184)) nil (25139 25154 921513 28000) 0 nil])
([nil nil ((#("*" 0 1 (ws-butler-chg chg fontified t)) . -182) (undo-tree-id300 . -1) (#("(" 0 1 (ws-butler-chg chg fontified t)) . -183) (undo-tree-id301 . -1) 184) nil (25139 25154 921500 29000) 0 nil])
([nil nil ((182 . 183)) nil (25139 25154 921483 729000) 0 nil])
([nil nil ((183 . 188)) nil (25139 25154 921471 328000) 0 nil])
([nil nil ((188 . 189)) nil (25139 25154 921459 228000) 0 nil])
([nil nil ((#("  , is_visible(false)
" 0 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg delete fontified t c-type c-not-decl) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t face font-lock-constant-face) 16 17 (ws-butler-chg chg fontified t face font-lock-constant-face) 17 18 (ws-butler-chg chg fontified t face font-lock-constant-face) 18 19 (ws-butler-chg chg fontified t face font-lock-constant-face) 19 20 (ws-butler-chg chg fontified t face font-lock-constant-face) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg delete fontified t)) . 168)) nil (25139 25154 921446 828000) 0 nil])
([nil nil ((nil rear-nonsticky nil 189 . 190) (nil fontified nil 189 . 190) (nil fontified nil 188 . 189) (nil fontified nil 187 . 188) (nil fontified nil 186 . 187) (nil fontified nil 185 . 186) (nil fontified nil 184 . 185) (nil fontified nil 183 . 184) (nil fontified nil 182 . 183) (nil fontified nil 181 . 182) (nil fontified nil 180 . 181) (nil fontified nil 179 . 180) (nil fontified nil 178 . 179) (nil fontified nil 177 . 178) (nil fontified nil 176 . 177) (nil fontified nil 175 . 176) (nil fontified nil 174 . 175) (nil fontified nil 173 . 174) (nil fontified nil 172 . 173) (nil fontified nil 171 . 172) (nil fontified nil 170 . 171) (nil fontified nil 168 . 170) (168 . 190)) nil (25139 25154 921433 229000) 0 nil])
([nil nil ((501 . 504)) nil (25139 25154 921414 29000) 0 nil])
([nil nil ((502 . 504) (#("    " 0 2 (ws-butler-chg chg fontified nil) 2 4 (ws-butler-chg chg fontified nil)) . 502) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (nil rear-nonsticky nil 525 . 526) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 514 . 515) (nil fontified nil 513 . 514) (nil fontified nil 512 . 513) (nil fontified nil 511 . 512) (nil fontified nil 510 . 511) (nil fontified nil 509 . 510) (nil fontified nil 508 . 509) (nil fontified nil 507 . 508) (nil fontified nil 506 . 507) (nil fontified nil 504 . 506) (504 . 526)) nil (25139 25154 921400 128000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 504) (#("," 0 1 (ws-butler-chg delete fontified t)) . 504)) nil (25139 25154 921375 928000) 0 nil])
([nil nil ((514 . 521)) nil (25139 25154 921363 328000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t)) . -520) (undo-tree-id296 . -1) 521) nil (25139 25154 921350 628000) 0 nil])
([nil nil ((520 . 532)) nil (25139 25154 921335 428000) 0 nil])
([nil nil ((532 . 535)) nil (25139 25154 921323 328000) 0 nil])
([nil nil ((535 . 536)) nil (25139 25154 921311 28000) 0 nil])
([nil nil ((#("(false)" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t face font-lock-constant-face) 2 3 (ws-butler-chg chg fontified t face font-lock-constant-face) 3 4 (ws-butler-chg chg fontified t face font-lock-constant-face) 4 5 (ws-butler-chg chg fontified t face font-lock-constant-face) 5 6 (ws-butler-chg chg fontified t face font-lock-constant-face) 6 7 (ws-butler-chg chg fontified t)) . 536) (undo-tree-id295 . -7)) nil (25139 25154 921298 429000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete rear-nonsticky t fontified t)) . -536) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 537) nil (25139 25154 921282 929000) 0 nil])
([nil nil ((#("  is_visible = current != nullptr;
" 0 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg delete fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t face font-lock-constant-face) 27 28 (ws-butler-chg chg fontified t face font-lock-constant-face) 28 29 (ws-butler-chg chg fontified t face font-lock-constant-face) 29 30 (ws-butler-chg chg fontified t face font-lock-constant-face) 30 31 (ws-butler-chg chg fontified t face font-lock-constant-face) 31 32 (ws-butler-chg chg fontified t face font-lock-constant-face) 32 33 (ws-butler-chg chg fontified t face font-lock-constant-face) 33 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg delete fontified t)) . 502) (undo-tree-id278 . -32) (undo-tree-id279 . -34) (undo-tree-id280 . -33) (undo-tree-id281 . -33) (undo-tree-id282 . -33) (undo-tree-id283 . -33) (undo-tree-id284 . -33) (undo-tree-id285 . -33) (undo-tree-id286 . -33) (undo-tree-id287 . -33) (undo-tree-id288 . -33) (undo-tree-id289 . -34) (undo-tree-id290 . -34) (undo-tree-id291 . -34) (undo-tree-id292 . -35)) nil (25139 25154 921263 528000) 0 nil])
([nil nil ((nil rear-nonsticky nil 536 . 537) (nil fontified nil 536 . 537) (nil fontified nil 535 . 536) (nil fontified nil 534 . 535) (nil fontified nil 533 . 534) (nil fontified nil 532 . 533) (nil fontified nil 531 . 532) (nil fontified nil 530 . 531) (nil fontified nil 529 . 530) (nil fontified nil 528 . 529) (nil fontified nil 526 . 528) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 515 . 517) (nil fontified nil 514 . 515) (nil fontified nil 513 . 514) (nil fontified nil 512 . 513) (nil fontified nil 511 . 512) (nil fontified nil 510 . 511) (nil fontified nil 509 . 510) (nil fontified nil 508 . 509) (nil fontified nil 507 . 508) (nil fontified nil 506 . 507) (nil fontified nil 505 . 506) (nil fontified nil 504 . 505) (nil fontified nil 502 . 504) (502 . 537)) nil (25139 25154 920739 829000) 0 nil])
([nil nil ((646 . 647)) nil (25139 25154 920719 128000) 0 nil])
([nil nil ((nil rear-nonsticky nil 680 . 681) (nil fontified nil 680 . 681) (nil fontified nil 679 . 680) (nil fontified nil 678 . 679) (nil fontified nil 677 . 678) (nil fontified nil 676 . 677) (nil fontified nil 675 . 676) (nil fontified nil 674 . 675) (nil fontified nil 673 . 674) (nil fontified nil 672 . 673) (nil fontified nil 670 . 672) (nil fontified nil 669 . 670) (nil fontified nil 668 . 669) (nil fontified nil 667 . 668) (nil fontified nil 666 . 667) (nil fontified nil 665 . 666) (nil fontified nil 664 . 665) (nil fontified nil 663 . 664) (nil fontified nil 662 . 663) (nil fontified nil 661 . 662) (nil fontified nil 659 . 661) (nil fontified nil 658 . 659) (nil fontified nil 657 . 658) (nil fontified nil 656 . 657) (nil fontified nil 655 . 656) (nil fontified nil 654 . 655) (nil fontified nil 653 . 654) (nil fontified nil 652 . 653) (nil fontified nil 651 . 652) (nil fontified nil 650 . 651) (nil fontified nil 649 . 650) (nil fontified nil 648 . 649) (nil fontified nil 646 . 648) (646 . 681)) nil (25139 25154 920705 328000) 0 nil])
([nil current ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -680) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 681) nil (25139 25154 920681 528000) 0 nil])
nil

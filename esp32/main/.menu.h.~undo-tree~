(undo-tree-save-format-version . 1)
"d984cc85e857a22dbac6334f160303454243a73d"
[nil nil nil nil (25139 16061 839671 145000) 0 nil]
([nil nil ((#(" m_" 0 3 (fontified t)) . -632) (635 . 636) (#(" m_" 0 3 (fontified t)) . -553) (556 . 557) (#(" m_" 0 1 (fontified t) 1 3 (face font-lock-variable-name-face fontified t)) . -400) (403 . 404) (#(" m_" 0 1 (fontified t) 1 3 (face font-lock-variable-name-face fontified t)) . -361) (364 . 365) (#(" m_" 0 1 (fontified t) 1 3 (face font-lock-variable-name-face fontified t)) . -321) (324 . 325) (#(" m_" 0 1 (fontified t) 1 3 (face font-lock-variable-name-face fontified t)) . -294) (t 25139 10322 379970 232000) (297 . 298) 255 (t 25139 10322 379970 232000)) nil (25139 16061 839652 845000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-function-name-face fontified t)) . 694) (t 25139 16061 839751 927000)) nil (25139 16077 46869 649000) 0 nil])
([nil nil ((694 . 695)) nil (25139 16077 50230 350000) 0 nil])
([nil nil ((#("O" 0 1 (face font-lock-function-name-face fontified t)) . 725)) nil (25139 16094 708191 826000) 0 nil] [nil nil ((725 . 741) (#(" " 0 1 (fontified nil)) . 725) (724 . 725)) ((#("
" 0 1 (ws-butler-chg chg fontified nil)) . 724) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (nil ws-butler-chg delete 726 . 727) (725 . 726) (#("                " 0 16 (ws-butler-chg chg fontified t)) . 725) (undo-tree-id4 . -16)) (25139 16077 46840 249000) 0 nil])
([nil nil ((725 . 726)) nil (25139 16094 708179 326000) 0 nil])
nil
([nil nil ((727 . 728)) nil (25139 16094 708166 626000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-function-name-face fontified t)) . 728)) nil (25139 16094 708153 926000) 0 nil])
([nil nil ((728 . 729)) nil (25139 16094 708141 226000) 0 nil])
([nil nil ((775 . 777)) nil (25139 16094 708128 626000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -776) (undo-tree-id5 . -1) 777) nil (25139 16094 708115 626000) 0 nil])
([nil nil ((776 . 778)) nil (25139 16094 708092 126000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 778) (#("O" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 778)) nil (25139 16094 708079 426000) 0 nil])
([nil nil ((778 . 779)) nil (25139 16094 708066 426000) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 779)) nil (25139 16094 708053 626000) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-function-name-face fontified t)) . 810)) nil (25139 16094 708040 926000) 0 nil])
([nil nil ((810 . 811)) nil (25139 16094 708028 326000) 0 nil])
([nil nil ((812 . 814)) nil (25139 16094 708015 726000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face fontified t)) . 814)) nil (25139 16094 708002 926000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 814)) nil (25139 16094 707986 625000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-function-name-face fontified t)) . 611) (t 25139 16094 709750 677000)) nil (25139 16105 433909 149000) 0 nil])
([nil nil ((611 . 612)) nil (25139 16105 433892 749000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -324) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -325) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -326) (undo-tree-id15 . -1) 327 (t 25139 16105 433083 601000)) nil (25139 16121 589448 597000) 0 nil])
([nil nil ((809 . 810) (t 25139 16121 589749 653000)) nil (25139 16132 52573 187000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-variable-name-face ws-butler-chg delete fontified t)) . 325) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . 325) (t 25139 16132 53082 593000)) nil (25139 16135 419863 997000) 0 nil])
([nil nil ((325 . 326)) nil (25139 16135 419846 897000) 0 nil])
([nil nil ((816 . 818) (t 25139 16135 423082 463000)) nil (25139 16226 726836 728000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t)) . -817) (undo-tree-id58 . -1) 818) nil (25139 16226 726822 828000) 0 nil])
([nil nil ((786 . 788) (#("                " 0 16 (fontified nil)) . 786) (817 . 818)) nil (25139 16226 726806 328000) 0 nil])
([nil nil ((804 . 816)) nil (25139 16226 726792 928000) 0 nil])
([nil nil ((816 . 817)) nil (25139 16226 726780 228000) 0 nil])
([nil nil ((817 . 818)) nil (25139 16226 726767 328000) 0 nil])
([nil nil ((818 . 819)) nil (25139 16226 726754 528000) 0 nil])
([nil nil ((788 . 802)) nil (25139 16226 726741 428000) 0 nil])
([nil nil ((833 . 836)) nil (25139 16226 726727 228000) 0 nil])
([nil nil ((836 . 857)) nil (25139 16226 726707 727000) 0 nil])
([nil nil ((857 . 863)) nil (25139 16226 726693 827000) 0 nil])
([nil nil ((834 . 836) (#("                " 0 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil) 3 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil) 8 9 (ws-butler-chg chg fontified nil) 9 10 (ws-butler-chg chg fontified nil) 10 11 (ws-butler-chg chg fontified nil) 11 12 (ws-butler-chg chg fontified nil) 12 13 (ws-butler-chg chg fontified nil) 13 14 (ws-butler-chg chg fontified nil) 14 15 (ws-butler-chg chg fontified nil) 15 16 (ws-butler-chg chg fontified nil)) . 834) (863 . 864)) nil (25139 16226 726680 728000) 0 nil])
([nil nil ((850 . 854)) nil (25139 16226 726667 328000) 0 nil])
([nil nil ((854 . 855)) nil (25139 16226 726654 528000) 0 nil])
([nil nil ((855 . 856)) nil (25139 16226 726641 828000) 0 nil])
([nil nil ((856 . 857)) nil (25139 16226 726629 328000) 0 nil])
([nil nil ((857 . 858)) nil (25139 16226 726616 728000) 0 nil])
([nil nil ((858 . 870)) nil (25139 16226 726603 828000) 0 nil])
([nil nil ((870 . 871)) nil (25139 16226 726591 228000) 0 nil])
([nil nil ((871 . 876)) nil (25139 16226 726578 428000) 0 nil])
([nil nil ((#("9" 0 1 (ws-butler-chg chg fontified t)) . -875) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 876) nil (25139 16226 726565 128000) 0 nil])
([nil nil ((875 . 876)) nil (25139 16226 726548 528000) 0 nil])
([nil nil ((876 . 877)) nil (25139 16226 726535 928000) 0 nil])
([nil nil ((877 . 878)) nil (25139 16226 726523 228000) 0 nil])
([nil nil ((878 . 879)) nil (25139 16226 726510 528000) 0 nil])
([nil nil ((879 . 880)) nil (25139 16226 726497 927000) 0 nil])
([nil nil ((#("{" 0 1 (ws-butler-chg chg fontified t)) . -879) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 880) nil (25139 16226 726484 528000) 0 nil])
([nil nil ((879 . 880)) nil (25139 16226 726467 928000) 0 nil])
([nil nil ((880 . 884)) nil (25139 16226 726455 428000) 0 nil])
([nil nil ((884 . 885)) nil (25139 16226 726442 728000) 0 nil])
([nil nil ((885 . 887)) nil (25139 16226 726429 728000) 0 nil])
([nil nil ((887 . 896)) nil (25139 16226 726417 28000) 0 nil])
([nil nil ((896 . 899)) nil (25139 16226 726404 128000) 0 nil])
([nil nil ((898 . 901)) nil (25139 16226 726391 628000) 0 nil])
([nil nil ((901 . 911)) nil (25139 16226 726379 28000) 0 nil])
([nil nil ((911 . 913)) nil (25139 16226 726366 427000) 0 nil])
([nil nil ((913 . 915)) nil (25139 16226 726353 327000) 0 nil])
([nil nil ((915 . 917)) nil (25139 16226 726340 628000) 0 nil])
([nil nil ((#("," 0 1 (ws-butler-chg chg fontified t)) . -915) (undo-tree-id52 . -1) (#("," 0 1 (ws-butler-chg chg fontified t)) . -916) (undo-tree-id53 . -1) 917) nil (25139 16226 726326 928000) 0 nil])
([nil nil ((915 . 916)) nil (25139 16226 726309 927000) 0 nil])
([nil nil ((916 . 917)) nil (25139 16226 726296 828000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -916) (undo-tree-id51 . -1) 917) nil (25139 16226 726283 728000) 0 nil])
([nil nil ((916 . 917)) nil (25139 16226 726267 928000) 0 nil])
([nil nil ((917 . 919)) nil (25139 16226 726255 328000) 0 nil])
([nil nil ((919 . 920)) nil (25139 16226 726242 528000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -918) (undo-tree-id49 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -919) (undo-tree-id50 . -1) 920) nil (25139 16226 726218 427000) 0 nil])
([nil nil ((918 . 920)) nil (25139 16226 726201 627000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -918) (undo-tree-id47 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -919) (undo-tree-id48 . -1) 920) nil (25139 16226 726188 128000) 0 nil])
([nil nil ((918 . 919)) nil (25139 16226 726171 227000) 0 nil])
([nil nil ((920 . 921)) nil (25139 16226 726158 128000) 0 nil])
([nil nil ((23 . 28)) nil (25139 16226 726145 227000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg c-in-sws t fontified t)) . -23) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("a" 0 1 (c-in-sws t ws-butler-chg chg fontified t)) . -24) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("c" 0 1 (c-in-sws t ws-butler-chg chg fontified t)) . -25) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("k" 0 1 (c-in-sws t ws-butler-chg chg fontified t)) . -26) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("a" 0 1 (c-in-sws t ws-butler-chg chg fontified t)) . -27) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 28) nil (25139 16226 726127 428000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 179) (undo-tree-id86 . -8) (t 25139 16226 729745 651000)) nil (25139 16240 801693 361000) 0 nil])
([nil nil ((187 . 189) (#("                " 0 16 (fontified t)) . 187)) nil (25139 16240 801677 61000) 0 nil])
([nil nil ((232 . 234)) nil (25139 16240 801663 961000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -232) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -233) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 234) nil (25139 16240 801650 361000) 0 nil])
([nil nil ((234 . 236) (#("                " 0 16 (fontified t)) . 234) (undo-tree-id81 . -16)) nil (25139 16240 801631 361000) 0 nil])
([nil nil ((266 . 268) (#("                " 0 16 (fontified t)) . 266) (undo-tree-id79 . -16) (undo-tree-id80 . -2) 268) nil (25139 16240 801615 361000) 0 nil])
([nil nil ((278 . 280) (#("                " 0 16 (fontified t)) . 278) (undo-tree-id77 . -16) (undo-tree-id78 . -2) 280) nil (25139 16240 801597 861000) 0 nil])
([nil nil ((303 . 305) (#("                " 0 16 (fontified t)) . 303) (undo-tree-id75 . -16) (undo-tree-id76 . -2) 305) nil (25139 16240 801580 361000) 0 nil])
([nil nil ((330 . 332) (#("                " 0 16 (fontified t)) . 330) (undo-tree-id73 . -16) (undo-tree-id74 . -2) 332) nil (25139 16240 801562 961000) 0 nil])
([nil nil ((340 . 342) (#("                " 0 16 (fontified t)) . 340) (undo-tree-id71 . -16) (undo-tree-id72 . -2) 342) nil (25139 16240 801545 161000) 0 nil])
([nil nil ((397 . 399) (#("                " 0 16 (fontified t)) . 397) (undo-tree-id69 . -16) (undo-tree-id70 . -2) 399) nil (25139 16240 801527 161000) 0 nil])
([nil nil ((458 . 460) (#("                " 0 16 (fontified t)) . 458) (undo-tree-id67 . -16) (undo-tree-id68 . -2) 460) nil (25139 16240 801509 361000) 0 nil])
([nil nil ((535 . 537) (#("                " 0 16 (fontified t)) . 535) (undo-tree-id65 . -16) (undo-tree-id66 . -2) 537) nil (25139 16240 801491 461000) 0 nil])
([nil nil ((552 . 554) (#("                " 0 16 (fontified t)) . 552) (undo-tree-id63 . -16) (undo-tree-id64 . -2) 554) nil (25139 16240 801469 61000) 0 nil])
([nil nil ((588 . 590) (#("                " 0 5 (fontified t) 5 16 (fontified t)) . 588) (undo-tree-id61 . -16) (undo-tree-id62 . -2) 590) nil (25139 16240 801432 561000) 0 nil])
([nil nil ((610 . 612) (#("                " 0 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg)) . 610) (undo-tree-id59 . -16) (undo-tree-id60 . -2) 612) nil (25139 16240 801412 761000) 0 nil])
([nil nil ((#("  Menu();
" 0 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-function-name-face fontified t ws-butler-chg delete) 3 6 (face font-lock-function-name-face fontified t) 6 8 (fontified t) 8 9 (c-type c-decl-id-start fontified t) 9 10 (fontified t)) . 330) (undo-tree-id112 . -2) (undo-tree-id113 . -9) (t 25139 16240 803078 449000)) nil (25139 19285 491920 514000) 0 nil])
([nil nil ((#("  Menu(Menu* parent, std::string label, int order = 0);
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-function-name-face fontified t ws-butler-chg delete) 3 6 (face font-lock-function-name-face fontified t) 6 7 (c-type c-decl-arg-start fontified t) 7 11 (face font-lock-type-face fontified t) 11 13 (fontified t) 13 19 (face font-lock-variable-name-face fontified t) 19 20 (c-type c-decl-arg-start fontified t) 20 21 (fontified t) 21 24 (face font-lock-constant-face fontified t) 24 26 (fontified t) 26 32 (face font-lock-type-face fontified t) 32 33 (fontified t) 33 38 (face font-lock-variable-name-face fontified t) 38 39 (c-type c-decl-arg-start fontified t) 39 40 (fontified t) 40 43 (face font-lock-type-face fontified t) 43 44 (fontified t) 44 49 (face font-lock-variable-name-face fontified t) 49 56 (fontified t)) . 330) (undo-tree-id104 . -2) (undo-tree-id105 . -55) (undo-tree-id106 . -7) (undo-tree-id107 . -20) (undo-tree-id108 . -21) (undo-tree-id109 . -39) (undo-tree-id110 . -40) (undo-tree-id111 . -53)) nil (25139 19285 491902 14000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 330)) nil (25139 19285 491624 514000) 0 nil])
([nil nil ((#("  inline void ToggleEditMode() { edit_mode = !m_edit_mode; }
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-keyword-face fontified t ws-butler-chg delete) 3 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face c-type c-decl-id-start fontified t) 13 14 (fontified t) 14 28 (face font-lock-function-name-face fontified t) 28 30 (fontified t) 30 32 (fontified t) 32 33 (fontified t ws-butler-chg chg) 33 44 (fontified t) 44 45 (fontified t) 45 46 (face font-lock-negation-char-face fontified t) 46 61 (fontified t)) . 330) (undo-tree-id102 . -2) (undo-tree-id103 . -60)) nil (25139 19285 491611 714000) 0 nil])
([nil nil ((#("  inline Menu& add(MenuItem* item) { items.push_back(item); return *this; }
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-keyword-face fontified t ws-butler-chg delete) 3 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face c-type c-decl-id-start fontified t) 13 15 (fontified t) 15 16 (face font-lock-function-name-face fontified t ws-butler-chg chg) 16 17 (face font-lock-function-name-face fontified t ws-butler-chg delete) 17 18 (face font-lock-function-name-face fontified t) 18 19 (c-type c-decl-arg-start fontified t) 19 27 (face font-lock-type-face fontified t) 27 29 (fontified t) 29 33 (face font-lock-variable-name-face fontified t) 33 34 (fontified t) 34 36 (fontified t) 36 37 (fontified t ws-butler-chg chg) 37 60 (fontified t) 60 66 (face font-lock-keyword-face fontified t) 66 68 (fontified t) 68 72 (face font-lock-keyword-face fontified t) 72 76 (fontified t)) . 330) (undo-tree-id98 . -2) (undo-tree-id99 . -75) (undo-tree-id100 . -19) (undo-tree-id101 . -34)) nil (25139 19285 491595 515000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 330)) nil (25139 19285 491577 714000) 0 nil])
([nil nil ((#("  void render();
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-type-face fontified t ws-butler-chg delete) 3 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 8 (face font-lock-function-name-face fontified t ws-butler-chg chg) 8 9 (face font-lock-function-name-face fontified t ws-butler-chg delete) 9 13 (face font-lock-function-name-face fontified t) 13 16 (fontified t) 16 17 (fontified t)) . 330) (undo-tree-id96 . -2) (undo-tree-id97 . -16)) nil (25139 19285 491564 814000) 0 nil])
([nil nil ((#("  void on_event(menu_event_t& evt);
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-type-face fontified t ws-butler-chg delete) 3 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 8 (face font-lock-function-name-face fontified t ws-butler-chg chg) 8 9 (face font-lock-function-name-face fontified t ws-butler-chg delete) 9 10 (face font-lock-function-name-face fontified t ws-butler-chg chg) 10 11 (face font-lock-function-name-face fontified t ws-butler-chg chg) 11 12 (face font-lock-function-name-face fontified t ws-butler-chg delete) 12 15 (face font-lock-function-name-face fontified t) 15 16 (c-type c-decl-arg-start fontified t) 16 28 (face font-lock-type-face fontified t) 28 30 (fontified t) 30 33 (face font-lock-variable-name-face fontified t) 33 35 (fontified t) 35 36 (fontified t)) . 330) (undo-tree-id92 . -2) (undo-tree-id93 . -35) (undo-tree-id94 . -16) (undo-tree-id95 . -34)) nil (25139 19285 491548 814000) 0 nil])
([nil nil ((#("  void on_modifyed();
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-type-face fontified t ws-butler-chg delete) 3 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 8 (face font-lock-function-name-face fontified t ws-butler-chg chg) 8 9 (face font-lock-function-name-face fontified t ws-butler-chg chg) 9 10 (face font-lock-function-name-face fontified t ws-butler-chg chg) 10 11 (face font-lock-function-name-face fontified t ws-butler-chg chg) 11 12 (face font-lock-function-name-face fontified t ws-butler-chg delete) 12 18 (face font-lock-function-name-face fontified t) 18 21 (fontified t) 21 22 (fontified t)) . 330) (undo-tree-id90 . -2) (undo-tree-id91 . -21)) nil (25139 19285 491530 814000) 0 nil])
([nil nil ((#("  int get_line() { return line; }
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-type-face fontified t ws-butler-chg delete) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t) 5 6 (fontified t) 6 7 (face font-lock-function-name-face fontified t ws-butler-chg chg) 7 8 (face font-lock-function-name-face fontified t ws-butler-chg delete) 8 9 (face font-lock-function-name-face fontified t ws-butler-chg chg) 9 10 (face font-lock-function-name-face fontified t ws-butler-chg chg) 10 11 (face font-lock-function-name-face fontified t ws-butler-chg chg) 11 12 (face font-lock-function-name-face fontified t ws-butler-chg delete) 12 14 (face font-lock-function-name-face fontified t) 14 16 (fontified t) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (face font-lock-keyword-face fontified t ws-butler-chg chg) 20 21 (face font-lock-keyword-face fontified t ws-butler-chg chg) 21 22 (face font-lock-keyword-face fontified t ws-butler-chg chg) 22 23 (face font-lock-keyword-face fontified t ws-butler-chg chg) 23 24 (face font-lock-keyword-face fontified t ws-butler-chg chg) 24 25 (face font-lock-keyword-face fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg) 29 30 (fontified t ws-butler-chg chg) 30 31 (fontified t ws-butler-chg chg) 31 32 (fontified t ws-butler-chg chg) 32 33 (fontified t ws-butler-chg chg) 33 34 (fontified t ws-butler-chg chg)) . 330) (undo-tree-id88 . -2) (undo-tree-id89 . -33)) nil (25139 19285 491514 614000) 0 nil])
([nil nil ((#("  void set_line(int n) { line = line<0 ? 0 : (line>=items.size() ? items.size()-1 : m);
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-type-face fontified t ws-butler-chg delete) 3 4 (face font-lock-type-face fontified t ws-butler-chg chg) 4 5 (face font-lock-type-face fontified t ws-butler-chg chg) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (face font-lock-function-name-face fontified t ws-butler-chg chg) 8 9 (face font-lock-function-name-face fontified t ws-butler-chg chg) 9 10 (face font-lock-function-name-face fontified t ws-butler-chg chg) 10 11 (face font-lock-function-name-face fontified t ws-butler-chg chg) 11 12 (face font-lock-function-name-face fontified t ws-butler-chg chg) 12 13 (face font-lock-function-name-face fontified t ws-butler-chg chg) 13 14 (face font-lock-function-name-face fontified t ws-butler-chg chg) 14 15 (face font-lock-function-name-face fontified t ws-butler-chg chg) 15 16 (c-type c-decl-arg-start fontified t ws-butler-chg chg) 16 17 (face font-lock-type-face fontified t ws-butler-chg chg) 17 18 (face font-lock-type-face fontified t ws-butler-chg chg) 18 19 (face font-lock-type-face fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg) 29 30 (fontified t ws-butler-chg chg) 30 31 (fontified t ws-butler-chg chg) 31 32 (fontified t ws-butler-chg chg) 32 33 (fontified t ws-butler-chg chg) 33 34 (fontified t ws-butler-chg chg) 34 35 (fontified t ws-butler-chg chg) 35 36 (fontified t ws-butler-chg chg) 36 37 (fontified t ws-butler-chg chg) 37 38 (fontified t ws-butler-chg chg) 38 39 (fontified t ws-butler-chg chg) 39 40 (fontified t ws-butler-chg chg) 40 41 (fontified t ws-butler-chg chg) 41 42 (fontified t ws-butler-chg chg) 42 43 (fontified t ws-butler-chg chg) 43 44 (fontified t ws-butler-chg chg) 44 45 (fontified t ws-butler-chg chg) 45 46 (fontified t ws-butler-chg chg) 46 47 (fontified t ws-butler-chg chg) 47 48 (fontified t ws-butler-chg chg) 48 49 (fontified t ws-butler-chg chg) 49 50 (fontified t ws-butler-chg chg) 50 51 (fontified t ws-butler-chg chg) 51 52 (fontified t ws-butler-chg chg) 52 53 (fontified t ws-butler-chg chg) 53 54 (fontified t ws-butler-chg chg) 54 55 (fontified t ws-butler-chg chg) 55 56 (fontified t ws-butler-chg chg) 56 57 (fontified t ws-butler-chg chg) 57 58 (fontified t ws-butler-chg chg) 58 59 (fontified t ws-butler-chg chg) 59 60 (fontified t ws-butler-chg chg) 60 61 (fontified t ws-butler-chg chg) 61 62 (fontified t ws-butler-chg chg) 62 63 (fontified t ws-butler-chg chg) 63 64 (fontified t ws-butler-chg chg) 64 65 (fontified t ws-butler-chg chg) 65 66 (fontified t ws-butler-chg chg) 66 67 (fontified t ws-butler-chg chg) 67 68 (fontified t ws-butler-chg chg) 68 69 (fontified t ws-butler-chg chg) 69 70 (fontified t ws-butler-chg chg) 70 71 (fontified t ws-butler-chg chg) 71 72 (fontified t ws-butler-chg chg) 72 73 (fontified t ws-butler-chg chg) 73 74 (fontified t ws-butler-chg chg) 74 75 (fontified t ws-butler-chg chg) 75 76 (fontified t ws-butler-chg chg) 76 77 (fontified t ws-butler-chg chg) 77 78 (fontified t ws-butler-chg chg) 78 79 (fontified t ws-butler-chg chg) 79 80 (fontified t ws-butler-chg chg) 80 81 (fontified t ws-butler-chg chg) 81 82 (fontified t ws-butler-chg chg) 82 83 (fontified t ws-butler-chg chg) 83 84 (fontified t ws-butler-chg chg) 84 85 (fontified t ws-butler-chg chg) 85 86 (fontified t ws-butler-chg delete) 86 87 (fontified t ws-butler-chg chg) 87 88 (fontified t ws-butler-chg delete)) . 330) (undo-tree-id87 . -2)) nil (25139 19285 491494 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 634 . 635) (nil fontified nil 634 . 635) (nil fontified nil 633 . 634) (nil fontified nil 632 . 633) (nil fontified nil 631 . 632) (nil fontified nil 630 . 631) (nil fontified nil 629 . 630) (nil fontified nil 628 . 629) (nil fontified nil 627 . 628) (nil fontified nil 626 . 627) (nil fontified nil 625 . 626) (nil fontified nil 624 . 625) (nil fontified nil 623 . 624) (nil fontified nil 622 . 623) (nil fontified nil 621 . 622) (nil fontified nil 620 . 621) (nil fontified nil 619 . 620) (nil fontified nil 618 . 619) (nil fontified nil 617 . 618) (nil fontified nil 616 . 617) (nil fontified nil 615 . 616) (nil fontified nil 614 . 615) (nil fontified nil 613 . 614) (nil fontified nil 612 . 613) (nil fontified nil 611 . 612) (nil fontified nil 610 . 611) (nil fontified nil 609 . 610) (nil fontified nil 608 . 609) (nil fontified nil 607 . 608) (nil fontified nil 606 . 607) (nil fontified nil 605 . 606) (nil fontified nil 604 . 605) (nil fontified nil 603 . 604) (nil fontified nil 602 . 603) (nil fontified nil 601 . 602) (nil fontified nil 600 . 601) (nil fontified nil 599 . 600) (nil fontified nil 598 . 599) (nil fontified nil 597 . 598) (nil fontified nil 596 . 597) (nil fontified nil 595 . 596) (nil fontified nil 594 . 595) (nil fontified nil 593 . 594) (nil fontified nil 592 . 593) (nil fontified nil 591 . 592) (nil fontified nil 590 . 591) (nil fontified nil 589 . 590) (nil fontified nil 588 . 589) (nil fontified nil 587 . 588) (nil fontified nil 586 . 587) (nil fontified nil 585 . 586) (nil fontified nil 584 . 585) (nil fontified nil 583 . 584) (nil fontified nil 582 . 583) (nil fontified nil 581 . 582) (nil fontified nil 580 . 581) (nil fontified nil 579 . 580) (nil fontified nil 578 . 579) (nil fontified nil 577 . 578) (nil fontified nil 576 . 577) (nil fontified nil 575 . 576) (nil fontified nil 574 . 575) (nil fontified nil 573 . 574) (nil fontified nil 572 . 573) (nil fontified nil 571 . 572) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 567 . 568) (nil fontified nil 566 . 567) (nil fontified nil 565 . 566) (nil fontified nil 564 . 565) (nil fontified nil 563 . 564) (nil fontified nil 562 . 563) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 559 . 560) (nil fontified nil 558 . 559) (nil fontified nil 557 . 558) (nil fontified nil 556 . 557) (nil fontified nil 555 . 556) (nil fontified nil 554 . 555) (nil fontified nil 553 . 554) (nil fontified nil 552 . 553) (nil fontified nil 551 . 552) (nil fontified nil 550 . 551) (nil fontified nil 549 . 550) (nil fontified nil 548 . 549) (nil fontified nil 547 . 548) (nil fontified nil 546 . 547) (nil fontified nil 545 . 546) (nil fontified nil 544 . 545) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 541 . 542) (nil fontified nil 540 . 541) (nil fontified nil 539 . 540) (nil fontified nil 538 . 539) (nil fontified nil 537 . 538) (nil fontified nil 536 . 537) (nil fontified nil 535 . 536) (nil fontified nil 534 . 535) (nil fontified nil 533 . 534) (nil fontified nil 532 . 533) (nil fontified nil 531 . 532) (nil fontified nil 530 . 531) (nil fontified nil 529 . 530) (nil fontified nil 527 . 529) (nil fontified nil 525 . 527) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 514 . 515) (nil fontified nil 513 . 514) (nil fontified nil 512 . 513) (nil fontified nil 509 . 512) (nil fontified nil 503 . 509) (nil fontified nil 502 . 503) (nil fontified nil 501 . 502) (nil fontified nil 500 . 501) (nil fontified nil 499 . 500) (nil fontified nil 498 . 499) (nil fontified nil 497 . 498) (nil fontified nil 496 . 497) (nil fontified nil 494 . 496) (nil fontified nil 493 . 494) (nil fontified nil 492 . 493) (nil fontified nil 491 . 492) (nil fontified nil 490 . 491) (nil fontified nil 488 . 490) (nil fontified nil 485 . 488) (nil fontified nil 483 . 485) (nil fontified nil 471 . 483) (nil fontified nil 470 . 471) (nil fontified nil 467 . 470) (nil fontified nil 466 . 467) (nil fontified nil 465 . 466) (nil fontified nil 464 . 465) (nil fontified nil 463 . 464) (nil fontified nil 462 . 463) (nil fontified nil 461 . 462) (nil fontified nil 460 . 461) (nil fontified nil 458 . 460) (nil fontified nil 457 . 458) (nil fontified nil 456 . 457) (nil fontified nil 455 . 456) (nil fontified nil 454 . 455) (nil fontified nil 451 . 454) (nil fontified nil 447 . 451) (nil fontified nil 446 . 447) (nil fontified nil 445 . 446) (nil fontified nil 444 . 445) (nil fontified nil 443 . 444) (nil fontified nil 441 . 443) (nil fontified nil 440 . 441) (nil fontified nil 439 . 440) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (nil fontified nil 433 . 437) (nil fontified nil 429 . 433) (nil fontified nil 427 . 429) (nil fontified nil 421 . 427) (nil fontified nil 398 . 421) (nil fontified nil 397 . 398) (nil fontified nil 395 . 397) (nil fontified nil 394 . 395) (nil fontified nil 390 . 394) (nil fontified nil 388 . 390) (nil fontified nil 380 . 388) (nil fontified nil 379 . 380) (nil fontified nil 378 . 379) (nil fontified nil 377 . 378) (nil fontified nil 376 . 377) (nil fontified nil 374 . 376) (nil fontified nil 373 . 374) (nil fontified nil 370 . 373) (nil fontified nil 369 . 370) (nil fontified nil 364 . 369) (nil fontified nil 363 . 364) (nil fontified nil 362 . 363) (nil fontified nil 361 . 362) (nil fontified nil 346 . 361) (nil fontified nil 345 . 346) (nil fontified nil 344 . 345) (nil fontified nil 333 . 344) (nil fontified nil 332 . 333) (nil fontified nil 330 . 332) (nil fontified nil 328 . 330) (nil fontified nil 314 . 328) (nil fontified nil 313 . 314) (nil fontified nil 312 . 313) (nil fontified nil 309 . 312) (nil fontified nil 308 . 309) (nil fontified nil 303 . 308) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 292 . 299) (nil fontified nil 287 . 292) (nil fontified nil 286 . 287) (nil fontified nil 283 . 286) (nil fontified nil 282 . 283) (nil fontified nil 281 . 282) (nil fontified nil 276 . 281) (nil fontified nil 275 . 276) (nil fontified nil 269 . 275) (nil fontified nil 267 . 269) (nil fontified nil 264 . 267) (nil fontified nil 263 . 264) (nil fontified nil 262 . 263) (nil fontified nil 256 . 262) (nil fontified nil 254 . 256) (nil fontified nil 250 . 254) (nil fontified nil 249 . 250) (nil fontified nil 246 . 249) (nil fontified nil 245 . 246) (nil fontified nil 244 . 245) (nil fontified nil 243 . 244) (nil fontified nil 242 . 243) (nil fontified nil 241 . 242) (nil fontified nil 239 . 241) (nil fontified nil 236 . 239) (nil fontified nil 235 . 236) (nil fontified nil 233 . 235) (233 . 635)) nil (25139 19285 491458 315000) 0 nil])
([nil nil ((515 . 522) (t 25139 19285 496295 918000)) nil (25139 19296 848043 35000) 0 nil])
([nil nil ((556 . 563) (t 25139 19296 852962 152000)) nil (25139 19301 908307 903000) 0 nil])
([nil nil ((179 . 180) (t 25139 19301 912961 961000)) nil (25139 19311 638780 978000) 0 nil])
([nil nil ((180 . 788) (#("public:
  typedef void (*menu_delegate)(Menu* menu);

  Menu();
  Menu(Menu* parent, std::string label, int order = 0);

  inline void ToggleEditMode() { edit_mode = !m_edit_mode; }
  inline Menu& add(MenuItem* item) { items.push_back(item); return *this; }

  void render();
  void on_event(menu_event_t& evt);
  void on_modifyed();
  inline int get_line() { return line; }
  inline void set_line(int n) { line = line<0 ? 0 : (line>=items.size() ? items.size()-1 : m);

  std::vector<MenuItem*> items;
  int line;
  menu_delegate on_open;
  menu_delegate on_close;

" 0 1 (face font-lock-keyword-face ws-butler-chg delete fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (c-type c-decl-end fontified t) 7 8 (fontified t) 8 10 (fontified t ws-butler-chg chg) 10 11 (face font-lock-keyword-face fontified t ws-butler-chg delete) 11 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 21 (face font-lock-type-face fontified t) 21 22 (face font-lock-type-face c-type c-decl-type-start fontified t) 22 25 (fontified t) 25 38 (face font-lock-type-face fontified t) 38 39 (fontified t) 39 40 (c-type c-decl-arg-start fontified t) 40 44 (face font-lock-type-face fontified t) 44 46 (fontified t) 46 50 (face font-lock-variable-name-face fontified t) 50 51 (fontified t) 51 52 (c-type c-decl-id-start fontified t) 52 53 (fontified t) 53 54 (fontified t ws-butler-chg delete) 54 56 (fontified t ws-butler-chg chg) 56 57 (face font-lock-function-name-face fontified t ws-butler-chg chg) 57 60 (face font-lock-function-name-face fontified t ws-butler-chg chg) 60 62 (fontified t ws-butler-chg chg) 62 63 (c-type c-decl-id-start fontified t ws-butler-chg chg) 63 64 (fontified t ws-butler-chg chg) 64 65 (fontified t ws-butler-chg chg) 65 66 (fontified t ws-butler-chg chg) 66 67 (face font-lock-function-name-face fontified t ws-butler-chg chg) 67 70 (face font-lock-function-name-face fontified t ws-butler-chg chg) 70 71 (c-type c-decl-arg-start fontified t ws-butler-chg chg) 71 75 (face font-lock-type-face fontified t ws-butler-chg chg) 75 77 (fontified t ws-butler-chg chg) 77 83 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 83 84 (c-type c-decl-arg-start fontified t ws-butler-chg chg) 84 85 (fontified t ws-butler-chg chg) 85 88 (face font-lock-constant-face fontified t ws-butler-chg chg) 88 90 (fontified t ws-butler-chg chg) 90 96 (face font-lock-type-face fontified t ws-butler-chg chg) 96 97 (fontified t ws-butler-chg chg) 97 102 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 102 103 (c-type c-decl-arg-start fontified t ws-butler-chg chg) 103 104 (fontified t ws-butler-chg chg) 104 107 (face font-lock-type-face fontified t ws-butler-chg chg) 107 108 (fontified t ws-butler-chg chg) 108 113 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 113 120 (fontified t ws-butler-chg chg) 120 121 (fontified t ws-butler-chg chg) 121 122 (fontified t ws-butler-chg chg) 122 123 (fontified t ws-butler-chg chg) 123 124 (face font-lock-keyword-face fontified t ws-butler-chg chg) 124 129 (face font-lock-keyword-face fontified t ws-butler-chg chg) 129 130 (fontified t ws-butler-chg chg) 130 133 (face font-lock-type-face fontified t ws-butler-chg chg) 133 134 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 134 135 (fontified t ws-butler-chg chg) 135 149 (face font-lock-function-name-face fontified t ws-butler-chg chg) 149 151 (fontified t ws-butler-chg chg) 151 153 (fontified t ws-butler-chg chg) 153 154 (fontified t ws-butler-chg chg) 154 165 (fontified t ws-butler-chg chg) 165 166 (fontified t ws-butler-chg chg) 166 167 (face font-lock-negation-char-face fontified t ws-butler-chg chg) 167 182 (fontified t ws-butler-chg chg) 182 183 (fontified t ws-butler-chg chg) 183 184 (fontified t ws-butler-chg chg) 184 185 (face font-lock-keyword-face fontified t ws-butler-chg chg) 185 190 (face font-lock-keyword-face fontified t ws-butler-chg chg) 190 191 (fontified t ws-butler-chg chg) 191 194 (face font-lock-type-face fontified t ws-butler-chg chg) 194 195 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 195 197 (fontified t ws-butler-chg chg) 197 198 (face font-lock-function-name-face fontified t ws-butler-chg chg) 198 199 (face font-lock-function-name-face fontified t ws-butler-chg chg) 199 200 (face font-lock-function-name-face fontified t ws-butler-chg chg) 200 201 (c-type c-decl-arg-start fontified t ws-butler-chg chg) 201 209 (face font-lock-type-face fontified t ws-butler-chg chg) 209 211 (fontified t ws-butler-chg chg) 211 215 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 215 216 (fontified t ws-butler-chg chg) 216 218 (fontified t ws-butler-chg chg) 218 219 (fontified t ws-butler-chg chg) 219 242 (fontified t ws-butler-chg chg) 242 248 (face font-lock-keyword-face fontified t ws-butler-chg chg) 248 250 (fontified t ws-butler-chg chg) 250 254 (face font-lock-keyword-face fontified t ws-butler-chg chg) 254 258 (fontified t ws-butler-chg chg) 258 259 (fontified t ws-butler-chg chg) 259 260 (fontified t ws-butler-chg chg) 260 261 (fontified t ws-butler-chg chg) 261 262 (face font-lock-type-face fontified t ws-butler-chg chg) 262 264 (face font-lock-type-face fontified t ws-butler-chg chg) 264 265 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 265 266 (fontified t ws-butler-chg chg) 266 267 (face font-lock-function-name-face fontified t ws-butler-chg chg) 267 268 (face font-lock-function-name-face fontified t ws-butler-chg chg) 268 272 (face font-lock-function-name-face fontified t ws-butler-chg chg) 272 275 (fontified t ws-butler-chg chg) 275 276 (fontified t ws-butler-chg chg) 276 277 (fontified t ws-butler-chg chg) 277 278 (fontified t ws-butler-chg chg) 278 279 (face font-lock-type-face fontified t ws-butler-chg chg) 279 281 (face font-lock-type-face fontified t ws-butler-chg chg) 281 282 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 282 283 (fontified t ws-butler-chg chg) 283 284 (face font-lock-function-name-face fontified t ws-butler-chg chg) 284 285 (face font-lock-function-name-face fontified t ws-butler-chg chg) 285 286 (face font-lock-function-name-face fontified t ws-butler-chg chg) 286 287 (face font-lock-function-name-face fontified t ws-butler-chg chg) 287 288 (face font-lock-function-name-face fontified t ws-butler-chg chg) 288 291 (face font-lock-function-name-face fontified t ws-butler-chg chg) 291 292 (c-type c-decl-arg-start fontified t ws-butler-chg chg) 292 304 (face font-lock-type-face fontified t ws-butler-chg chg) 304 306 (fontified t ws-butler-chg chg) 306 309 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 309 311 (fontified t ws-butler-chg chg) 311 312 (fontified t ws-butler-chg chg) 312 313 (fontified t ws-butler-chg chg) 313 314 (fontified t ws-butler-chg chg) 314 315 (face font-lock-type-face fontified t ws-butler-chg chg) 315 317 (face font-lock-type-face fontified t ws-butler-chg chg) 317 318 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 318 319 (fontified t ws-butler-chg chg) 319 320 (face font-lock-function-name-face fontified t ws-butler-chg chg) 320 321 (face font-lock-function-name-face fontified t ws-butler-chg chg) 321 322 (face font-lock-function-name-face fontified t ws-butler-chg chg) 322 323 (face font-lock-function-name-face fontified t ws-butler-chg chg) 323 324 (face font-lock-function-name-face fontified t ws-butler-chg chg) 324 330 (face font-lock-function-name-face fontified t ws-butler-chg chg) 330 333 (fontified t ws-butler-chg chg) 333 334 (fontified t ws-butler-chg chg) 334 335 (fontified t ws-butler-chg chg) 335 336 (fontified t ws-butler-chg chg) 336 337 (face font-lock-keyword-face fontified t ws-butler-chg chg) 337 338 (face font-lock-keyword-face fontified t ws-butler-chg chg) 338 339 (face font-lock-keyword-face fontified t ws-butler-chg chg) 339 340 (face font-lock-keyword-face fontified t ws-butler-chg chg) 340 341 (face font-lock-keyword-face fontified t ws-butler-chg chg) 341 342 (face font-lock-keyword-face fontified t ws-butler-chg chg) 342 343 (fontified t ws-butler-chg chg) 343 344 (face font-lock-type-face fontified t ws-butler-chg chg) 344 345 (face font-lock-type-face fontified t ws-butler-chg chg) 345 346 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 346 347 (fontified t ws-butler-chg chg) 347 348 (face font-lock-function-name-face fontified t ws-butler-chg chg) 348 349 (face font-lock-function-name-face fontified t ws-butler-chg chg) 349 350 (face font-lock-function-name-face fontified t ws-butler-chg chg) 350 351 (face font-lock-function-name-face fontified t ws-butler-chg chg) 351 352 (face font-lock-function-name-face fontified t ws-butler-chg chg) 352 353 (face font-lock-function-name-face fontified t ws-butler-chg chg) 353 355 (face font-lock-function-name-face fontified t ws-butler-chg chg) 355 357 (fontified t ws-butler-chg chg) 357 358 (fontified t ws-butler-chg chg) 358 359 (fontified t ws-butler-chg chg) 359 360 (fontified t ws-butler-chg chg) 360 361 (face font-lock-keyword-face fontified t ws-butler-chg chg) 361 362 (face font-lock-keyword-face fontified t ws-butler-chg chg) 362 363 (face font-lock-keyword-face fontified t ws-butler-chg chg) 363 364 (face font-lock-keyword-face fontified t ws-butler-chg chg) 364 365 (face font-lock-keyword-face fontified t ws-butler-chg chg) 365 366 (face font-lock-keyword-face fontified t ws-butler-chg chg) 366 367 (fontified t ws-butler-chg chg) 367 368 (fontified t ws-butler-chg chg) 368 369 (fontified t ws-butler-chg chg) 369 370 (fontified t ws-butler-chg chg) 370 371 (fontified t ws-butler-chg chg) 371 372 (fontified t ws-butler-chg chg) 372 373 (fontified t ws-butler-chg chg) 373 374 (fontified t ws-butler-chg chg) 374 375 (fontified t ws-butler-chg chg) 375 376 (fontified t ws-butler-chg chg) 376 377 (fontified t ws-butler-chg chg) 377 378 (face font-lock-keyword-face fontified t ws-butler-chg chg) 378 379 (face font-lock-keyword-face fontified t ws-butler-chg chg) 379 380 (face font-lock-keyword-face fontified t ws-butler-chg chg) 380 381 (face font-lock-keyword-face fontified t ws-butler-chg chg) 381 382 (face font-lock-keyword-face fontified t ws-butler-chg chg) 382 383 (face font-lock-keyword-face fontified t ws-butler-chg chg) 383 384 (fontified t ws-butler-chg chg) 384 385 (face font-lock-type-face fontified t ws-butler-chg chg) 385 386 (face font-lock-type-face fontified t ws-butler-chg chg) 386 387 (face font-lock-type-face fontified t ws-butler-chg chg) 387 388 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 388 389 (fontified t ws-butler-chg chg) 389 390 (face font-lock-function-name-face fontified t ws-butler-chg chg) 390 391 (face font-lock-function-name-face fontified t ws-butler-chg chg) 391 392 (face font-lock-function-name-face fontified t ws-butler-chg chg) 392 393 (face font-lock-function-name-face fontified t ws-butler-chg chg) 393 394 (face font-lock-function-name-face fontified t ws-butler-chg chg) 394 395 (face font-lock-function-name-face fontified t ws-butler-chg chg) 395 396 (face font-lock-function-name-face fontified t ws-butler-chg chg) 396 397 (face font-lock-function-name-face fontified t ws-butler-chg chg) 397 398 (c-type c-decl-arg-start fontified t ws-butler-chg chg) 398 399 (face font-lock-type-face fontified t ws-butler-chg chg) 399 400 (face font-lock-type-face fontified t ws-butler-chg chg) 400 401 (face font-lock-type-face fontified t ws-butler-chg chg) 401 402 (fontified t ws-butler-chg chg) 402 403 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 403 404 (fontified t ws-butler-chg chg) 404 405 (fontified t ws-butler-chg chg) 405 406 (fontified t ws-butler-chg chg) 406 407 (fontified t ws-butler-chg chg) 407 408 (fontified t ws-butler-chg chg) 408 409 (fontified t ws-butler-chg chg) 409 410 (fontified t ws-butler-chg chg) 410 411 (fontified t ws-butler-chg chg) 411 412 (fontified t ws-butler-chg chg) 412 413 (fontified t ws-butler-chg chg) 413 414 (fontified t ws-butler-chg chg) 414 415 (fontified t ws-butler-chg chg) 415 416 (fontified t ws-butler-chg chg) 416 417 (fontified t ws-butler-chg chg) 417 418 (fontified t ws-butler-chg chg) 418 419 (fontified t ws-butler-chg chg) 419 420 (fontified t ws-butler-chg chg) 420 421 (fontified t ws-butler-chg chg) 421 422 (fontified t ws-butler-chg chg) 422 423 (fontified t ws-butler-chg chg) 423 424 (fontified t ws-butler-chg chg) 424 425 (fontified t ws-butler-chg chg) 425 426 (fontified t ws-butler-chg chg) 426 427 (fontified t ws-butler-chg chg) 427 428 (fontified t ws-butler-chg chg) 428 429 (fontified t ws-butler-chg chg) 429 430 (fontified t ws-butler-chg chg) 430 431 (fontified t ws-butler-chg chg) 431 432 (fontified t ws-butler-chg chg) 432 433 (fontified t ws-butler-chg chg) 433 434 (fontified t ws-butler-chg chg) 434 435 (fontified t ws-butler-chg chg) 435 436 (fontified t ws-butler-chg chg) 436 437 (fontified t ws-butler-chg chg) 437 438 (fontified t ws-butler-chg chg) 438 439 (fontified t ws-butler-chg chg) 439 440 (fontified t ws-butler-chg chg) 440 441 (fontified t ws-butler-chg chg) 441 442 (fontified t ws-butler-chg chg) 442 443 (fontified t ws-butler-chg chg) 443 444 (fontified t ws-butler-chg chg) 444 445 (fontified t ws-butler-chg chg) 445 446 (fontified t ws-butler-chg chg) 446 447 (fontified t ws-butler-chg chg) 447 448 (fontified t ws-butler-chg chg) 448 449 (fontified t ws-butler-chg chg) 449 450 (fontified t ws-butler-chg chg) 450 451 (fontified t ws-butler-chg chg) 451 452 (fontified t ws-butler-chg chg) 452 453 (fontified t ws-butler-chg chg) 453 454 (fontified t ws-butler-chg chg) 454 455 (fontified t ws-butler-chg chg) 455 456 (fontified t ws-butler-chg chg) 456 457 (fontified t ws-butler-chg chg) 457 458 (fontified t ws-butler-chg chg) 458 459 (fontified t ws-butler-chg chg) 459 460 (fontified t ws-butler-chg chg) 460 461 (fontified t ws-butler-chg chg) 461 462 (fontified t ws-butler-chg chg) 462 463 (fontified t ws-butler-chg chg) 463 464 (fontified t ws-butler-chg chg) 464 465 (fontified t ws-butler-chg chg) 465 466 (fontified t ws-butler-chg chg) 466 467 (fontified t ws-butler-chg chg) 467 468 (fontified t ws-butler-chg chg) 468 469 (fontified t ws-butler-chg chg) 469 470 (fontified t rear-nonsticky t ws-butler-chg chg) 470 471 (fontified t) 471 473 (fontified t ws-butler-chg chg) 473 474 (face font-lock-constant-face fontified t ws-butler-chg delete) 474 476 (face font-lock-constant-face fontified t) 476 478 (fontified t) 478 484 (face font-lock-type-face fontified t) 484 485 (fontified t category c-<-as-paren-syntax) 485 493 (face font-lock-type-face fontified t) 493 494 (fontified t) 494 495 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 495 496 (fontified t ws-butler-chg chg) 496 501 (face font-lock-variable-name-face fontified t) 501 503 (fontified t) 503 505 (fontified t ws-butler-chg chg) 505 506 (face font-lock-type-face fontified t ws-butler-chg delete) 506 507 (face font-lock-type-face fontified t) 507 508 (face font-lock-type-face c-type c-decl-id-start fontified t) 508 509 (fontified t ws-butler-chg chg) 509 511 (fontified t face font-lock-variable-name-face) 511 512 (fontified t face font-lock-variable-name-face ws-butler-chg delete) 512 513 (fontified t face font-lock-variable-name-face ws-butler-chg chg) 513 514 (fontified t ws-butler-chg delete) 514 515 (fontified t) 515 517 (ws-butler-chg chg) 517 518 (face font-lock-type-face ws-butler-chg delete) 518 529 (face font-lock-type-face) 529 530 (face font-lock-type-face c-type c-decl-id-start) 530 531 (ws-butler-chg chg) 531 538 (face font-lock-variable-name-face) 540 542 (ws-butler-chg chg) 542 543 (face font-lock-type-face ws-butler-chg delete) 543 554 (face font-lock-type-face) 554 555 (face font-lock-type-face c-type c-decl-id-start) 555 556 (ws-butler-chg chg) 556 564 (face font-lock-variable-name-face)) . 180) (undo-tree-id114 . -54) (undo-tree-id115 . -566) (undo-tree-id116 . -540) (undo-tree-id117 . -566) (undo-tree-id118 . -54) (undo-tree-id119 . -567) (undo-tree-id120 . -18) (undo-tree-id121 . -52) (undo-tree-id122 . -40) (undo-tree-id123 . -51) (undo-tree-id124 . -473) (undo-tree-id125 . -502) (undo-tree-id126 . -505) (undo-tree-id127 . -514) (undo-tree-id128 . -517) (undo-tree-id129 . -539) (undo-tree-id130 . -542) (undo-tree-id131 . -565) (undo-tree-id132 . -54) (undo-tree-id133 . -54) (undo-tree-id134 . -56) (undo-tree-id135 . -63) (undo-tree-id136 . -66) (undo-tree-id137 . -119) (undo-tree-id138 . -71) (undo-tree-id139 . -84) (undo-tree-id140 . -85) (undo-tree-id141 . -103) (undo-tree-id142 . -104) (undo-tree-id143 . -117) (undo-tree-id144 . -123) (undo-tree-id145 . -181) (undo-tree-id146 . -184) (undo-tree-id147 . -257) (undo-tree-id148 . -201) (undo-tree-id149 . -216) (undo-tree-id150 . -261) (undo-tree-id151 . -275) (undo-tree-id152 . -278) (undo-tree-id153 . -311) (undo-tree-id154 . -292) (undo-tree-id155 . -310) (undo-tree-id156 . -314) (undo-tree-id157 . -333) (undo-tree-id158 . -336) (undo-tree-id159 . -374) (undo-tree-id160 . -377) (undo-tree-id161 . -398) (undo-tree-id162 . -404) (undo-tree-id163 . -7) (undo-tree-id164 . -123)) nil (25139 19311 638762 78000) 0 nil])
([nil nil ((682 . 687) (t 25139 19311 646294 924000)) nil (25139 19324 531045 735000) 0 nil])
([nil nil ((683 . 685) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 683) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (687 . 688)) nil (25139 19324 531029 334000) 0 nil])
([nil nil ((689 . 782) (#("  std::vector<MenuItem*> items;
    int line;
    menu_delegate on_open;
    menu_delegate on_close;
  " 0 2 (fontified t ws-butler-chg chg) 2 5 (face font-lock-constant-face fontified t ws-butler-chg chg) 5 7 (fontified t ws-butler-chg chg) 7 13 (face font-lock-type-face fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg category c-<-as-paren-syntax) 14 22 (face font-lock-type-face fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (c-type c-decl-id-start fontified t ws-butler-chg chg category c->-as-paren-syntax) 24 25 (fontified t ws-butler-chg chg) 25 30 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 30 36 (fontified t ws-butler-chg chg) 36 38 (face font-lock-type-face fontified t ws-butler-chg chg) 38 39 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 39 40 (fontified t ws-butler-chg chg) 40 44 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 44 50 (fontified t ws-butler-chg chg) 50 62 (face font-lock-type-face fontified t ws-butler-chg chg) 62 63 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 63 64 (fontified t ws-butler-chg chg) 64 71 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 71 77 (fontified t ws-butler-chg chg) 77 89 (face font-lock-type-face fontified t ws-butler-chg chg) 89 90 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 90 91 (fontified t ws-butler-chg chg) 91 99 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 99 103 (fontified t ws-butler-chg chg)) . 689) (undo-tree-id167 . -103) (t 25139 19324 539627 769000)) nil (25139 19326 943221 99000) 0 nil])
([nil nil ((686 . 689) (t 25139 19326 946294 344000)) nil (25139 19330 530113 643000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 687) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) 689) nil (25139 19330 530097 743000) 0 nil])
([nil nil ((#("  inline int get_line() {
" 0 2 (ws-butler-chg chg fontified t) 2 8 (face font-lock-keyword-face ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 11 (face font-lock-type-face ws-butler-chg chg fontified t) 11 12 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 21 (face font-lock-function-name-face ws-butler-chg chg fontified t) 21 26 (ws-butler-chg chg fontified t)) . 531) (t 25139 19330 539627 541000)) nil (25139 19383 493461 867000) 0 nil])
([nil nil ((#("    return line;
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 10 (face font-lock-keyword-face ws-butler-chg chg fontified t) 10 17 (ws-butler-chg chg fontified t)) . 531)) nil (25139 19383 493448 367000) 0 nil])
([nil nil ((#("  }
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t)) . 531)) nil (25139 19383 493435 767000) 0 nil])
([nil nil ((#("  inline void set_line(int n) {
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 8 (face font-lock-keyword-face ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 12 (face font-lock-type-face ws-butler-chg chg fontified t) 12 13 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 22 (face font-lock-function-name-face ws-butler-chg chg fontified t) 22 23 (c-type c-decl-arg-start ws-butler-chg chg fontified t) 23 26 (face font-lock-type-face ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (face font-lock-variable-name-face ws-butler-chg chg fontified t) 28 32 (ws-butler-chg chg fontified t)) . 531)) nil (25139 19383 493422 967000) 0 nil])
([nil nil ((#("    line = line < 0 ? 0 : (line >= items.size() ? items.size() - 1 : m);
" 0 1 (ws-butler-chg delete fontified t) 1 70 (ws-butler-chg chg fontified t) 70 71 (ws-butler-chg chg fontified t) 71 72 (fontified t ws-butler-chg chg) 72 73 (fontified t ws-butler-chg chg)) . 531)) nil (25139 19383 493410 167000) 0 nil])
([nil nil ((#("  }
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg delete) 3 4 (fontified t ws-butler-chg chg)) . 531) (undo-tree-id226 . -3)) nil (25139 19383 493396 967000) 0 nil])
([nil nil ((nil rear-nonsticky nil 686 . 687) (nil fontified nil 686 . 687) (nil fontified nil 685 . 686) (nil fontified nil 684 . 685) (nil fontified nil 683 . 684) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 680 . 681) (nil fontified nil 611 . 680) (nil fontified nil 610 . 611) (nil fontified nil 606 . 610) (nil fontified nil 605 . 606) (nil fontified nil 604 . 605) (nil fontified nil 601 . 604) (nil fontified nil 600 . 601) (nil fontified nil 592 . 600) (nil fontified nil 591 . 592) (nil fontified nil 590 . 591) (nil fontified nil 587 . 590) (nil fontified nil 586 . 587) (nil fontified nil 580 . 586) (nil fontified nil 579 . 580) (nil fontified nil 578 . 579) (nil fontified nil 575 . 578) (nil fontified nil 574 . 575) (nil fontified nil 567 . 574) (nil fontified nil 561 . 567) (nil fontified nil 558 . 561) (nil fontified nil 557 . 558) (nil fontified nil 552 . 557) (nil fontified nil 544 . 552) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 540 . 542) (nil fontified nil 539 . 540) (nil fontified nil 533 . 539) (nil fontified nil 531 . 533) (531 . 687)) nil (25139 19383 493379 767000) 0 nil])
([nil nil ((554 . 555)) nil (25139 19383 493356 767000) 0 nil])
([nil nil ((#(" {" 0 2 (fontified t ws-butler-chg chg)) . 555) (undo-tree-id225 . -2)) nil (25139 19383 493343 767000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t ws-butler-chg chg)) . -533) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("n" 0 1 (face font-lock-type-face fontified t ws-butler-chg chg)) . -534) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("l" 0 1 (face font-lock-type-face fontified t ws-butler-chg chg)) . -535) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("i" 0 1 (face font-lock-type-face fontified t ws-butler-chg chg)) . -536) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("n" 0 1 (face font-lock-type-face fontified t ws-butler-chg chg)) . -537) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("e" 0 1 (face font-lock-type-face fontified t ws-butler-chg chg)) . -538) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -539) (undo-tree-id224 . -1) 540) nil (25139 19383 493324 767000) 0 nil])
([nil nil ((#("  return line;" 0 2 (fontified t ws-butler-chg chg) 2 8 (face font-lock-keyword-face fontified t ws-butler-chg chg) 8 14 (fontified t ws-butler-chg chg)) . 551) (undo-tree-id184 . -14)) nil (25139 19383 492929 167000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 551) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("  " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . -552) 551) nil (25139 19383 492913 267000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t ws-butler-chg delete)) . 551) (undo-tree-id180 . -1) (undo-tree-id181 . -1)) nil (25139 19383 492895 667000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 551) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 551) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 551) (#("i" 0 1 (fontified t ws-butler-chg delete)) . 551) (#("l" 0 1 (fontified t ws-butler-chg delete)) . 551) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 551) (#("i" 0 1 (face font-lock-keyword-face fontified t ws-butler-chg delete)) . 551) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 551) (undo-tree-id179 . -1) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 551) (#("
" 0 1 (fontified t ws-butler-chg delete)) . 551)) nil (25139 19383 492876 667000) 0 nil])
([nil nil ((571 . 572)) nil (25139 19383 492859 167000) 0 nil])
([nil nil ((#(" {" 0 2 (fontified t ws-butler-chg chg)) . 572) (undo-tree-id178 . -2)) nil (25139 19383 492846 167000) 0 nil])
([nil nil ((#("    line = line < 0 ? 0 : (line >= items.size() ? items.size() - 1 : m);
" 0 1 (fontified t ws-butler-chg chg) 1 70 (fontified t ws-butler-chg chg) 70 71 (fontified t ws-butler-chg chg) 71 72 (fontified t ws-butler-chg chg) 72 73 (fontified t ws-butler-chg chg)) . 573) (undo-tree-id177 . -73)) nil (25139 19383 492828 567000) 0 nil])
([nil nil ((#("  }
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t rear-nonsticky t ws-butler-chg chg)) . 573) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -3) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4)) nil (25139 19383 492807 467000) 0 nil])
([nil nil ((#("  int line;
" 0 2 (fontified t ws-butler-chg chg) 2 4 (face font-lock-type-face fontified t ws-butler-chg chg) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 10 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 10 12 (fontified t ws-butler-chg chg)) . 606) (t 25139 19383 496292 191000)) nil (25139 19394 587862 51000) 0 nil])
([nil nil ((656 . 659)) nil (25139 19394 587848 951000) 0 nil])
([nil nil ((657 . 660) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 657) (undo-tree-id230 . -2) 659) nil (25139 19394 587835 351000) 0 nil])
([nil nil ((658 . 660) (#("    " 0 2 (fontified nil ws-butler-chg chg) 2 4 (fontified nil ws-butler-chg chg)) . 658) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (nil rear-nonsticky nil 671 . 672) (nil fontified nil 670 . 672) (nil fontified nil 666 . 670) (nil fontified nil 665 . 666) (nil fontified nil 664 . 665) (nil fontified nil 662 . 664) (nil fontified nil 660 . 662) (660 . 672)) nil (25139 19394 587817 851000) 0 nil])
([nil nil ((657 . 664)) nil (25139 19394 587790 351000) 0 nil])
([nil nil ((664 . 665)) nil (25139 19394 587774 551000) 0 nil])
([nil nil ((657 . 658) (t 25139 19394 592958 438000)) nil (25139 19396 309711 12000) 0 nil])
([nil nil ((#("  inline void ToggleEditMode() {
" 0 2 (ws-butler-chg chg fontified t) 2 8 (face font-lock-keyword-face ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 12 (face font-lock-type-face ws-butler-chg chg fontified t) 12 13 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 28 (face font-lock-function-name-face ws-butler-chg chg fontified t) 28 33 (ws-butler-chg chg fontified t)) . 302) (t 25139 19396 316291 707000)) nil (25139 19498 95528 245000) 0 nil])
([nil nil ((#("    edit_mode = !m_edit_mode;
" 0 1 (ws-butler-chg delete fontified t) 1 16 (ws-butler-chg chg fontified t) 16 17 (face font-lock-negation-char-face ws-butler-chg chg fontified t) 17 30 (ws-butler-chg chg fontified t)) . 302)) nil (25139 19498 95515 245000) 0 nil])
([nil nil ((#("  }
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t)) . 302)) nil (25139 19498 95502 445000) 0 nil])
([nil nil ((#("  inline Menu &add(MenuItem* item) {
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 8 (face font-lock-keyword-face ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 12 (face font-lock-type-face ws-butler-chg chg fontified t) 12 13 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t) 13 15 (ws-butler-chg chg fontified t) 15 18 (face font-lock-function-name-face ws-butler-chg chg fontified t) 18 19 (c-type c-decl-arg-start ws-butler-chg chg fontified t) 19 27 (face font-lock-type-face ws-butler-chg chg fontified t) 27 29 (ws-butler-chg chg fontified t) 29 33 (face font-lock-variable-name-face ws-butler-chg chg fontified t) 33 37 (ws-butler-chg chg fontified t)) . 302)) nil (25139 19498 95489 745000) 0 nil])
([nil nil ((#("    items.push_back(item);
" 0 1 (ws-butler-chg delete fontified t) 1 27 (ws-butler-chg chg fontified t)) . 302)) nil (25139 19498 95476 845000) 0 nil])
([nil nil ((#("    return *this;
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 10 (face font-lock-keyword-face ws-butler-chg chg fontified t) 10 12 (ws-butler-chg chg fontified t) 12 16 (face font-lock-keyword-face ws-butler-chg chg fontified t) 16 18 (ws-butler-chg chg fontified t)) . 302)) nil (25139 19498 95464 145000) 0 nil])
([nil nil ((#("  }
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t)) . 302)) nil (25139 19498 95451 345000) 0 nil])
([nil nil ((nil rear-nonsticky nil 454 . 455) (nil fontified nil 452 . 455) (nil fontified nil 451 . 452) (nil fontified nil 449 . 451) (nil fontified nil 445 . 449) (nil fontified nil 443 . 445) (nil fontified nil 437 . 443) (nil fontified nil 434 . 437) (nil fontified nil 433 . 434) (nil fontified nil 407 . 433) (nil fontified nil 406 . 407) (nil fontified nil 402 . 406) (nil fontified nil 398 . 402) (nil fontified nil 396 . 398) (nil fontified nil 388 . 396) (nil fontified nil 387 . 388) (nil fontified nil 384 . 387) (nil fontified nil 382 . 384) (nil fontified nil 381 . 382) (nil fontified nil 378 . 381) (nil fontified nil 377 . 378) (nil fontified nil 371 . 377) (nil fontified nil 370 . 371) (nil fontified nil 369 . 370) (nil fontified nil 366 . 369) (nil fontified nil 365 . 366) (nil fontified nil 352 . 365) (nil fontified nil 351 . 352) (nil fontified nil 336 . 351) (nil fontified nil 335 . 336) (nil fontified nil 330 . 335) (nil fontified nil 316 . 330) (nil fontified nil 315 . 316) (nil fontified nil 314 . 315) (nil fontified nil 311 . 314) (nil fontified nil 310 . 311) (nil fontified nil 304 . 310) (nil fontified nil 302 . 304) (302 . 455)) nil (25139 19498 95435 345000) 0 nil])
([nil nil ((332 . 333)) nil (25139 19498 95413 545000) 0 nil])
([nil nil ((#(" {" 0 2 (fontified t ws-butler-chg chg)) . 333)) nil (25139 19498 95400 245000) 0 nil])
([nil nil ((#("    edit_mode = !m_edit_mode;
" 0 1 (fontified t ws-butler-chg chg) 1 16 (fontified t ws-butler-chg chg) 16 17 (face font-lock-negation-char-face fontified t ws-butler-chg chg) 17 30 (fontified t ws-butler-chg chg)) . 334)) nil (25139 19498 95387 545000) 0 nil])
([nil nil ((#("  }
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t ws-butler-chg chg)) . 334)) nil (25139 19498 95374 845000) 0 nil])
([nil nil ((368 . 369)) nil (25139 19498 95362 145000) 0 nil])
([nil nil ((#(" {" 0 2 (fontified t ws-butler-chg chg)) . 369)) nil (25139 19498 95349 245000) 0 nil])
([nil nil ((#("    items.push_back(item);
" 0 1 (fontified t ws-butler-chg chg) 1 27 (fontified t ws-butler-chg chg)) . 370)) nil (25139 19498 95335 845000) 0 nil])
([nil nil ((#("    return *this;
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t ws-butler-chg chg) 4 10 (face font-lock-keyword-face fontified t ws-butler-chg chg) 10 12 (fontified t ws-butler-chg chg) 12 16 (face font-lock-keyword-face fontified t ws-butler-chg chg) 16 18 (fontified t ws-butler-chg chg)) . 370)) nil (25139 19498 95321 845000) 0 nil])
([nil nil ((#("  }
" 0 1 (fontified t ws-butler-chg delete) 1 3 (fontified t ws-butler-chg chg) 3 4 (fontified t rear-nonsticky t ws-butler-chg chg)) . 370) (undo-tree-id235 . -4) (undo-tree-id236 . -4)) nil (25139 19498 95308 545000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 370)) nil (25139 19498 95291 845000) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -326) (undo-tree-id231 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -327) (undo-tree-id232 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -328) (undo-tree-id233 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -329) (undo-tree-id234 . -1) 330) nil (25139 19498 95277 845000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . 316)) nil (25139 19498 95241 145000) 0 nil])
([nil nil ((316 . 317)) nil (25139 19498 95228 545000) 0 nil])
([nil nil ((322 . 324)) nil (25139 19498 95215 645000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . 324)) nil (25139 19498 95197 245000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 304) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 304) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 304) (#("i" 0 1 (fontified t ws-butler-chg delete)) . 304) (#("l" 0 1 (fontified t ws-butler-chg delete)) . 304) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 304) (#("i" 0 1 (face font-lock-keyword-face fontified t ws-butler-chg chg)) . 304) (t 25139 19498 102954 509000)) nil (25139 19505 773906 104000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 326) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 326) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 326) (#("i" 0 1 (fontified t ws-butler-chg delete)) . 326) (#("l" 0 1 (fontified t ws-butler-chg delete)) . 326) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 326) (#("i" 0 1 (face font-lock-keyword-face fontified t ws-butler-chg chg)) . 326)) nil (25139 19505 773885 104000) 0 nil])
([nil nil ((#("void toggle_edit();" 0 1 (face font-lock-type-face fontified t ws-butler-chg delete) 1 3 (face font-lock-type-face fontified t ws-butler-chg chg) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (face font-lock-function-name-face fontified t ws-butler-chg chg) 6 7 (face font-lock-function-name-face fontified t ws-butler-chg delete) 7 11 (face font-lock-function-name-face fontified t ws-butler-chg chg) 11 12 (face font-lock-function-name-face fontified t ws-butler-chg chg) 12 13 (face font-lock-function-name-face fontified t ws-butler-chg chg) 13 14 (face font-lock-function-name-face fontified t ws-butler-chg delete) 14 16 (face font-lock-function-name-face fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg delete) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg)) . 304) (undo-tree-id248 . -19) (t 25139 19505 779620 879000)) nil (25139 19520 590186 553000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 304) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("  " 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg)) . -305) (undo-tree-id247 . -2) 304) nil (25139 19520 590169 452000) 0 nil])
([nil nil ((#("Menu &add(MenuItem* item);" 0 1 (face font-lock-type-face fontified t ws-butler-chg delete) 1 3 (face font-lock-type-face fontified t ws-butler-chg chg) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 4 6 (fontified t ws-butler-chg chg) 6 9 (face font-lock-function-name-face fontified t ws-butler-chg chg) 9 10 (c-type c-decl-arg-start fontified t ws-butler-chg chg) 10 18 (face font-lock-type-face fontified t ws-butler-chg chg) 18 20 (fontified t ws-butler-chg chg) 20 24 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg)) . 304) (undo-tree-id242 . -26) (undo-tree-id243 . -10) (undo-tree-id244 . -25)) nil (25139 19520 590149 252000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 304) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("  " 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg)) . -305) (undo-tree-id241 . -2) 304) nil (25139 19520 590126 852000) 0 nil])
([nil nil ((441 . 443) (419 . 421) (nil rear-nonsticky nil 465 . 466) (nil fontified nil 465 . 466) (nil fontified nil 464 . 465) (nil fontified nil 463 . 464) (nil fontified nil 459 . 463) (nil fontified nil 457 . 459) (nil fontified nil 449 . 457) (nil fontified nil 448 . 449) (nil fontified nil 445 . 448) (nil fontified nil 443 . 445) (nil fontified nil 442 . 443) (nil fontified nil 440 . 442) (nil fontified nil 439 . 440) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (nil fontified nil 436 . 437) (nil fontified nil 435 . 436) (nil fontified nil 433 . 435) (nil fontified nil 432 . 433) (nil fontified nil 431 . 432) (nil fontified nil 430 . 431) (nil fontified nil 426 . 430) (nil fontified nil 425 . 426) (nil fontified nil 424 . 425) (nil fontified nil 423 . 424) (nil fontified nil 422 . 423) (nil fontified nil 420 . 422) (nil fontified nil 419 . 420) (419 . 466)) nil (25139 19520 590077 252000) 0 nil])
([nil nil ((#("  void toggle_edit();
" 0 2 (fontified t ws-butler-chg chg) 2 3 (face font-lock-type-face fontified t ws-butler-chg chg) 3 5 (face font-lock-type-face fontified t ws-butler-chg chg) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (face font-lock-function-name-face fontified t ws-butler-chg chg) 8 9 (face font-lock-function-name-face fontified t ws-butler-chg chg) 9 13 (face font-lock-function-name-face fontified t ws-butler-chg chg) 13 14 (face font-lock-function-name-face fontified t ws-butler-chg chg) 14 15 (face font-lock-function-name-face fontified t ws-butler-chg chg) 15 16 (face font-lock-function-name-face fontified t ws-butler-chg chg) 16 18 (face font-lock-function-name-face fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg)) . 419) (undo-tree-id249 . -2) (undo-tree-id250 . -21) (undo-tree-id251 . -22) (t 25139 19520 596286 985000)) nil (25139 19601 111368 139000) 0 nil])
([nil nil ((419 . 420) (t 25139 19601 116283 907000)) nil (25139 19620 431095 669000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 419)) nil (25139 19620 431082 469000) 0 nil])
([nil nil ((#("  std::vector<MenuItem*> items;
" 0 2 (fontified t ws-butler-chg chg) 2 5 (face font-lock-constant-face fontified t ws-butler-chg chg) 5 7 (fontified t ws-butler-chg chg) 7 13 (face font-lock-type-face fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg category c-<-as-paren-syntax) 14 22 (face font-lock-type-face fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (c-type c-decl-id-start fontified t ws-butler-chg chg category c->-as-paren-syntax) 24 25 (fontified t ws-butler-chg chg) 25 30 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 30 32 (fontified t ws-butler-chg chg)) . 449) (undo-tree-id263 . -2) (undo-tree-id264 . -31) (undo-tree-id265 . -32)) nil (25139 19620 431069 369000) 0 nil])
([nil nil ((nil rear-nonsticky nil 553 . 554) (nil fontified nil 552 . 554) (nil fontified nil 547 . 552) (nil fontified nil 546 . 547) (nil fontified nil 545 . 546) (nil category c->-as-paren-syntax 545 . 546) (nil fontified nil 544 . 545) (nil fontified nil 536 . 544) (nil fontified nil 535 . 536) (nil category c-<-as-paren-syntax 535 . 536) (nil fontified nil 529 . 535) (nil fontified nil 527 . 529) (nil fontified nil 524 . 527) (nil fontified nil 522 . 524) (522 . 554)) nil (25139 19620 431051 569000) 0 nil])
([nil nil ((#("  std::vector<MenuItem*> items;
" 0 2 (fontified t ws-butler-chg chg) 2 5 (face font-lock-constant-face fontified t ws-butler-chg chg) 5 7 (fontified t ws-butler-chg chg) 7 13 (face font-lock-type-face fontified t ws-butler-chg chg) 13 14 (category c-<-as-paren-syntax fontified t ws-butler-chg chg) 14 22 (face font-lock-type-face fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (c-type c-decl-id-start category c->-as-paren-syntax fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 30 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 30 31 (fontified t ws-butler-chg chg) 31 32 (rear-nonsticky t fontified t ws-butler-chg chg)) . 522) (undo-tree-id260 . -32) (undo-tree-id261 . -32) (undo-tree-id262 . -32)) nil (25139 19620 431034 769000) 0 nil])
([nil nil ((nil fontified nil 541 . 542) (nil fontified nil 540 . 541) (nil fontified nil 535 . 540) (nil fontified nil 534 . 535) (nil fontified nil 533 . 534) (nil category c->-as-paren-syntax 533 . 534) (nil fontified nil 532 . 533) (nil fontified nil 524 . 532) (nil fontified nil 523 . 524) (nil category c-<-as-paren-syntax 523 . 524) (nil fontified nil 517 . 523) (nil fontified nil 515 . 517) (nil fontified nil 512 . 515) (nil fontified nil 510 . 512) (510 . 542)) nil (25139 19620 431016 669000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t ws-butler-chg chg)) . -553) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) 554) nil (25139 19620 430997 69000) 0 nil])
([nil nil ((448 . 450) (t 25139 19620 436283 174000)) nil (25139 19653 792944 520000) 0 nil])
([nil nil ((450 . 456)) nil (25139 19653 792931 420000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -454) (undo-tree-id273 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -455) (undo-tree-id274 . -1) 456) nil (25139 19653 792917 919000) 0 nil])
([nil nil ((454 . 461)) nil (25139 19653 792900 920000) 0 nil])
([nil nil ((461 . 463)) nil (25139 19653 792888 20000) 0 nil])
([nil nil ((463 . 464)) nil (25139 19653 792875 320000) 0 nil])
([nil nil ((464 . 465)) nil (25139 19653 792862 720000) 0 nil])
([nil nil ((465 . 476)) nil (25139 19653 792849 819000) 0 nil])
([nil nil ((476 . 478)) nil (25139 19653 792837 20000) 0 nil])
([nil nil ((478 . 479)) nil (25139 19653 792824 320000) 0 nil])
([nil nil ((479 . 480)) nil (25139 19653 792811 720000) 0 nil])
([nil nil ((480 . 481)) nil (25139 19653 792798 919000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -454) (undo-tree-id266 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -455) (undo-tree-id267 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -456) (undo-tree-id268 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -457) (undo-tree-id269 . -1) (#("l" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -458) (undo-tree-id270 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -459) (undo-tree-id271 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -460) (undo-tree-id272 . -1) 461) nil (25139 19653 792783 420000) 0 nil])
([nil nil ((454 . 458)) nil (25139 19653 792745 420000) 0 nil])
([nil nil ((450 . 457) (t 25139 19653 799615 234000)) nil (25139 19659 246020 145000) 0 nil])
([nil nil ((421 . 428) (t 25139 19659 256281 691000)) nil (25139 19671 158261 149000) 0 nil])
([nil nil ((453 . 454)) nil (25139 19671 158248 49000) 0 nil])
([nil nil ((454 . 455)) nil (25139 19671 158232 348000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -453) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("{" 0 1 (fontified t)) . -454) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#(";" 0 1 (fontified t)) . -455) (undo-tree-id9 . -1) 456 (t 25139 19671 162947 904000)) nil (25139 19715 87119 513000) 0 nil])
([nil nil ((453 . 454)) nil (25139 19715 87065 212000) 0 nil])
([nil current ((493 . 494) (t 25139 19715 92946 239000)) nil (25139 19716 737147 365000) 0 nil])
nil

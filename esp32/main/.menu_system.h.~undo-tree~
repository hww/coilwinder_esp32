(undo-tree-save-format-version . 1)
"6ff4a1f4795c7ae24c80a9576b75055c900c185b"
[nil nil nil nil (25139 14405 310398 45000) 0 nil]
([nil nil ((111 . 389) (#("
{
    public:

        Menu* m_root;
        Menu* m_current;
        bool m_edit;
        float m_refresh_at;

        MenuSystem();

        void Update(float time);
        void Render();
        void OnEvent(MenuEvent evt);
        void OpenMenu(Menu* menu, int line_num = -1);
        void CloseMenu(Menu* menu);
        void ToggleEdit();

      " 0 7 (fontified t) 7 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t c-type c-decl-end) 14 24 (fontified t) 24 27 (fontified t face font-lock-type-face) 27 28 (fontified t c-type c-decl-id-start face font-lock-type-face) 28 30 (fontified t) 30 36 (fontified t face font-lock-variable-name-face) 36 46 (fontified t) 46 49 (fontified t face font-lock-type-face) 49 50 (fontified t c-type c-decl-id-start face font-lock-type-face) 50 52 (fontified t) 52 61 (fontified t face font-lock-variable-name-face) 61 71 (fontified t) 71 74 (fontified t face font-lock-type-face) 74 75 (fontified t c-type c-decl-id-start face font-lock-type-face) 75 76 (fontified t) 76 82 (fontified t face font-lock-variable-name-face) 82 92 (fontified t) 92 96 (fontified t face font-lock-type-face) 96 97 (fontified t c-type c-decl-id-start face font-lock-type-face) 97 98 (fontified t) 98 110 (fontified t face font-lock-variable-name-face) 110 111 (fontified t c-type c-decl-id-start) 111 121 (fontified t) 121 131 (fontified t face font-lock-function-name-face) 131 144 (fontified t) 144 147 (fontified t face font-lock-type-face) 147 148 (fontified t c-type c-decl-id-start face font-lock-type-face) 148 149 (fontified t) 149 155 (fontified t face font-lock-function-name-face) 155 156 (fontified t c-type c-decl-arg-start) 156 161 (fontified t face font-lock-type-face) 161 162 (fontified t) 162 166 (fontified t face font-lock-variable-name-face) 166 177 (fontified t) 177 180 (fontified t face font-lock-type-face) 180 181 (fontified t c-type c-decl-id-start face font-lock-type-face) 181 182 (fontified t) 182 188 (fontified t face font-lock-function-name-face) 188 200 (fontified t) 200 203 (fontified t face font-lock-type-face) 203 204 (fontified t c-type c-decl-id-start face font-lock-type-face) 204 205 (fontified t) 205 212 (fontified t face font-lock-function-name-face) 212 213 (fontified t c-type c-decl-arg-start) 213 222 (fontified t face font-lock-type-face) 222 223 (fontified t) 223 226 (fontified t face font-lock-variable-name-face) 226 237 (fontified t) 237 240 (fontified t face font-lock-type-face) 240 241 (fontified t c-type c-decl-id-start face font-lock-type-face) 241 242 (fontified t) 242 250 (fontified t face font-lock-function-name-face) 250 251 (fontified t c-type c-decl-arg-start) 251 255 (fontified t face font-lock-type-face) 255 257 (fontified t) 257 261 (fontified t face font-lock-variable-name-face) 261 262 (fontified t c-type c-decl-arg-start) 262 263 (fontified t) 263 266 (fontified t face font-lock-type-face) 266 267 (fontified t) 267 275 (fontified t face font-lock-variable-name-face) 275 291 (fontified t) 291 294 (fontified t face font-lock-type-face) 294 295 (fontified t c-type c-decl-id-start face font-lock-type-face) 295 296 (fontified t) 296 305 (fontified t face font-lock-function-name-face) 305 306 (fontified t c-type c-decl-arg-start) 306 310 (fontified t face font-lock-type-face) 310 312 (fontified t) 312 316 (fontified t face font-lock-variable-name-face) 316 327 (fontified t) 327 330 (fontified t face font-lock-type-face) 330 331 (fontified t c-type c-decl-id-start face font-lock-type-face) 331 332 (fontified t) 332 342 (fontified t face font-lock-function-name-face) 342 353 (fontified t)) . 111) (t 25139 10631 843291 786000)) nil (25139 16409 601778 247000) 0 nil])
([nil nil ((196 . 198)) nil (25139 16409 601765 47000) 0 nil])
([nil nil ((198 . 200)) nil (25139 16409 601752 147000) 0 nil])
([nil nil ((200 . 205)) nil (25139 16409 601739 447000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -204) (undo-tree-id0 . -1) 205) nil (25139 16409 601725 847000) 0 nil])
([nil nil ((204 . 222)) nil (25139 16409 601687 247000) 0 nil])
([nil nil ((222 . 223)) nil (25139 16409 601671 247000) 0 nil])
([nil nil ((223 . 226) (t 25139 16409 603072 34000)) nil (25139 16442 593159 247000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 224) (undo-tree-id6 . -2) 226) nil (25139 16442 593145 447000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 182) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 182)) nil (25139 16442 593129 47000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 166) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 166)) nil (25139 16442 593115 547000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 148) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 148)) nil (25139 16442 593101 747000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 132) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 132)) nil (25139 16442 593088 547000) 0 nil])
([nil nil ((#("U" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -241) (undo-tree-id5 . -1) 242) nil (25139 16442 593071 47000) 0 nil])
([nil nil ((241 . 242)) nil (25139 16442 593055 447000) 0 nil])
([nil nil ((#("R" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -268) (undo-tree-id4 . -1) 269) nil (25139 16442 593042 47000) 0 nil])
([nil nil ((268 . 269)) nil (25139 16442 593025 147000) 0 nil])
([nil nil ((#("O" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -285) (undo-tree-id3 . -1) 286) nil (25139 16442 593011 847000) 0 nil])
([nil nil ((285 . 286)) nil (25139 16442 592995 847000) 0 nil])
([nil nil ((287 . 289)) nil (25139 16442 592983 247000) 0 nil])
([nil nil ((#("E" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . 289)) nil (25139 16442 592970 347000) 0 nil])
([nil nil ((#("O" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . 317)) nil (25139 16442 592957 247000) 0 nil])
([nil nil ((317 . 318)) nil (25139 16442 592944 547000) 0 nil])
([nil nil ((321 . 322)) nil (25139 16442 592931 947000) 0 nil])
([nil nil ((#("M" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . 322)) nil (25139 16442 592919 147000) 0 nil])
([nil nil ((322 . 323)) nil (25139 16442 592906 447000) 0 nil])
([nil nil ((371 . 372)) nil (25139 16442 592893 747000) 0 nil])
([nil nil ((#("M" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . 372)) nil (25139 16442 592880 847000) 0 nil])
([nil nil ((372 . 373)) nil (25139 16442 592867 947000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -365) (undo-tree-id2 . -1) 366) nil (25139 16442 592854 747000) 0 nil])
([nil nil ((365 . 367)) nil (25139 16442 592839 47000) 0 nil])
([nil nil ((#("C" 0 1 (ws-butler-chg delete fontified t face font-lock-function-name-face)) . 367)) nil (25139 16442 592825 547000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -397) (undo-tree-id1 . -1) 398) nil (25139 16442 592812 347000) 0 nil])
([nil nil ((397 . 398)) nil (25139 16442 592789 447000) 0 nil])
([nil nil ((403 . 404)) nil (25139 16442 592776 747000) 0 nil])
([nil nil ((#("E" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . 404)) nil (25139 16442 592762 847000) 0 nil])
([nil nil ((404 . 405)) nil (25139 16442 592744 547000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t c-is-sws t)) . 48) (undo-tree-id7 . -1) (t 25139 16442 593070 780000)) nil (25139 16448 127312 83000) 0 nil])
([nil nil ((#("  static MenuSystem instance;
" 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 18 (fontified t face font-lock-type-face) 18 19 (fontified t c-type c-decl-id-start face font-lock-type-face) 19 20 (fontified t) 20 28 (fontified t face font-lock-variable-name-face) 28 29 (fontified t) 29 30 (fontified t)) . 412) (undo-tree-id8 . -2) (undo-tree-id9 . -29) (undo-tree-id10 . -30) (t 25139 16448 129737 233000)) nil (25139 18370 649176 803000) 0 nil])
([nil nil ((nil rear-nonsticky nil 441 . 442) (nil fontified nil 441 . 442) (nil fontified nil 440 . 441) (nil fontified nil 432 . 440) (nil fontified nil 431 . 432) (nil fontified nil 430 . 431) (nil fontified nil 421 . 430) (nil fontified nil 420 . 421) (nil fontified nil 414 . 420) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (412 . 442)) nil (25139 18370 649134 603000) 0 nil])
([nil nil ((232 . 235) (t 25139 18370 649664 77000)) nil (25139 18984 266567 775000) 0 nil])
([nil nil ((235 . 244)) nil (25139 18984 266554 875000) 0 nil])
([nil nil ((244 . 246)) nil (25139 18984 266541 775000) 0 nil])
([nil nil ((246 . 247)) nil (25139 18984 266525 475000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -64) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("p" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -65) (undo-tree-id15 . -1) 66 (t 25139 18984 269640 718000)) nil (25139 23020 431949 432000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t c-in-sws t ws-butler-chg delete face font-lock-string-face)) . 87) (#("p" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . 87)) nil (25139 23020 431918 132000) 0 nil])
([nil nil ((#("  Menu* root;
" 0 2 (ws-butler-chg chg fontified t) 2 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 6 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 9 12 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 12 14 (ws-butler-chg chg fontified t)) . 119) (t 25139 23020 436153 958000)) nil (25139 25081 844600 855000) 0 nil])
([nil nil ((#("  Menu* current;
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 6 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 9 15 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t)) . 119)) nil (25139 25081 844587 755000) 0 nil])
([nil nil ((#("  bool edit;
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 8 11 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t)) . 119)) nil (25139 25081 844574 955000) 0 nil])
([nil nil ((#("  float refresh_at;
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 6 (ws-butler-chg chg fontified t face font-lock-type-face) 6 7 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 9 18 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t)) . 119)) nil (25139 25081 844562 455000) 0 nil])
([nil nil ((#("  float modification_speed;
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg chg fontified t face font-lock-type-face) 6 7 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 9 10 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 10 11 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 11 12 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 12 13 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 13 14 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 16 17 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 17 18 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 18 19 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 19 20 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 20 21 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 21 22 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 22 23 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 23 24 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 24 25 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 25 26 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t)) . 119) (undo-tree-id20 . -8)) nil (25139 25081 844549 655000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 119)) nil (25139 25081 844533 955000) 0 nil])
([nil nil ((329 . 332)) nil (25139 25081 844521 655000) 0 nil])
([nil nil ((330 . 332) (#("    " 0 2 (ws-butler-chg chg fontified nil) 2 4 (ws-butler-chg chg fontified nil)) . 330) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (nil rear-nonsticky nil 424 . 425) (nil fontified nil 424 . 425) (nil fontified nil 423 . 424) (nil fontified nil 422 . 423) (nil fontified nil 421 . 422) (nil fontified nil 420 . 421) (nil fontified nil 419 . 420) (nil fontified nil 418 . 419) (nil fontified nil 417 . 418) (nil fontified nil 416 . 417) (nil fontified nil 415 . 416) (nil fontified nil 414 . 415) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 409 . 410) (nil fontified nil 408 . 409) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 405 . 406) (nil fontified nil 404 . 405) (nil fontified nil 403 . 404) (nil fontified nil 402 . 403) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 399 . 400) (nil fontified nil 398 . 399) (nil fontified nil 397 . 398) (nil fontified nil 396 . 397) (nil fontified nil 395 . 396) (nil fontified nil 394 . 395) (nil fontified nil 385 . 394) (nil fontified nil 384 . 385) (nil fontified nil 383 . 384) (nil fontified nil 382 . 383) (nil fontified nil 378 . 382) (nil fontified nil 377 . 378) (nil fontified nil 376 . 377) (nil fontified nil 375 . 376) (nil fontified nil 374 . 375) (nil fontified nil 371 . 374) (nil fontified nil 370 . 371) (nil fontified nil 369 . 370) (nil fontified nil 368 . 369) (nil fontified nil 365 . 368) (nil fontified nil 364 . 365) (nil fontified nil 363 . 364) (nil fontified nil 362 . 363) (nil fontified nil 361 . 362) (nil fontified nil 355 . 361) (nil fontified nil 354 . 355) (nil fontified nil 352 . 354) (nil fontified nil 351 . 352) (nil fontified nil 348 . 351) (nil fontified nil 347 . 348) (nil fontified nil 346 . 347) (nil fontified nil 344 . 346) (nil fontified nil 341 . 344) (nil fontified nil 340 . 341) (nil fontified nil 338 . 340) (nil fontified nil 337 . 338) (nil fontified nil 334 . 337) (nil fontified nil 332 . 334) (332 . 425)) nil (25139 25081 844504 855000) 0 nil])
([nil nil ((422 . 424)) nil (25139 25081 844294 655000) 0 nil])
([nil nil ((424 . 435)) nil (25139 25081 844282 355000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -434) (undo-tree-id16 . -1) 435) nil (25139 25081 844269 55000) 0 nil])
([nil nil ((434 . 439)) nil (25139 25081 844245 155000) 0 nil])
([nil nil ((439 . 440)) nil (25139 25081 844229 755000) 0 nil])
([nil nil ((368 . 371) (t 25139 25081 846075 476000)) nil (25139 25088 405274 50000) 0 nil])
([nil nil ((#("  float refresh_at;
" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 6 (ws-butler-chg chg fontified t face font-lock-type-face) 6 7 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 9 18 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t)) . 377) (undo-tree-id24 . -2) (undo-tree-id25 . -19) (undo-tree-id26 . -20) (t 25139 25088 409408 560000)) nil (25139 25100 341170 158000) 0 nil])
([nil nil ((#("  float modification_speed;
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg chg fontified t face font-lock-type-face) 6 7 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 9 10 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 10 11 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 11 12 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 12 13 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 13 14 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 16 17 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 17 18 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 18 19 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 19 20 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 20 21 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 21 22 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 22 23 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 23 24 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 24 25 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 25 26 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t)) . 377) (undo-tree-id21 . -2) (undo-tree-id22 . -27) (undo-tree-id23 . -28)) nil (25139 25100 341148 58000) 0 nil])
([nil current ((nil rear-nonsticky nil 443 . 444) (nil fontified nil 443 . 444) (nil fontified nil 442 . 443) (nil fontified nil 441 . 442) (nil fontified nil 440 . 441) (nil fontified nil 439 . 440) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (nil fontified nil 436 . 437) (nil fontified nil 435 . 436) (nil fontified nil 434 . 435) (nil fontified nil 433 . 434) (nil fontified nil 432 . 433) (nil fontified nil 431 . 432) (nil fontified nil 430 . 431) (nil fontified nil 429 . 430) (nil fontified nil 428 . 429) (nil fontified nil 427 . 428) (nil fontified nil 426 . 427) (nil fontified nil 425 . 426) (nil fontified nil 424 . 425) (nil fontified nil 423 . 424) (nil fontified nil 422 . 423) (nil fontified nil 421 . 422) (nil fontified nil 420 . 421) (nil fontified nil 419 . 420) (nil fontified nil 418 . 419) (nil fontified nil 417 . 418) (nil fontified nil 416 . 417) (nil fontified nil 415 . 416) (nil fontified nil 414 . 415) (nil fontified nil 405 . 414) (nil fontified nil 404 . 405) (nil fontified nil 403 . 404) (nil fontified nil 402 . 403) (nil fontified nil 398 . 402) (nil fontified nil 397 . 398) (nil fontified nil 396 . 397) (396 . 444)) nil (25139 29787 205886 433000) 0 nil])
([nil nil ((#("  static MenuSystem instance;
" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 8 (ws-butler-chg chg fontified t face font-lock-keyword-face) 8 9 (ws-butler-chg chg fontified t) 9 18 (ws-butler-chg chg fontified t face font-lock-type-face) 18 19 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 19 20 (ws-butler-chg chg fontified t) 20 28 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 28 29 (ws-butler-chg chg fontified t) 29 30 (ws-butler-chg chg rear-nonsticky t fontified t)) . 445) (undo-tree-id34 . -2) (undo-tree-id35 . -29) (t 25139 25100 346074 772000)) ((445 . 475)) (25139 29787 9890 503000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 444) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id33 . -1)) ((nil ws-butler-chg delete 445 . 446) (444 . 445) (t 25139 29784 585896 702000)) (25139 29784 581805 836000) 0 nil])
nil

(undo-tree-save-format-version . 1)
"76d27677484351fdce8d9884222056147054311e"
[nil nil nil nil (25139 17353 973599 132000) 0 nil]
([nil nil ((#("static void gpio_setup(int gpioNum, int gpioMode, int gpioVal);
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-type-face) 10 11 (fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (fontified t) 12 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t c-type c-decl-arg-start) 23 26 (fontified t face font-lock-type-face) 26 27 (fontified t) 27 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t c-type c-decl-arg-start) 35 36 (fontified t) 36 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t c-type c-decl-arg-start) 49 50 (fontified t) 50 53 (fontified t face font-lock-type-face) 53 54 (fontified t) 54 61 (fontified t face font-lock-variable-name-face) 61 64 (fontified t)) . 536) (undo-tree-id22 . -63) (undo-tree-id23 . -23) (undo-tree-id24 . -35) (undo-tree-id25 . -36) (undo-tree-id26 . -49) (undo-tree-id27 . -50) (undo-tree-id28 . -62) (undo-tree-id29 . -64) (undo-tree-id30 . -64) (undo-tree-id31 . -64) (undo-tree-id32 . -64) (undo-tree-id33 . -64) (undo-tree-id34 . -64) (undo-tree-id35 . -64) (undo-tree-id36 . -64) (undo-tree-id37 . -64) (undo-tree-id38 . -64) (undo-tree-id39 . -64) (undo-tree-id40 . -64) (undo-tree-id41 . -64) (undo-tree-id42 . -64) (undo-tree-id43 . -64) (undo-tree-id44 . -64) (undo-tree-id45 . -64) (undo-tree-id46 . -64) (undo-tree-id47 . -64) (undo-tree-id48 . -64) (undo-tree-id49 . -64) (undo-tree-id50 . -64) (undo-tree-id51 . -64) (undo-tree-id52 . -64) (undo-tree-id53 . -64) (undo-tree-id54 . -64) (undo-tree-id55 . -64) (undo-tree-id56 . -64) (undo-tree-id57 . -64) (undo-tree-id58 . -64) (undo-tree-id59 . -64) (undo-tree-id60 . -64) (undo-tree-id61 . -64) (undo-tree-id62 . -64) (undo-tree-id63 . -64) (undo-tree-id64 . -64) (undo-tree-id65 . -64) (undo-tree-id66 . -64) (undo-tree-id67 . -64) (undo-tree-id68 . -64) (undo-tree-id69 . -64) (undo-tree-id70 . -64) (undo-tree-id71 . -64) (undo-tree-id72 . -64) (t 25139 10602 863292 892000)) nil (25139 17353 973583 932000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 536) (undo-tree-id21 . -1)) nil (25139 17353 973517 732000) 0 nil])
([nil nil ((#("// ==============================================================================
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 82 (fontified t c-in-sws t face font-lock-comment-face)) . 536) (undo-tree-id20 . -82)) nil (25139 17353 973502 32000) 0 nil])
([nil nil ((#("// GPIO
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 8 (fontified t c-in-sws t face font-lock-comment-face)) . 536) (undo-tree-id19 . -8)) nil (25139 17353 973486 632000) 0 nil])
([nil nil ((#("// ==============================================================================
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 82 (fontified t c-in-sws t face font-lock-comment-face)) . 536) (undo-tree-id18 . -82)) nil (25139 17353 973471 232000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 536) (undo-tree-id16 . -1) (undo-tree-id17 . -1)) nil (25139 17353 973455 332000) 0 nil])
([nil nil ((#("static void gpio_setup(int gpioNum, int gpioMode, int gpioVal) {
" 0 1 (fontified t c-is-sws t ws-butler-chg delete face font-lock-keyword-face) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-type-face) 10 11 (fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (fontified t) 12 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t c-type c-decl-arg-start) 23 26 (fontified t face font-lock-type-face) 26 27 (fontified t) 27 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t c-type c-decl-arg-start) 35 36 (fontified t) 36 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t c-type c-decl-arg-start) 49 50 (fontified t) 50 53 (fontified t face font-lock-type-face) 53 54 (fontified t) 54 61 (fontified t face font-lock-variable-name-face) 61 65 (fontified t)) . 536) (undo-tree-id9 . -23) (undo-tree-id10 . -35) (undo-tree-id11 . -36) (undo-tree-id12 . -49) (undo-tree-id13 . -50) (undo-tree-id14 . -62) (undo-tree-id15 . -65)) nil (25139 17353 973431 632000) 0 nil])
([nil nil ((#("    auto gpioNumNative = (gpio_num_t)(gpioNum);
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 8 9 (fontified t) 9 22 (fontified t face font-lock-variable-name-face) 22 26 (fontified t) 26 36 (fontified t face font-lock-type-face) 36 48 (fontified t)) . 536) (undo-tree-id8 . -48)) nil (25139 17353 973409 132000) 0 nil])
([nil nil ((#("    auto gpioModeNative = (gpio_mode_t)(gpioMode);
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 8 9 (fontified t) 9 23 (fontified t face font-lock-variable-name-face) 23 27 (fontified t) 27 38 (fontified t face font-lock-type-face) 38 51 (fontified t)) . 536) (undo-tree-id7 . -51)) nil (25139 17353 973393 932000) 0 nil])
([nil nil ((#("    gpio_pad_select_gpio(gpioNumNative);
" 0 1 (fontified t ws-butler-chg delete) 1 41 (fontified t)) . 536) (undo-tree-id6 . -41)) nil (25139 17353 973377 232000) 0 nil])
([nil nil ((#("    gpio_set_direction(gpioNumNative, gpioModeNative);
" 0 1 (fontified t ws-butler-chg delete) 1 55 (fontified t)) . 536) (undo-tree-id5 . -55)) nil (25139 17353 973361 632000) 0 nil])
([nil nil ((#("    gpio_set_level(gpioNumNative, gpioVal);
" 0 1 (fontified t ws-butler-chg delete) 1 44 (fontified t)) . 536) (undo-tree-id4 . -44)) nil (25139 17353 973346 232000) 0 nil])
([nil nil ((#("    gpio_set_pull_mode(gpioNumNative, GPIO_PULLUP_ONLY);
" 0 1 (fontified t ws-butler-chg delete) 1 57 (fontified t)) . 536) (undo-tree-id3 . -57)) nil (25139 17353 973331 32000) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 536) (undo-tree-id1 . -1) (undo-tree-id2 . -2)) nil (25139 17353 973315 532000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 536) (undo-tree-id0 . -1)) nil (25139 17353 973297 32000) 0 nil])
([nil nil ((#("// ==============================================================================
" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 3 82 (fontified t face font-lock-comment-face c-in-sws t)) . 2395) (t 25139 17353 999702 748000)) nil (25139 17572 396615 27000) 0 nil])
([nil nil ((#("// Initializer
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 15 (fontified t c-in-sws t face font-lock-comment-face)) . 2395)) nil (25139 17572 396601 927000) 0 nil])
([nil nil ((#("// ==============================================================================
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 82 (fontified t c-in-sws t face font-lock-comment-face)) . 2395)) nil (25139 17572 396589 227000) 0 nil])
([nil nil ((#("/**
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete face font-lock-doc-face) 1 3 (fontified t c-in-sws t face font-lock-doc-face) 3 4 (fontified t c-in-sws t face font-lock-doc-face)) . 2395)) nil (25139 17572 396576 427000) 0 nil])
([nil nil ((#(" * Menu Initialization
" 0 1 (fontified t ws-butler-chg delete) 1 23 (fontified t)) . 2395)) nil (25139 17572 396563 727000) 0 nil])
([nil nil ((#(" **/
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t c-in-sws t)) . 2395) (undo-tree-id76 . -5)) nil (25139 17572 396550 627000) 0 nil])
([nil nil ((#("void menu_init()
" 0 1 (fontified t c-is-sws t ws-butler-chg delete face font-lock-type-face) 1 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 14 (fontified t face font-lock-function-name-face) 14 17 (fontified t)) . 2395)) nil (25139 17572 396534 927000) 0 nil])
([nil nil ((#("{
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 2395)) nil (25139 17572 396522 227000) 0 nil])
([nil nil ((#("    // esp32-rotary-encoder requires that the GPIO ISR service is installed before calling rotary_encoder_register()
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete) 1 4 (fontified t c-in-sws t c-is-sws t) 4 5 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5 7 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 7 61 (fontified t c-in-sws t face font-lock-comment-face) 61 116 (fontified t c-in-sws t face font-lock-comment-face) 116 117 (fontified t c-in-sws t face font-lock-comment-face)) . 2395)) nil (25139 17572 396509 427000) 0 nil])
([nil nil ((#("    ESP_ERROR_CHECK(gpio_install_isr_service(0));
" 0 1 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete) 1 4 (fontified t c-is-sws t c-in-sws t) 4 5 (fontified t c-is-sws t) 5 50 (fontified t)) . 2395)) nil (25139 17572 396496 427000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395)) nil (25139 17572 396483 627000) 0 nil])
([nil nil ((#("    // Initialise the rotary encoder device with the GPIOs for A and B signals
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete) 1 4 (fontified t c-in-sws t c-is-sws t) 4 5 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5 7 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 7 79 (fontified t c-in-sws t face font-lock-comment-face)) . 2395)) nil (25139 17572 396470 827000) 0 nil])
([nil nil ((#("    ESP_ERROR_CHECK(rotary_encoder_init(&info, ROT_ENC_A_GPIO, ROT_ENC_B_GPIO));
" 0 1 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete) 1 4 (fontified t c-is-sws t c-in-sws t) 4 5 (fontified t c-is-sws t) 5 81 (fontified t)) . 2395)) nil (25139 17572 396457 927000) 0 nil])
([nil nil ((#("    ESP_ERROR_CHECK(rotary_encoder_enable_half_steps(&info, ROT_ENABLE_HALF_STEPS));
" 0 1 (fontified t ws-butler-chg delete) 1 85 (fontified t)) . 2395)) nil (25139 17572 396445 127000) 0 nil])
([nil nil ((#("#ifdef FLIP_DIRECTION
" 0 1 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete face font-lock-preprocessor-face) 1 6 (fontified t c-in-sws t face font-lock-preprocessor-face) 6 21 (fontified t c-in-sws t) 21 22 (fontified t c-in-sws t)) . 2395) (undo-tree-id75 . -21)) nil (25139 17572 396432 127000) 0 nil])
([nil nil ((#("    ESP_ERROR_CHECK(rotary_encoder_flip_direction(&info));
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete) 1 4 (fontified t c-in-sws t c-is-sws t) 4 5 (fontified t c-is-sws t) 5 59 (fontified t)) . 2395)) nil (25139 17572 396416 327000) 0 nil])
([nil nil ((#("#endif
" 0 1 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete face font-lock-preprocessor-face) 1 6 (fontified t c-in-sws t face font-lock-preprocessor-face) 6 7 (fontified t c-in-sws t)) . 2395) (undo-tree-id74 . -6)) nil (25139 17572 396403 327000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395)) nil (25139 17572 396387 527000) 0 nil])
([nil nil ((#("    // Create a queue for events from the rotary encoder driver.
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete) 1 4 (fontified t c-in-sws t c-is-sws t) 4 5 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5 7 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 7 65 (fontified t c-in-sws t face font-lock-comment-face)) . 2395)) nil (25139 17572 396374 527000) 0 nil])
([nil nil ((#("    // Tasks can read from this queue to receive up to date position information.
" 0 1 (fontified t c-in-sws t ws-butler-chg delete) 1 4 (fontified t c-in-sws t) 4 5 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5 7 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 7 50 (fontified t c-in-sws t face font-lock-comment-face) 50 81 (c-in-sws t fontified t face font-lock-comment-face) 81 82 (fontified t c-in-sws t face font-lock-comment-face)) . 2395)) nil (25139 17572 396361 327000) 0 nil])
([nil nil ((#("    event_queue = rotary_encoder_create_queue();
" 0 1 (fontified t c-in-sws t ws-butler-chg delete) 1 4 (c-in-sws t fontified t) 4 5 (c-is-sws t fontified t) 5 49 (fontified t)) . 2395)) nil (25139 17572 396348 527000) 0 nil])
([nil nil ((#("    ESP_ERROR_CHECK(rotary_encoder_set_queue(&info, event_queue));
" 0 1 (fontified t ws-butler-chg delete) 1 67 (fontified t)) . 2395)) nil (25139 17572 396335 627000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395)) nil (25139 17572 396322 427000) 0 nil])
([nil nil ((#("    // Config buttons
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete) 1 4 (fontified t c-in-sws t c-is-sws t) 4 5 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5 7 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 7 22 (fontified t c-in-sws t face font-lock-comment-face)) . 2395)) nil (25139 17572 396309 627000) 0 nil])
([nil nil ((#("    gpio_setup(GP_BUTTON_ROT, GPIO_MODE_INPUT, 1);
" 0 1 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete) 1 4 (fontified t c-is-sws t c-in-sws t) 4 5 (fontified t c-is-sws t) 5 51 (fontified t)) . 2395)) nil (25139 17572 396296 927000) 0 nil])
([nil nil ((#("    gpio_setup(GP_BUTTON_A, GPIO_MODE_INPUT, 1);
" 0 1 (fontified t ws-butler-chg delete) 1 49 (fontified t)) . 2395)) nil (25139 17572 396284 227000) 0 nil])
([nil nil ((#("    gpio_setup(GP_BUTTON_B, GPIO_MODE_INPUT, 1);
" 0 1 (fontified t ws-butler-chg delete) 1 49 (fontified t)) . 2395)) nil (25139 17572 396271 527000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395)) nil (25139 17572 396258 627000) 0 nil])
([nil nil ((#("    // Config the menu
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete) 1 4 (fontified t c-in-sws t c-is-sws t) 4 5 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5 7 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 7 23 (fontified t c-in-sws t face font-lock-comment-face)) . 2395)) nil (25139 17572 396245 927000) 0 nil])
([nil nil ((#("    main_menu = new Menu(\"Menu...\", nullptr);
" 0 1 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete) 1 4 (fontified t c-is-sws t c-in-sws t) 4 5 (fontified t c-is-sws t) 5 16 (fontified t) 16 19 (fontified t face font-lock-keyword-face) 19 20 (fontified t) 20 24 (fontified t face font-lock-type-face) 24 25 (fontified t) 25 34 (fontified t face font-lock-string-face) 34 36 (fontified t) 36 43 (fontified t face font-lock-constant-face) 43 46 (fontified t)) . 2395)) nil (25139 17572 396229 827000) 0 nil])
([nil nil ((#("    auto coil_menu = new Menu(\"Coil...\", nullptr);
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 8 9 (fontified t) 9 18 (fontified t face font-lock-variable-name-face) 18 21 (fontified t) 21 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 39 (fontified t face font-lock-string-face) 39 41 (fontified t) 41 48 (fontified t face font-lock-constant-face) 48 51 (fontified t)) . 2395)) nil (25139 17572 396216 927000) 0 nil])
([nil nil ((#("    main_menu->Add(coil_menu);
" 0 1 (fontified t ws-butler-chg delete) 1 30 (fontified t) 30 31 (fontified t)) . 2395)) nil (25139 17572 396204 227000) 0 nil])
([nil nil ((#("    coil_menu->Add(main_menu);
" 0 1 (fontified t ws-butler-chg delete) 1 30 (fontified t) 30 31 (fontified t)) . 2395)) nil (25139 17572 396191 527000) 0 nil])
([nil nil ((#("    coil_menu->Add(new IntItem(\"Turns\", &turns, 0,10000,1));
" 0 1 (fontified t ws-butler-chg delete) 1 19 (fontified t) 19 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t) 23 29 (fontified t face font-lock-type-face) 29 30 (fontified t face font-lock-type-face) 30 31 (fontified t) 31 38 (fontified t face font-lock-string-face) 38 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t)) . 2395)) nil (25139 17572 396178 827000) 0 nil])
([nil nil ((#("    coil_menu->Add(new IntItem(\"Layers\", &layers, 0,10000,1));
" 0 1 (fontified t ws-butler-chg delete) 1 19 (fontified t) 19 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t) 23 30 (fontified t face font-lock-type-face) 30 31 (fontified t) 31 39 (fontified t face font-lock-string-face) 39 62 (fontified t) 62 63 (fontified t)) . 2395)) nil (25139 17572 396166 227000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395)) nil (25139 17572 396153 227000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395)) nil (25139 17572 396140 327000) 0 nil])
([nil nil ((#("    auto motor_speed_menu = new Menu(\"Speed...\", nullptr);
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 8 9 (fontified t) 9 25 (fontified t face font-lock-variable-name-face) 25 28 (fontified t) 28 31 (fontified t face font-lock-keyword-face) 31 32 (fontified t) 32 36 (fontified t face font-lock-type-face) 36 37 (fontified t) 37 47 (fontified t face font-lock-string-face) 47 49 (fontified t) 49 56 (fontified t face font-lock-constant-face) 56 59 (fontified t)) . 2395)) nil (25139 17572 396127 727000) 0 nil])
([nil nil ((#("    main_menu->Add(motor_speed_menu);
" 0 1 (fontified t ws-butler-chg delete) 1 37 (fontified t) 37 38 (fontified t)) . 2395)) nil (25139 17572 396115 127000) 0 nil])
([nil nil ((#("    motor_speed_menu->Add(main_menu);
" 0 1 (fontified t ws-butler-chg delete) 1 37 (fontified t) 37 38 (fontified t)) . 2395)) nil (25139 17572 396102 427000) 0 nil])
([nil nil ((#("    motor_speed_menu->Add(new FloatItem(\"Speed\", &g_speed, 0, 1, 0.01));
" 0 1 (fontified t ws-butler-chg delete) 1 26 (fontified t) 26 29 (fontified t face font-lock-keyword-face) 29 30 (fontified t) 30 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 47 (fontified t face font-lock-string-face) 47 72 (fontified t) 72 73 (fontified t)) . 2395)) nil (25139 17572 396089 727000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395)) nil (25139 17572 396076 927000) 0 nil])
([nil nil ((#("    render_screen();
" 0 1 (fontified t ws-butler-chg delete) 1 21 (fontified t)) . 2395)) nil (25139 17572 396063 727000) 0 nil])
([nil nil ((#("    display_update();
" 0 1 (fontified t ws-butler-chg delete) 1 22 (fontified t)) . 2395)) nil (25139 17572 396051 127000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395)) nil (25139 17572 396038 127000) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 2395) (undo-tree-id73 . -1)) nil (25139 17572 396024 627000) 0 nil])
([nil nil ((535 . 536)) nil (25139 17572 396000 227000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2266 . 2267) (nil fontified nil 2266 . 2267) (nil fontified nil 2265 . 2266) (nil fontified nil 2264 . 2265) (nil fontified nil 2243 . 2264) (nil fontified nil 2242 . 2243) (nil fontified nil 2222 . 2242) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2194 . 2219) (nil fontified nil 2187 . 2194) (nil fontified nil 2186 . 2187) (nil fontified nil 2177 . 2186) (nil fontified nil 2176 . 2177) (nil fontified nil 2173 . 2176) (nil fontified nil 2148 . 2173) (nil fontified nil 2147 . 2148) (nil fontified nil 2146 . 2147) (nil fontified nil 2110 . 2146) (nil fontified nil 2109 . 2110) (nil fontified nil 2108 . 2109) (nil fontified nil 2072 . 2108) (nil fontified nil 2071 . 2072) (nil fontified nil 2068 . 2071) (nil fontified nil 2061 . 2068) (nil fontified nil 2059 . 2061) (nil fontified nil 2049 . 2059) (nil fontified nil 2048 . 2049) (nil fontified nil 2044 . 2048) (nil fontified nil 2043 . 2044) (nil fontified nil 2040 . 2043) (nil fontified nil 2037 . 2040) (nil fontified nil 2021 . 2037) (nil fontified nil 2020 . 2021) (nil fontified nil 2019 . 2020) (nil fontified nil 2016 . 2019) (nil fontified nil 2013 . 2016) (nil fontified nil 2012 . 2013) (nil fontified nil 2011 . 2012) (nil fontified nil 2010 . 2011) (nil fontified nil 2009 . 2010) (nil fontified nil 1986 . 2009) (nil fontified nil 1978 . 1986) (nil fontified nil 1977 . 1978) (nil fontified nil 1970 . 1977) (nil fontified nil 1969 . 1970) (nil fontified nil 1966 . 1969) (nil fontified nil 1948 . 1966) (nil fontified nil 1947 . 1948) (nil fontified nil 1946 . 1947) (nil fontified nil 1945 . 1946) (nil fontified nil 1924 . 1945) (nil fontified nil 1917 . 1924) (nil fontified nil 1916 . 1917) (nil fontified nil 1915 . 1916) (nil fontified nil 1909 . 1915) (nil fontified nil 1908 . 1909) (nil fontified nil 1905 . 1908) (nil fontified nil 1887 . 1905) (nil fontified nil 1886 . 1887) (nil fontified nil 1885 . 1886) (nil fontified nil 1856 . 1885) (nil fontified nil 1855 . 1856) (nil fontified nil 1854 . 1855) (nil fontified nil 1825 . 1854) (nil fontified nil 1824 . 1825) (nil fontified nil 1821 . 1824) (nil fontified nil 1814 . 1821) (nil fontified nil 1812 . 1814) (nil fontified nil 1803 . 1812) (nil fontified nil 1802 . 1803) (nil fontified nil 1798 . 1802) (nil fontified nil 1797 . 1798) (nil fontified nil 1794 . 1797) (nil fontified nil 1791 . 1794) (nil fontified nil 1782 . 1791) (nil fontified nil 1781 . 1782) (nil fontified nil 1780 . 1781) (nil fontified nil 1777 . 1780) (nil fontified nil 1774 . 1777) (nil fontified nil 1773 . 1774) (nil fontified nil 1770 . 1773) (nil fontified nil 1763 . 1770) (nil fontified nil 1761 . 1763) (nil fontified nil 1752 . 1761) (nil fontified nil 1751 . 1752) (nil fontified nil 1747 . 1751) (nil fontified nil 1746 . 1747) (nil fontified nil 1743 . 1746) (nil fontified nil 1732 . 1743) (nil fontified nil 1731 . 1732) (nil fontified nil 1728 . 1731) (nil fontified nil 1727 . 1728) (nil fontified nil 1711 . 1727) (nil fontified nil 1709 . 1711) (nil fontified nil 1708 . 1709) (nil fontified nil 1705 . 1708) (nil fontified nil 1704 . 1705) (nil fontified nil 1703 . 1704) (nil fontified nil 1655 . 1703) (nil fontified nil 1654 . 1655) (nil fontified nil 1606 . 1654) (nil fontified nil 1605 . 1606) (nil fontified nil 1559 . 1605) (nil fontified nil 1558 . 1559) (nil fontified nil 1555 . 1558) (nil fontified nil 1554 . 1555) (nil fontified nil 1539 . 1554) (nil fontified nil 1537 . 1539) (nil fontified nil 1536 . 1537) (nil fontified nil 1533 . 1536) (nil fontified nil 1532 . 1533) (nil fontified nil 1531 . 1532) (nil fontified nil 1465 . 1531) (nil fontified nil 1464 . 1465) (nil fontified nil 1420 . 1464) (nil fontified nil 1419 . 1420) (nil fontified nil 1416 . 1419) (nil fontified nil 1415 . 1416) (nil fontified nil 1414 . 1415) (nil fontified nil 1383 . 1414) (nil fontified nil 1340 . 1383) (nil fontified nil 1338 . 1340) (nil fontified nil 1337 . 1338) (nil fontified nil 1334 . 1337) (nil fontified nil 1333 . 1334) (nil fontified nil 1275 . 1333) (nil fontified nil 1273 . 1275) (nil fontified nil 1272 . 1273) (nil fontified nil 1269 . 1272) (nil fontified nil 1268 . 1269) (nil fontified nil 1267 . 1268) (nil fontified nil 1266 . 1267) (nil fontified nil 1261 . 1266) (nil fontified nil 1260 . 1261) (nil fontified nil 1206 . 1260) (nil fontified nil 1205 . 1206) (nil fontified nil 1202 . 1205) (nil fontified nil 1201 . 1202) (nil fontified nil 1200 . 1201) (nil fontified nil 1185 . 1200) (nil fontified nil 1180 . 1185) (nil fontified nil 1179 . 1180) (nil fontified nil 1095 . 1179) (nil fontified nil 1094 . 1095) (nil fontified nil 1018 . 1094) (nil fontified nil 1017 . 1018) (nil fontified nil 1014 . 1017) (nil fontified nil 1013 . 1014) (nil fontified nil 941 . 1013) (nil fontified nil 939 . 941) (nil fontified nil 938 . 939) (nil fontified nil 935 . 938) (nil fontified nil 934 . 935) (nil fontified nil 933 . 934) (nil fontified nil 888 . 933) (nil fontified nil 887 . 888) (nil fontified nil 884 . 887) (nil fontified nil 883 . 884) (nil fontified nil 882 . 883) (nil fontified nil 827 . 882) (nil fontified nil 773 . 827) (nil fontified nil 771 . 773) (nil fontified nil 770 . 771) (nil fontified nil 767 . 770) (nil fontified nil 766 . 767) (nil fontified nil 765 . 766) (nil fontified nil 764 . 765) (nil fontified nil 761 . 764) (nil fontified nil 752 . 761) (nil fontified nil 751 . 752) (nil fontified nil 750 . 751) (nil fontified nil 748 . 750) (nil fontified nil 747 . 748) (nil fontified nil 746 . 747) (nil fontified nil 744 . 746) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 720 . 742) (nil fontified nil 719 . 720) (nil fontified nil 718 . 719) (nil fontified nil 716 . 718) (nil fontified nil 715 . 716) (nil fontified nil 636 . 715) (nil fontified nil 634 . 636) (nil fontified nil 633 . 634) (nil fontified nil 621 . 633) (nil fontified nil 619 . 621) (nil fontified nil 618 . 619) (nil fontified nil 539 . 618) (nil fontified nil 537 . 539) (nil fontified nil 536 . 537) (536 . 2267)) nil (25139 17572 395974 527000) 0 nil])
([nil nil ((#("/**
" 0 1 (ws-butler-chg chg fontified t face font-lock-doc-face c-is-sws t c-in-sws t) 1 3 (c-in-sws t ws-butler-chg chg fontified t face font-lock-doc-face) 3 4 (c-in-sws t ws-butler-chg chg fontified t face font-lock-doc-face)) . 715) (undo-tree-id80 . -4) (t 25139 17572 403027 768000)) nil (25139 17583 528885 311000) 0 nil])
([nil nil ((#(" * Menu Initialization
" 0 1 (ws-butler-chg delete fontified t c-is-sws t c-in-sws t) 1 2 (ws-butler-chg chg fontified t c-is-sws t) 2 23 (ws-butler-chg chg fontified t)) . 715) (undo-tree-id79 . -23)) nil (25139 17583 528869 11000) 0 nil])
([nil nil ((#(" **/
" 0 1 (ws-butler-chg delete fontified t c-is-sws t c-in-sws t) 1 2 (ws-butler-chg chg fontified t c-is-sws t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t c-in-sws t)) . 715) (undo-tree-id77 . -5) (undo-tree-id78 . -5)) nil (25139 17583 528852 11000) 0 nil])
([nil nil ((715 . 716)) nil (25139 17583 528824 811000) 0 nil])
([nil nil (("event_queue" . -5304) (5315 . 5328) (#("event_queue" 0 11 (ws-butler-chg chg fontified t)) . -1489) (1500 . 1513) (nil ws-butler-chg chg 1392 . 1393) (nil c-is-sws t 1392 . 1393) (nil fontified t 1392 . 1393) (#("event_queue" 0 1 (ws-butler-chg chg c-is-sws t fontified t) 1 11 (ws-butler-chg chg fontified t)) . -1390) (1401 . 1414) (nil fontified t 489 . 500) (t 25139 17583 536360 676000) (nil face font-lock-variable-name-face 489 . 500) (t 25139 17583 536360 676000) (#("event_queue" 0 11 (fontified t face font-lock-variable-name-face)) . -487) (t 25139 17583 536360 676000) (498 . 511) 445 (t 25139 17583 536360 676000)) nil (25139 17621 240984 222000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -3366) (3370 . 3382) (#("info" 0 4 (fontified t)) . -3008) (3012 . 3024) (#("info" 0 4 (ws-butler-chg chg fontified t)) . -1531) (1535 . 1547) (#("info" 0 4 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . -1413) (1417 . 1429) (#("info" 0 4 (ws-butler-chg chg fontified t)) . -1255) (1259 . 1271) (#("info" 0 4 (ws-butler-chg chg fontified t)) . -1143) (1147 . 1159) (#("info" 0 4 (ws-butler-chg chg fontified t)) . -1041) (1045 . 1057) (nil fontified nil 547 . 551) (nil face font-lock-variable-name-face 547 . 551) (#("info" 0 4 (fontified nil face font-lock-variable-name-face)) . -539) (543 . 555) (#("info" 0 4 (fontified t face font-lock-type-face)) . -524) (t 25139 17621 246359 237000) (528 . 540) 466 (t 25139 17621 246359 237000)) nil (25139 17637 809196 35000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 524) (#("r" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 524) (#("e" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 524) (#("d" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 524) (#("o" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 524) (#("c" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 524) (#("n" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 524) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . 524) (t 25139 17637 813025 275000)) nil (25139 17644 300807 221000) 0 nil])
([nil nil ((1581 . 1585) (t 25139 17644 306358 364000)) nil (25139 17677 755814 989000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg delete fontified t)) . 1590) (#("u" 0 1 (ws-butler-chg delete fontified t)) . 1590) (#("t" 0 1 (ws-butler-chg delete fontified t)) . 1590) (#("e" 0 1 (ws-butler-chg delete fontified t)) . 1590) (#("s" 0 1 (ws-butler-chg chg fontified t)) . 1590)) nil (25139 17677 755800 489000) 0 nil])
([nil nil ((1590 . 1594)) nil (25139 17677 755786 89000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t)) . -1644) (undo-tree-id102 . -1) 1645) nil (25139 17677 755772 789000) 0 nil])
([nil nil ((#("g" 0 1 (ws-butler-chg chg fontified t)) . -1635) (undo-tree-id93 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t)) . -1636) (undo-tree-id94 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -1637) (undo-tree-id95 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -1638) (undo-tree-id96 . -1) (#("_" 0 1 (ws-butler-chg chg fontified t)) . -1639) (undo-tree-id97 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -1640) (undo-tree-id98 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -1641) (undo-tree-id99 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -1642) (undo-tree-id100 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -1643) (undo-tree-id101 . -1) 1644) nil (25139 17677 755754 189000) 0 nil])
([nil nil ((1635 . 1644)) nil (25139 17677 755728 689000) 0 nil])
([nil nil ((1644 . 1645)) nil (25139 17677 755715 889000) 0 nil])
([nil nil ((1645 . 1646)) nil (25139 17677 755702 989000) 0 nil])
([nil nil ((#("," 0 1 (ws-butler-chg chg fontified t)) . -1644) (undo-tree-id91 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -1645) (undo-tree-id92 . -1) 1646) nil (25139 17677 755689 189000) 0 nil])
([nil nil ((1644 . 1648)) nil (25139 17677 755672 89000) 0 nil])
([nil nil ((#("g" 0 1 (ws-butler-chg chg fontified t)) . -1687) (undo-tree-id81 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t)) . -1688) (undo-tree-id82 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -1689) (undo-tree-id83 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -1690) (undo-tree-id84 . -1) (#("_" 0 1 (ws-butler-chg chg fontified t)) . -1691) (undo-tree-id85 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -1692) (undo-tree-id86 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -1693) (undo-tree-id87 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -1694) (undo-tree-id88 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -1695) (undo-tree-id89 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t)) . -1696) (undo-tree-id90 . -1) 1697) nil (25139 17677 755656 89000) 0 nil])
([nil nil ((1687 . 1688)) nil (25139 17677 755620 989000) 0 nil])
([nil nil ((1688 . 1700)) nil (25139 17677 755604 589000) 0 nil])
([nil nil ((1784 . 1785) (t 25139 17677 763023 756000)) nil (25139 17706 889002 301000) 0 nil])
([nil nil ((1785 . 1791)) nil (25139 17706 888989 101000) 0 nil])
([nil nil ((1791 . 1792)) nil (25139 17706 888976 301000) 0 nil])
([nil nil ((1792 . 1793)) nil (25139 17706 888963 401000) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg delete fontified t face font-lock-string-face)) . 1798) (#("." 0 1 (ws-butler-chg delete fontified t face font-lock-string-face)) . 1798) (#("." 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 1798)) nil (25139 17706 888949 601000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg delete fontified t)) . 1799) (#("t" 0 1 (ws-butler-chg delete fontified t)) . 1799) (#("p" 0 1 (ws-butler-chg delete fontified t)) . 1799) (#("l" 0 1 (ws-butler-chg delete fontified t)) . 1799) (#("l" 0 1 (ws-butler-chg delete fontified t)) . 1799) (#("u" 0 1 (ws-butler-chg delete fontified t)) . 1799) (#("n" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 1799) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 1799) (#("," 0 1 (ws-butler-chg chg fontified t)) . 1799)) nil (25139 17706 888932 801000) 0 nil])
([nil nil ((1832 . 1833)) nil (25139 17706 888917 501000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t)) . -1832) (undo-tree-id103 . -1) 1833) nil (25139 17706 888903 901000) 0 nil])
([nil nil ((1802 . 1803)) nil (25139 17706 888879 801000) 0 nil])
([nil nil ((1802 . 1803)) nil (25139 17706 888866 801000) 0 nil])
([nil nil ((1802 . 1806) (1803 . 1804)) nil (25139 17706 888850 101000) 0 nil])
([nil nil ((2046 . 2050) (2046 . 2047) (t 25139 17706 896355 978000)) nil (25139 17715 49085 340000) 0 nil])
([nil nil ((2051 . 2052)) nil (25139 17715 49071 740000) 0 nil])
([nil nil ((#("    /*
" 0 4 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t) 4 5 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-delimiter-face) 6 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . 1802) (undo-tree-id110 . -7)) nil (25139 17715 49058 240000) 0 nil])
([nil nil ((#("    auto coil_menu = new Menu(\"Coil...\", nullptr);
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 7 (ws-butler-chg chg fontified t face font-lock-keyword-face) 7 8 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 8 9 (ws-butler-chg chg fontified t) 9 18 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 18 21 (ws-butler-chg chg fontified t) 21 24 (ws-butler-chg chg fontified t face font-lock-keyword-face) 24 25 (ws-butler-chg chg fontified t) 25 29 (ws-butler-chg chg fontified t face font-lock-type-face) 29 30 (ws-butler-chg chg fontified t) 30 31 (ws-butler-chg delete fontified t face font-lock-string-face) 31 39 (ws-butler-chg chg fontified t face font-lock-string-face) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 48 (ws-butler-chg chg fontified t face font-lock-constant-face) 48 51 (ws-butler-chg chg fontified t)) . 1802) (undo-tree-id109 . -51)) nil (25139 17715 49042 340000) 0 nil])
([nil nil ((#("    main_menu->Add(coil_menu);
" 0 1 (ws-butler-chg delete fontified t) 1 9 (ws-butler-chg chg fontified t) 9 30 (ws-butler-chg chg fontified t) 30 31 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1802) (undo-tree-id108 . -31)) nil (25139 17715 49026 240000) 0 nil])
([nil nil ((#("    coil_menu->Add(main_menu);
" 0 1 (ws-butler-chg delete fontified t) 1 30 (ws-butler-chg chg fontified t) 30 31 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1802) (undo-tree-id107 . -31)) nil (25139 17715 49010 140000) 0 nil])
([nil nil ((#("    coil_menu->Add(new IntItem(\"Turns\", &turns, 0,10000,1));
" 0 1 (ws-butler-chg delete fontified t) 1 19 (ws-butler-chg chg fontified t) 19 22 (ws-butler-chg chg fontified t face font-lock-keyword-face) 22 23 (ws-butler-chg chg fontified t) 23 25 (ws-butler-chg chg fontified t face font-lock-type-face) 25 29 (ws-butler-chg chg fontified t face font-lock-type-face) 29 30 (ws-butler-chg chg fontified t face font-lock-type-face) 30 31 (ws-butler-chg chg fontified t) 31 38 (ws-butler-chg chg fontified t face font-lock-string-face) 38 59 (ws-butler-chg chg fontified t) 59 60 (ws-butler-chg chg fontified t) 60 61 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1802) (undo-tree-id106 . -61)) nil (25139 17715 48993 740000) 0 nil])
([nil nil ((#("    coil_menu->Add(new IntItem(\"Layers\", &layers, 0,10000,1));
" 0 1 (ws-butler-chg delete fontified t) 1 19 (ws-butler-chg chg fontified t) 19 22 (ws-butler-chg chg fontified t face font-lock-keyword-face) 22 23 (ws-butler-chg chg fontified t) 23 30 (ws-butler-chg chg fontified t face font-lock-type-face) 30 31 (ws-butler-chg chg fontified t) 31 39 (ws-butler-chg chg fontified t face font-lock-string-face) 39 62 (ws-butler-chg chg fontified t) 62 63 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1802) (undo-tree-id105 . -63)) nil (25139 17715 48977 340000) 0 nil])
([nil nil ((#("    */
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t)) . 1802) (undo-tree-id104 . -7)) nil (25139 17715 48958 440000) 0 nil])
([nil nil ((#("// The top level menu
" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 3 21 (fontified t face font-lock-comment-face c-in-sws t) 21 22 (fontified t face font-lock-comment-face c-in-sws t)) . 3181) (undo-tree-id124 . -22) (undo-tree-id125 . -22) (t 25139 17715 56355 670000)) nil (25139 17759 967853 143000) 0 nil])
([nil nil ((#("Menu* main_menu = nullptr;
" 0 1 (fontified t c-is-sws t ws-butler-chg delete face font-lock-type-face) 1 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 6 (fontified t) 6 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 25 (fontified t face font-lock-constant-face) 25 27 (fontified t)) . 3181) (undo-tree-id122 . -26) (undo-tree-id123 . -27)) nil (25139 17759 967836 244000) 0 nil])
([nil nil ((#("// The current menu
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 20 (fontified t c-in-sws t face font-lock-comment-face)) . 3181) (undo-tree-id120 . -20) (undo-tree-id121 . -20)) nil (25139 17759 967819 743000) 0 nil])
([nil nil ((#("Menu* current_menu = nullptr;
" 0 1 (fontified t c-is-sws t ws-butler-chg delete face font-lock-type-face) 1 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 6 (fontified t) 6 18 (fontified t face font-lock-variable-name-face) 18 21 (fontified t) 21 28 (fontified t face font-lock-constant-face) 28 30 (fontified t)) . 3181) (undo-tree-id118 . -29) (undo-tree-id119 . -30)) nil (25139 17759 967803 144000) 0 nil])
([nil nil ((#("// The true value when editing value mode
" 0 1 (fontified t c-in-sws t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 42 (fontified t c-in-sws t face font-lock-comment-face)) . 3181) (undo-tree-id116 . -42) (undo-tree-id117 . -42)) nil (25139 17759 967786 443000) 0 nil])
([nil nil ((#("bool menu_edit_mode = false;
" 0 1 (fontified t c-is-sws t ws-butler-chg delete face font-lock-type-face) 1 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 19 (fontified t face font-lock-variable-name-face) 19 22 (fontified t) 22 27 (fontified t face font-lock-constant-face) 27 29 (fontified t)) . 3181) (undo-tree-id114 . -28) (undo-tree-id115 . -29)) nil (25139 17759 967769 744000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3181) (undo-tree-id112 . -1) (undo-tree-id113 . -1)) nil (25139 17759 967752 244000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3179) (undo-tree-id111 . -1)) nil (25139 17759 967732 644000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3179) (undo-tree-id133 . -1) (t 25139 17759 973020 626000)) nil (25139 17771 299149 365000) 0 nil])
([nil nil ((#("void open_menu(Menu* menu, int line_num) {
" 0 1 (ws-butler-chg delete fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 19 (fontified t face font-lock-type-face) 19 21 (fontified t) 21 25 (fontified t face font-lock-variable-name-face) 25 26 (fontified t c-type c-decl-arg-start) 26 27 (fontified t) 27 30 (fontified t face font-lock-type-face) 30 31 (fontified t) 31 39 (fontified t face font-lock-variable-name-face) 39 43 (fontified t)) . 3179) (undo-tree-id129 . -15) (undo-tree-id130 . -26) (undo-tree-id131 . -27) (undo-tree-id132 . -40)) nil (25139 17771 299133 264000) 0 nil])
([nil nil ((#("    MenuSystem::instance.OpenMenu(menu, line_num);
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 14 (fontified t face font-lock-constant-face) 14 51 (fontified t)) . 3179)) nil (25139 17771 299114 365000) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 3179) (undo-tree-id128 . -1)) nil (25139 17771 299101 464000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3179)) nil (25139 17771 299086 65000) 0 nil])
([nil nil ((#("/** Rendering the screen content */
" 0 1 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete face font-lock-doc-face) 1 4 (fontified t c-in-sws t face font-lock-doc-face) 4 32 (fontified t c-in-sws t face font-lock-doc-face) 32 34 (fontified t c-in-sws t face font-lock-doc-face) 34 35 (fontified t face font-lock-doc-face c-in-sws t) 35 36 (fontified t c-is-sws t c-in-sws t)) . 3179) (undo-tree-id127 . -36)) nil (25139 17771 299073 164000) 0 nil])
([nil nil ((#("void render_screen()
" 0 1 (c-is-sws t fontified t ws-butler-chg delete face font-lock-type-face) 1 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 16 (fontified t face font-lock-function-name-face) 16 18 (fontified t face font-lock-function-name-face) 18 20 (fontified t) 20 21 (fontified t)) . 3179)) nil (25139 17771 299057 264000) 0 nil])
([nil nil ((#("{
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 3179)) nil (25139 17771 299029 464000) 0 nil])
([nil nil ((#("    display_clear();
" 0 1 (fontified t ws-butler-chg delete) 1 21 (fontified t)) . 3179)) nil (25139 17771 299016 265000) 0 nil])
([nil nil ((#("    if (current_menu == nullptr)
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 17 (fontified t) 17 23 (fontified t) 23 24 (fontified t) 24 31 (fontified t face font-lock-constant-face) 31 33 (fontified t)) . 3179)) nil (25139 17771 299003 864000) 0 nil])
([nil nil ((#("        open_menu(main_menu);
" 0 1 (fontified t ws-butler-chg delete) 1 30 (fontified t)) . 3179)) nil (25139 17771 298991 464000) 0 nil])
([nil nil ((#("    current_menu->display_menu(menu_edit_mode);
" 0 1 (fontified t ws-butler-chg delete) 1 47 (fontified t) 47 48 (fontified t)) . 3179)) nil (25139 17771 298978 564000) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 3179) (undo-tree-id126 . -1)) nil (25139 17771 298965 865000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3179)) nil (25139 17771 298942 664000) 0 nil])
([nil nil ((3179 . 3180)) nil (25139 17771 298926 664000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -2054) (undo-tree-id156 . -1) 2055 (t 25139 17771 303020 198000)) nil (25139 17828 379772 308000) 0 nil])
([nil nil ((2011 . 2016)) nil (25139 17828 379755 608000) 0 nil])
([nil nil ((2016 . 2017)) nil (25139 17828 379742 608000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2016) (undo-tree-id155 . -1) 2017) nil (25139 17828 379718 608000) 0 nil])
([nil nil ((2016 . 2024)) nil (25139 17828 379702 908000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2021) (undo-tree-id152 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2022) (undo-tree-id153 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2023) (undo-tree-id154 . -1) 2024) nil (25139 17828 379689 308000) 0 nil])
([nil nil ((2021 . 2022)) nil (25139 17828 379671 8000) 0 nil])
([nil nil ((#("S" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2021) (undo-tree-id151 . -1) 2022) nil (25139 17828 379657 607000) 0 nil])
([nil nil ((2021 . 2027)) nil (25139 17828 379641 708000) 0 nil])
([nil nil ((2027 . 2028)) nil (25139 17828 379628 308000) 0 nil])
([nil nil ((#("-" 0 1 (ws-butler-chg chg fontified t)) . -2026) (undo-tree-id149 . -1) (#(">" 0 1 (ws-butler-chg chg fontified t)) . -2027) (undo-tree-id150 . -1) 2028) nil (25139 17828 379614 608000) 0 nil])
([nil nil ((2026 . 2041)) nil (25139 17828 379597 308000) 0 nil])
([nil nil ((2041 . 2045)) nil (25139 17828 379584 408000) 0 nil])
([nil nil ((2045 . 2046)) nil (25139 17828 379571 708000) 0 nil])
([nil nil ((2046 . 2050)) nil (25139 17828 379558 808000) 0 nil])
([nil nil ((#("*" 0 1 (ws-butler-chg chg fontified t)) . -2045) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t)) . -2046) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -2047) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -2048) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -2049) (undo-tree-id148 . -1) 2050) nil (25139 17828 379544 208000) 0 nil])
([nil nil ((2045 . 2046)) nil (25139 17828 379515 308000) 0 nil])
([nil nil ((2046 . 2055)) nil (25139 17828 379502 608000) 0 nil])
([nil nil ((2055 . 2056)) nil (25139 17828 379489 708000) 0 nil])
([nil nil ((2056 . 2057)) nil (25139 17828 379476 408000) 0 nil])
([nil nil ((#("    render_screen();
" 0 1 (ws-butler-chg chg fontified t) 1 4 (ws-butler-chg chg fontified t) 4 17 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 17 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t)) . 2058) (undo-tree-id135 . -21)) nil (25139 17828 379462 807000) 0 nil])
([nil nil ((#("    display_update();
" 0 1 (ws-butler-chg delete fontified t) 1 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg delete fontified t)) . 2058) (undo-tree-id134 . -22)) nil (25139 17828 379443 708000) 0 nil])
([nil nil ((2240 . 2241) (t 25139 17828 386351 353000)) nil (25139 17919 695736 360000) 0 nil])
([nil nil ((#("rotary_encoder_state_t& state) {" 0 22 (fontified t face font-lock-type-face) 22 24 (fontified t) 24 29 (fontified t face font-lock-variable-name-face) 29 30 (fontified t) 30 32 (fontified t)) . 2403)) nil (25139 17919 695723 60000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2434 . 2435) (nil fontified nil 2433 . 2435) (nil fontified nil 2432 . 2433) (nil fontified nil 2427 . 2432) (nil fontified nil 2425 . 2427) (nil fontified nil 2403 . 2425) (2403 . 2435)) nil (25139 17919 695710 60000) 0 nil])
([nil nil ((2241 . 2242)) nil (25139 17919 695695 860000) 0 nil])
([nil nil ((2242 . 2243)) nil (25139 17919 695682 960000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2242) (undo-tree-id165 . -1) 2243) nil (25139 17919 695669 460000) 0 nil])
([nil nil ((2242 . 2243)) nil (25139 17919 695653 360000) 0 nil])
([nil nil ((2243 . 2248)) nil (25139 17919 695639 960000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2279 . 2280) (nil fontified nil 2278 . 2280) (nil fontified nil 2277 . 2278) (nil fontified nil 2272 . 2277) (nil fontified nil 2270 . 2272) (nil fontified nil 2248 . 2270) (2248 . 2280)) nil (25139 17919 695624 160000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -2277) (undo-tree-id162 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -2278) (undo-tree-id163 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t c-in-sws t face font-lock-comment-face)) . -2279) (undo-tree-id164 . -1) 2280) nil (25139 17919 695604 360000) 0 nil])
([nil nil ((2277 . 2279)) nil (25139 17919 695580 460000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -2278) (undo-tree-id161 . -1) 2279) nil (25139 17919 695562 160000) 0 nil])
([nil nil ((2278 . 2283)) nil (25139 17919 695546 460000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -2282) (undo-tree-id160 . -1) 2283) nil (25139 17919 695533 260000) 0 nil])
([nil nil ((2282 . 2285)) nil (25139 17919 695517 460000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -2282) (undo-tree-id157 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -2283) (undo-tree-id158 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -2284) (undo-tree-id159 . -1) 2285) nil (25139 17919 695502 960000) 0 nil])
([nil nil ((2282 . 2303)) nil (25139 17919 695474 260000) 0 nil])
([nil nil ((2303 . 2307)) nil (25139 17919 695457 760000) 0 nil])
([nil nil ((2443 . 2444) (t 25139 17919 703014 560000)) nil (25139 17922 880153 741000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . 2240) (t 25139 17922 886347 771000)) nil (25139 17999 124169 390000) 0 nil])
([nil nil ((#("// ==============================================================================
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 81 (c-in-sws t fontified t face font-lock-comment-face) 81 82 (fontified t face font-lock-comment-face c-in-sws t)) . 2158)) nil (25139 17999 124156 490000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2239 . 2240) (nil fontified nil 2239 . 2240) (nil fontified nil 2161 . 2239) (nil fontified nil 2159 . 2161) (nil fontified nil 2158 . 2159) (2158 . 2240)) nil (25139 17999 124143 790000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2524 . 2525) (nil fontified nil 2524 . 2525) (nil fontified nil 2446 . 2524) (nil fontified nil 2444 . 2446) (nil fontified nil 2443 . 2444) (2443 . 2525)) nil (25139 17999 124129 590000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3620) (#("
" 0 1 (fontified t)) . 3620)) nil (25139 17999 124111 390000) 0 nil])
([nil nil ((#("// Переменные изменяемые на экране
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 25 (c-in-sws t fontified t face font-lock-comment-face) 25 35 (c-in-sws t fontified t face font-lock-comment-face)) . 3515) (undo-tree-id181 . -35) (undo-tree-id182 . -35) (undo-tree-id183 . -35) (t 25139 17999 129678 198000)) nil (25139 18005 538057 561000) 0 nil])
([nil nil ((#("int shaft_pos, layer_pos;
" 0 1 (c-is-sws t fontified t ws-butler-chg delete face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face) 3 4 (fontified t) 4 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t c-type c-decl-id-start) 14 15 (fontified t) 15 24 (fontified t face font-lock-variable-name-face) 24 26 (fontified t)) . 3515) (undo-tree-id173 . -25) (undo-tree-id174 . -25) (undo-tree-id175 . -26) (undo-tree-id176 . -26) (undo-tree-id177 . -26) (undo-tree-id178 . -26) (undo-tree-id179 . -26) (undo-tree-id180 . -26)) nil (25139 18005 538039 861000) 0 nil])
([nil nil ((#("int turns = 1, step = 1, speed=1, layers=1;
" 0 1 (fontified t c-is-sws t ws-butler-chg delete face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-variable-name-face) 7 9 (fontified t face font-lock-variable-name-face) 9 11 (fontified t) 11 13 (fontified t) 13 14 (fontified t c-type c-decl-id-start) 14 15 (fontified t) 15 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t face font-lock-variable-name-face) 19 21 (fontified t) 21 23 (fontified t) 23 24 (fontified t c-type c-decl-id-start) 24 25 (fontified t) 25 30 (fontified t face font-lock-variable-name-face) 30 32 (fontified t) 32 33 (fontified t c-type c-decl-id-start) 33 34 (fontified t) 34 40 (fontified t face font-lock-variable-name-face) 40 44 (fontified t)) . 3515) (undo-tree-id167 . -43) (undo-tree-id168 . -43) (undo-tree-id169 . -43) (undo-tree-id170 . -43) (undo-tree-id171 . -44) (undo-tree-id172 . -44)) nil (25139 18005 538015 61000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t c-is-sws t c-in-sws t)) . 3515) (undo-tree-id166 . -1)) nil (25139 18005 537992 561000) 0 nil])
([nil nil ((#("get_press(GP_BUTTON_ROT, button_rot))" 0 37 (fontified t)) . 3884) (t 25139 18005 543011 287000)) nil (25139 18110 208953 932000) 0 nil])
([nil nil ((3876 . 3878) (#("    " 0 4 (fontified nil)) . 3876) (nil rear-nonsticky nil 3920 . 3921) (nil fontified nil 3884 . 3921) (3884 . 3921)) nil (25139 18110 208940 532000) 0 nil])
([nil nil ((3875 . 3878)) nil (25139 18110 208926 932000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3914 . 3915) (nil fontified nil 3878 . 3915) (3878 . 3915)) nil (25139 18110 208914 332000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -3914) (undo-tree-id215 . -1) 3915) nil (25139 18110 208900 632000) 0 nil])
([nil nil ((3914 . 3915)) nil (25139 18110 208884 932000) 0 nil])
([nil nil ((3915 . 3918)) nil (25139 18110 208872 432000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t)) . 3916) (undo-tree-id214 . -2) 3918) nil (25139 18110 208859 232000) 0 nil])
([nil nil ((3878 . 3885)) nil (25139 18110 208843 732000) 0 nil])
([nil nil ((3885 . 3887)) nil (25139 18110 208831 132000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg)) . -3884) (undo-tree-id211 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3885) (undo-tree-id212 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -3886) (undo-tree-id213 . -1) 3887) nil (25139 18110 208817 832000) 0 nil])
([nil nil ((3884 . 3885)) nil (25139 18110 208799 832000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg)) . -3884) (undo-tree-id210 . -1) 3885) nil (25139 18110 208786 632000) 0 nil])
([nil nil ((3884 . 3891)) nil (25139 18110 208769 332000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -3881) (undo-tree-id200 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -3882) (undo-tree-id201 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -3883) (undo-tree-id202 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -3884) (undo-tree-id203 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -3885) (undo-tree-id204 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -3886) (undo-tree-id205 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3887) (undo-tree-id206 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3888) (undo-tree-id207 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -3889) (undo-tree-id208 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3890) (undo-tree-id209 . -1) 3891) nil (25139 18110 208741 132000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -3878) (undo-tree-id197 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -3879) (undo-tree-id198 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3880) (undo-tree-id199 . -1) 3881) nil (25139 18110 208713 932000) 0 nil])
([nil nil ((3878 . 3890)) nil (25139 18110 208695 732000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg)) . -3883) (undo-tree-id196 . -1) 3884) nil (25139 18110 208682 432000) 0 nil])
([nil nil ((3883 . 3884)) nil (25139 18110 208666 732000) 0 nil])
([nil nil ((3878 . 3883)) nil (25139 18110 208654 132000) 0 nil])
([nil nil ((#("  auto press_rot = get_press(GP_BUTTON_ROT, button_rot);
" 0 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified t ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified t ws-butler-chg chg face font-lock-keyword-face) 5 6 (fontified t ws-butler-chg chg face font-lock-keyword-face c-type c-decl-id-start) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 8 9 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 9 10 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 10 11 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 11 12 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 12 13 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 13 14 (fontified t ws-butler-chg delete face font-lock-variable-name-face) 14 15 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 15 16 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg delete fontified t) 20 28 (ws-butler-chg chg fontified t) 28 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 55 (ws-butler-chg chg fontified t) 55 56 (ws-butler-chg chg fontified t) 56 57 (ws-butler-chg chg fontified t)) . 3876) (undo-tree-id195 . -2)) nil (25139 18110 208641 332000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3932 . 3933) (nil fontified nil 3932 . 3933) (nil fontified nil 3931 . 3932) (nil fontified nil 3919 . 3931) (nil fontified nil 3918 . 3919) (nil fontified nil 3904 . 3918) (nil fontified nil 3896 . 3904) (nil fontified nil 3895 . 3896) (nil fontified nil 3894 . 3895) (nil fontified nil 3893 . 3894) (nil fontified nil 3892 . 3893) (nil fontified nil 3891 . 3892) (nil fontified nil 3890 . 3891) (nil fontified nil 3889 . 3890) (nil fontified nil 3888 . 3889) (nil fontified nil 3887 . 3888) (nil fontified nil 3886 . 3887) (nil fontified nil 3885 . 3886) (nil fontified nil 3884 . 3885) (nil fontified nil 3883 . 3884) (nil fontified nil 3882 . 3883) (nil fontified nil 3881 . 3882) (nil fontified nil 3880 . 3881) (nil fontified nil 3879 . 3880) (nil fontified nil 3878 . 3879) (nil fontified nil 3876 . 3878) (3876 . 3933)) nil (25139 18110 208622 432000) 0 nil])
([nil nil ((3933 . 3936)) nil (25139 18110 208603 232000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3934) (undo-tree-id194 . -2) 3936) nil (25139 18110 208590 32000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3989 . 3990) (nil fontified nil 3989 . 3990) (nil fontified nil 3988 . 3989) (nil fontified nil 3976 . 3988) (nil fontified nil 3975 . 3976) (nil fontified nil 3961 . 3975) (nil fontified nil 3953 . 3961) (nil fontified nil 3952 . 3953) (nil fontified nil 3951 . 3952) (nil fontified nil 3950 . 3951) (nil fontified nil 3949 . 3950) (nil fontified nil 3948 . 3949) (nil fontified nil 3947 . 3948) (nil fontified nil 3946 . 3947) (nil fontified nil 3945 . 3946) (nil fontified nil 3944 . 3945) (nil fontified nil 3943 . 3944) (nil fontified nil 3942 . 3943) (nil fontified nil 3941 . 3942) (nil fontified nil 3940 . 3941) (nil fontified nil 3939 . 3940) (nil fontified nil 3938 . 3939) (nil fontified nil 3937 . 3938) (nil fontified nil 3936 . 3937) (nil fontified nil 3935 . 3936) (nil fontified nil 3933 . 3935) (3933 . 3990)) nil (25139 18110 208573 132000) 0 nil])
([nil nil ((3990 . 3993)) nil (25139 18110 208554 232000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3991) (undo-tree-id193 . -2) 3993) nil (25139 18110 208541 131000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4046 . 4047) (nil fontified nil 4046 . 4047) (nil fontified nil 4045 . 4046) (nil fontified nil 4033 . 4045) (nil fontified nil 4032 . 4033) (nil fontified nil 4018 . 4032) (nil fontified nil 4010 . 4018) (nil fontified nil 4009 . 4010) (nil fontified nil 4008 . 4009) (nil fontified nil 4007 . 4008) (nil fontified nil 4006 . 4007) (nil fontified nil 4005 . 4006) (nil fontified nil 4004 . 4005) (nil fontified nil 4003 . 4004) (nil fontified nil 4002 . 4003) (nil fontified nil 4001 . 4002) (nil fontified nil 4000 . 4001) (nil fontified nil 3999 . 4000) (nil fontified nil 3998 . 3999) (nil fontified nil 3997 . 3998) (nil fontified nil 3996 . 3997) (nil fontified nil 3995 . 3996) (nil fontified nil 3994 . 3995) (nil fontified nil 3993 . 3994) (nil fontified nil 3992 . 3993) (nil fontified nil 3990 . 3992) (3990 . 4047)) nil (25139 18110 208523 632000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -3984) (undo-tree-id190 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -3985) (undo-tree-id191 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -3986) (undo-tree-id192 . -1) 3987) nil (25139 18110 208502 832000) 0 nil])
([nil nil ((3984 . 3985)) nil (25139 18110 208277 632000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg delete fontified t)) . 4039) (#("o" 0 1 (ws-butler-chg delete fontified t)) . 4039) (#("r" 0 1 (ws-butler-chg chg fontified t)) . 4039)) nil (25139 18110 208248 32000) 0 nil])
([nil nil ((4039 . 4040)) nil (25139 18110 208234 932000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg delete fontified t)) . 3972) (#("O" 0 1 (ws-butler-chg delete fontified t)) . 3972) (#("R" 0 1 (ws-butler-chg chg fontified t)) . 3972)) nil (25139 18110 208221 632000) 0 nil])
([nil nil ((3972 . 3973)) nil (25139 18110 208208 432000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg delete fontified t)) . 4025) (#("O" 0 1 (ws-butler-chg delete fontified t)) . 4025) (#("R" 0 1 (ws-butler-chg chg fontified t)) . 4025)) nil (25139 18110 208195 332000) 0 nil])
([nil nil ((4025 . 4026)) nil (25139 18110 208181 932000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg delete fontified t face font-lock-variable-name-face)) . 3946) (#("o" 0 1 (ws-butler-chg delete fontified t face font-lock-variable-name-face)) . 3946) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 3946)) nil (25139 18110 208168 932000) 0 nil])
([nil nil ((3946 . 3947)) nil (25139 18110 208155 832000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg delete fontified t face font-lock-variable-name-face)) . 3997) (#("o" 0 1 (ws-butler-chg delete fontified t face font-lock-variable-name-face)) . 3997) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 3997)) nil (25139 18110 208141 132000) 0 nil])
([nil nil ((3997 . 3998)) nil (25139 18110 208128 232000) 0 nil])
([nil nil ((4035 . 4038)) nil (25139 18110 208115 632000) 0 nil])
([nil nil ((4038 . 4041)) nil (25139 18110 208103 32000) 0 nil])
([nil nil ((4041 . 4042)) nil (25139 18110 208090 332000) 0 nil])
([nil nil ((4042 . 4051)) nil (25139 18110 208077 831000) 0 nil])
([nil nil ((4051 . 4053)) nil (25139 18110 208065 231000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . -4051) (undo-tree-id188 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -4052) (undo-tree-id189 . -1) 4053) nil (25139 18110 208051 832000) 0 nil])
([nil nil ((4051 . 4052)) nil (25139 18110 208034 832000) 0 nil])
([nil nil ((4052 . 4057)) nil (25139 18110 208022 432000) 0 nil])
([nil nil ((4057 . 4061)) nil (25139 18110 208010 131000) 0 nil])
([nil nil ((4061 . 4067)) nil (25139 18110 207997 632000) 0 nil])
([nil nil ((4053 . 4057) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 4053) (4066 . 4067) (4053 . 4055) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4053) (4067 . 4068)) nil (25139 18110 207984 332000) 0 nil])
([nil nil ((4069 . 4075)) nil (25139 18110 207970 332000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -4073) (undo-tree-id186 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -4074) (undo-tree-id187 . -1) 4075) nil (25139 18110 207957 132000) 0 nil])
([nil nil ((4073 . 4080)) nil (25139 18110 207940 131000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg chg fontified t)) . -4078) (undo-tree-id184 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -4079) (undo-tree-id185 . -1) 4080) nil (25139 18110 207926 432000) 0 nil])
([nil nil ((4078 . 4082)) nil (25139 18110 207901 932000) 0 nil])
([nil nil ((4082 . 4089)) nil (25139 18110 207889 332000) 0 nil])
([nil nil ((4089 . 4091)) nil (25139 18110 207876 531000) 0 nil])
([nil nil ((4091 . 4092)) nil (25139 18110 207860 431000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 4094) (undo-tree-id246 . -1) (t 25139 18110 216340 647000)) nil (25139 18201 195808 919000) 0 nil])
([nil nil ((#("  if (get_press(GP_BUTTON_ROT, button_rot))
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg delete fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 6 (fontified t) 6 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg rear-nonsticky t fontified t) 43 44 (ws-butler-chg delete fontified t)) . 4094) (undo-tree-id244 . -6) (undo-tree-id245 . -44)) nil (25139 18201 195793 219000) 0 nil])
([nil nil ((#("    {
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 4094) (undo-tree-id243 . -6)) nil (25139 18201 195776 819000) 0 nil])
([nil nil ((#("        menu_event_t evt;
" 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t) 8 19 (fontified t face font-lock-type-face) 19 20 (fontified t c-type c-decl-id-start face font-lock-type-face) 20 21 (fontified t) 21 24 (fontified t face font-lock-variable-name-face) 24 26 (fontified t)) . 4094) (undo-tree-id242 . -26)) nil (25139 18201 195761 319000) 0 nil])
([nil nil ((#("        evt.event = MenuEvent::OnPress;
" 0 1 (fontified t ws-butler-chg delete) 1 20 (fontified t) 20 29 (fontified t face font-lock-constant-face) 29 35 (fontified t) 35 39 (fontified t) 39 40 (fontified t)) . 4094) (undo-tree-id241 . -40)) nil (25139 18201 195742 819000) 0 nil])
([nil nil ((#("        evt.result = MenuResult::Nop;
" 0 1 (fontified t ws-butler-chg delete) 1 20 (fontified t) 20 21 (fontified t) 21 31 (fontified t face font-lock-constant-face) 31 38 (fontified t)) . 4094) (undo-tree-id240 . -38)) nil (25139 18201 195727 719000) 0 nil])
([nil nil ((#("        evt.edit = menu_edit_mode;
" 0 1 (fontified t ws-butler-chg delete) 1 35 (fontified t)) . 4094) (undo-tree-id239 . -35)) nil (25139 18201 195711 919000) 0 nil])
([nil nil ((#("        current_menu->menu_event(evt);
" 0 1 (fontified t ws-butler-chg delete) 1 10 (fontified t) 10 38 (fontified t) 38 39 (fontified t)) . 4094) (undo-tree-id238 . -39)) nil (25139 18201 195696 619000) 0 nil])
([nil nil ((#("        switch (evt.result) {
" 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t) 8 14 (fontified t face font-lock-keyword-face) 14 30 (fontified t)) . 4094) (undo-tree-id237 . -30)) nil (25139 18201 195681 19000) 0 nil])
([nil nil ((#("            case MenuResult::EditStart:
" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 27 (fontified t face font-lock-constant-face) 27 38 (fontified t) 38 39 (fontified t c-type c-decl-end) 39 40 (fontified t)) . 4094) (undo-tree-id235 . -39) (undo-tree-id236 . -40)) nil (25139 18201 195664 719000) 0 nil])
([nil nil ((#("                menu_edit_mode = true;
" 0 1 (fontified t ws-butler-chg delete) 1 30 (fontified t) 30 32 (fontified t) 32 33 (fontified t) 33 37 (fontified t face font-lock-constant-face) 37 39 (fontified t)) . 4094) (undo-tree-id234 . -39)) nil (25139 18201 195647 919000) 0 nil])
([nil nil ((#("                break;
" 0 1 (fontified t ws-butler-chg delete) 1 16 (fontified t) 16 21 (fontified t face font-lock-keyword-face) 21 23 (fontified t)) . 4094) (undo-tree-id233 . -23)) nil (25139 18201 195603 619000) 0 nil])
([nil nil ((#("            case MenuResult::EditStop:
" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 27 (fontified t face font-lock-constant-face) 27 37 (fontified t) 37 38 (fontified t c-type c-decl-end) 38 39 (fontified t)) . 4094) (undo-tree-id232 . -39)) nil (25139 18201 195588 219000) 0 nil])
([nil nil ((#("                menu_edit_mode = false;
" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 33 (fontified t) 33 34 (fontified t face font-lock-constant-face) 34 38 (fontified t face font-lock-constant-face) 38 40 (fontified t)) . 4094) (undo-tree-id231 . -40)) nil (25139 18201 195573 118000) 0 nil])
([nil nil ((#("                break;
" 0 1 (fontified t ws-butler-chg delete) 1 5 (fontified t) 5 8 (fontified t) 8 16 (fontified t) 16 21 (fontified t face font-lock-keyword-face) 21 23 (fontified t)) . 4094) (undo-tree-id230 . -23)) nil (25139 18201 195557 618000) 0 nil])
([nil nil ((#("            case MenuResult::MenuOpen:
" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 27 (fontified t face font-lock-constant-face) 27 32 (fontified t) 32 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t c-type c-decl-end) 38 39 (fontified t)) . 4094) (undo-tree-id228 . -39) (undo-tree-id229 . -39)) nil (25139 18201 195542 319000) 0 nil])
([nil nil ((#("                open_menu(evt.menu);
" 0 1 (fontified t ws-butler-chg delete) 1 36 (fontified t) 36 37 (fontified t)) . 4094) (undo-tree-id226 . -36) (undo-tree-id227 . -37)) nil (25139 18201 195525 719000) 0 nil])
([nil nil ((#("                break;
" 0 1 (fontified t ws-butler-chg delete) 1 5 (fontified t) 5 6 (fontified t) 6 16 (fontified t) 16 21 (fontified t face font-lock-keyword-face) 21 23 (fontified t)) . 4094) (undo-tree-id225 . -23)) nil (25139 18201 195509 219000) 0 nil])
([nil nil ((#("            default:
" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 19 (fontified t face font-lock-keyword-face) 19 20 (fontified t c-type c-decl-end) 20 21 (fontified t)) . 4094) (undo-tree-id224 . -21)) nil (25139 18201 195493 719000) 0 nil])
([nil nil ((#("                break;
" 0 1 (fontified t ws-butler-chg delete) 1 16 (fontified t) 16 21 (fontified t face font-lock-keyword-face) 21 23 (fontified t)) . 4094) (undo-tree-id223 . -23)) nil (25139 18201 195477 919000) 0 nil])
([nil nil ((#("        }
" 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 4094) (undo-tree-id222 . -10)) nil (25139 18201 195462 719000) 0 nil])
([nil nil ((#("        render_screen();
" 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t) 8 21 (fontified t face font-lock-variable-name-face) 21 25 (fontified t)) . 4094) (undo-tree-id220 . -24) (undo-tree-id221 . -25)) nil (25139 18201 195447 319000) 0 nil])
([nil nil ((#("        display_update();
" 0 1 (fontified t ws-butler-chg delete) 1 14 (fontified t) 14 25 (fontified t) 25 26 (fontified t)) . 4094) (undo-tree-id219 . -26)) nil (25139 18201 195430 718000) 0 nil])
([nil nil ((#("        return;
" 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t) 8 14 (fontified t face font-lock-keyword-face) 14 16 (fontified t)) . 4094) (undo-tree-id218 . -16)) nil (25139 18201 195415 619000) 0 nil])
([nil nil ((#("    }
" 0 1 (fontified t ws-butler-chg delete) 1 6 (fontified t)) . 4094) (undo-tree-id217 . -6)) nil (25139 18201 195400 219000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4094) (undo-tree-id216 . -1)) nil (25139 18201 195382 419000) 0 nil])
([nil nil ((#("            render_screen();
" 0 12 (fontified t) 12 25 (fontified t face font-lock-variable-name-face) 25 29 (fontified t)) . 5049) (t 25139 18201 203003 852000)) nil (25139 18261 718803 290000) 0 nil])
([nil nil ((#("            display_update();
" 0 1 (fontified t ws-butler-chg delete) 1 30 (fontified t)) . 5049)) nil (25139 18261 718790 490000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 5049)) nil (25139 18261 718778 89000) 0 nil])
([nil nil ((4383 . 4394)) nil (25139 18261 718765 690000) 0 nil])
([nil nil ((4394 . 4397)) nil (25139 18261 718753 389000) 0 nil])
([nil nil ((4397 . 4398)) nil (25139 18261 718740 790000) 0 nil])
([nil nil ((4398 . 4408)) nil (25139 18261 718728 390000) 0 nil])
([nil nil ((4408 . 4410)) nil (25139 18261 718716 89000) 0 nil])
([nil nil ((4410 . 4414)) nil (25139 18261 718703 690000) 0 nil])
([nil nil ((4414 . 4415)) nil (25139 18261 718691 289000) 0 nil])
([nil nil ((4415 . 4416)) nil (25139 18261 718678 890000) 0 nil])
([nil nil ((4416 . 4417)) nil (25139 18261 718666 89000) 0 nil])
([nil nil ((4417 . 4430)) nil (25139 18261 718653 689000) 0 nil])
([nil nil ((4418 . 4428) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 4418) (undo-tree-id255 . -12) (4430 . 4431)) nil (25139 18261 718640 789000) 0 nil])
([nil nil ((4429 . 4434)) nil (25139 18261 718624 890000) 0 nil])
([nil nil ((4434 . 4435) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 4434) (undo-tree-id254 . -4) (4430 . 4434) 4434) nil (25139 18261 718611 590000) 0 nil])
([nil nil ((4435 . 4436)) nil (25139 18261 718595 689000) 0 nil])
([nil nil ((4436 . 4449)) nil (25139 18261 718583 490000) 0 nil])
([nil nil ((4437 . 4447) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 4437) (undo-tree-id253 . -12) (4449 . 4450)) nil (25139 18261 718570 89000) 0 nil])
([nil nil ((#("    MenuSystem::instance.toggle_edit();
" 0 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg delete face font-lock-constant-face) 5 6 (fontified t ws-butler-chg chg face font-lock-constant-face) 6 7 (fontified t ws-butler-chg chg face font-lock-constant-face) 7 8 (fontified t ws-butler-chg chg face font-lock-constant-face) 8 9 (fontified t ws-butler-chg chg face font-lock-constant-face) 9 10 (fontified t ws-butler-chg chg face font-lock-constant-face) 10 11 (fontified t ws-butler-chg chg face font-lock-constant-face) 11 12 (fontified t ws-butler-chg chg face font-lock-constant-face) 12 13 (fontified t ws-butler-chg chg face font-lock-constant-face) 13 14 (fontified t ws-butler-chg chg face font-lock-constant-face) 14 15 (fontified t ws-butler-chg chg) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t) 28 29 (ws-butler-chg chg fontified t) 29 30 (ws-butler-chg chg fontified t) 30 31 (ws-butler-chg chg fontified t) 31 32 (ws-butler-chg chg fontified t) 32 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t) 35 36 (ws-butler-chg chg fontified t) 36 37 (ws-butler-chg chg fontified t) 37 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg delete fontified t)) . 4053) (undo-tree-id250 . -39) (undo-tree-id251 . -39) (undo-tree-id252 . -39)) nil (25139 18261 718553 689000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4092 . 4093) (nil fontified nil 4092 . 4093) (nil fontified nil 4091 . 4092) (nil fontified nil 4090 . 4091) (nil fontified nil 4089 . 4090) (nil fontified nil 4088 . 4089) (nil fontified nil 4087 . 4088) (nil fontified nil 4086 . 4087) (nil fontified nil 4085 . 4086) (nil fontified nil 4084 . 4085) (nil fontified nil 4083 . 4084) (nil fontified nil 4082 . 4083) (nil fontified nil 4081 . 4082) (nil fontified nil 4080 . 4081) (nil fontified nil 4079 . 4080) (nil fontified nil 4078 . 4079) (nil fontified nil 4077 . 4078) (nil fontified nil 4076 . 4077) (nil fontified nil 4075 . 4076) (nil fontified nil 4074 . 4075) (nil fontified nil 4073 . 4074) (nil fontified nil 4072 . 4073) (nil fontified nil 4071 . 4072) (nil fontified nil 4070 . 4071) (nil fontified nil 4069 . 4070) (nil fontified nil 4068 . 4069) (nil fontified nil 4067 . 4068) (nil fontified nil 4066 . 4067) (nil fontified nil 4065 . 4066) (nil fontified nil 4064 . 4065) (nil fontified nil 4063 . 4064) (nil fontified nil 4062 . 4063) (nil fontified nil 4061 . 4062) (nil fontified nil 4060 . 4061) (nil fontified nil 4059 . 4060) (nil fontified nil 4058 . 4059) (nil fontified nil 4057 . 4058) (nil fontified nil 4053 . 4057) (4053 . 4093)) nil (25139 18261 718533 790000) 0 nil])
([nil nil ((4417 . 4430)) nil (25139 18261 718510 589000) 0 nil])
([nil nil ((4418 . 4430) (#("                " 0 12 (ws-butler-chg chg fontified nil) 12 16 (ws-butler-chg chg fontified nil)) . 4418) (undo-tree-id247 . -12) (undo-tree-id248 . -12) (undo-tree-id249 . -12) (nil rear-nonsticky nil 4469 . 4470) (nil fontified nil 4469 . 4470) (nil fontified nil 4468 . 4469) (nil fontified nil 4467 . 4468) (nil fontified nil 4466 . 4467) (nil fontified nil 4465 . 4466) (nil fontified nil 4464 . 4465) (nil fontified nil 4463 . 4464) (nil fontified nil 4462 . 4463) (nil fontified nil 4461 . 4462) (nil fontified nil 4460 . 4461) (nil fontified nil 4459 . 4460) (nil fontified nil 4458 . 4459) (nil fontified nil 4457 . 4458) (nil fontified nil 4456 . 4457) (nil fontified nil 4455 . 4456) (nil fontified nil 4454 . 4455) (nil fontified nil 4453 . 4454) (nil fontified nil 4452 . 4453) (nil fontified nil 4451 . 4452) (nil fontified nil 4450 . 4451) (nil fontified nil 4449 . 4450) (nil fontified nil 4448 . 4449) (nil fontified nil 4447 . 4448) (nil fontified nil 4446 . 4447) (nil fontified nil 4445 . 4446) (nil fontified nil 4444 . 4445) (nil fontified nil 4443 . 4444) (nil fontified nil 4442 . 4443) (nil fontified nil 4441 . 4442) (nil fontified nil 4440 . 4441) (nil fontified nil 4439 . 4440) (nil fontified nil 4438 . 4439) (nil fontified nil 4437 . 4438) (nil fontified nil 4436 . 4437) (nil fontified nil 4435 . 4436) (nil fontified nil 4434 . 4435) (nil fontified nil 4430 . 4434) (4430 . 4470)) nil (25139 18261 718333 290000) 0 nil])
([nil nil ((4451 . 4458)) nil (25139 18261 718275 889000) 0 nil])
([nil nil ((4451 . 4459) (t 25139 18261 726334 882000)) nil (25139 18423 754347 738000) 0 nil])
([nil nil ((#("b" 0 1 (ws-butler-chg chg fontified t)) . -4457) (undo-tree-id261 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -4458) (undo-tree-id262 . -1) 4459) nil (25139 18423 754333 538000) 0 nil])
([nil nil ((4457 . 4458)) nil (25139 18423 754306 938000) 0 nil])
([nil nil ((#("b" 0 1 (ws-butler-chg chg fontified t)) . -4457) (undo-tree-id260 . -1) 4458) nil (25139 18423 754288 838000) 0 nil])
([nil nil ((4457 . 4459)) nil (25139 18423 754269 638000) 0 nil])
([nil nil ((4459 . 4460)) nil (25139 18423 754256 538000) 0 nil])
([nil nil ((4460 . 4469)) nil (25139 18423 754233 138000) 0 nil])
([nil nil ((4469 . 4471)) nil (25139 18423 754216 138000) 0 nil])
([nil nil ((4471 . 4480)) nil (25139 18423 754186 238000) 0 nil])
([nil nil ((4480 . 4481)) nil (25139 18423 754170 38000) 0 nil])
([nil nil ((4481 . 4482)) nil (25139 18423 754154 638000) 0 nil])
([nil nil ((#("currenttoggle_edit();" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t)) . 4482) (undo-tree-id256 . -7) (undo-tree-id257 . -7) (undo-tree-id258 . -18) (undo-tree-id259 . -21)) nil (25139 18423 754134 338000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 4483) (t 25139 18423 762995 377000)) nil (25139 18438 954386 944000) 0 nil])
([nil nil ((#("            MenuSystem::instance.on_event(MenuEvent::PressQuad);
" 0 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg delete fontified t face font-lock-constant-face) 13 14 (ws-butler-chg chg fontified t face font-lock-constant-face) 14 15 (ws-butler-chg chg fontified t face font-lock-constant-face) 15 16 (ws-butler-chg chg fontified t face font-lock-constant-face) 16 17 (ws-butler-chg chg fontified t face font-lock-constant-face) 17 18 (ws-butler-chg chg fontified t face font-lock-constant-face) 18 19 (ws-butler-chg chg fontified t face font-lock-constant-face) 19 20 (ws-butler-chg chg fontified t face font-lock-constant-face) 20 21 (ws-butler-chg chg fontified t face font-lock-constant-face) 21 22 (ws-butler-chg chg fontified t face font-lock-constant-face) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t) 28 29 (ws-butler-chg chg fontified t) 29 30 (ws-butler-chg chg fontified t) 30 31 (ws-butler-chg chg fontified t) 31 32 (ws-butler-chg chg fontified t) 32 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t) 35 36 (ws-butler-chg chg fontified t) 36 37 (ws-butler-chg chg fontified t) 37 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t face font-lock-constant-face) 43 44 (ws-butler-chg chg fontified t face font-lock-constant-face) 44 45 (ws-butler-chg chg fontified t face font-lock-constant-face) 45 46 (ws-butler-chg chg fontified t face font-lock-constant-face) 46 47 (ws-butler-chg chg fontified t face font-lock-constant-face) 47 48 (ws-butler-chg chg fontified t face font-lock-constant-face) 48 49 (ws-butler-chg chg fontified t face font-lock-constant-face) 49 50 (ws-butler-chg chg fontified t face font-lock-constant-face) 50 51 (ws-butler-chg chg fontified t face font-lock-constant-face) 51 52 (ws-butler-chg chg fontified t) 52 53 (ws-butler-chg chg fontified t) 53 54 (ws-butler-chg chg fontified t) 54 55 (ws-butler-chg chg fontified t) 55 56 (ws-butler-chg chg fontified t) 56 57 (ws-butler-chg chg fontified t) 57 58 (ws-butler-chg chg fontified t) 58 59 (ws-butler-chg chg fontified t) 59 60 (ws-butler-chg chg fontified t) 60 61 (ws-butler-chg chg fontified t) 61 62 (ws-butler-chg chg fontified t) 62 63 (ws-butler-chg chg fontified t) 63 64 (ws-butler-chg chg fontified t) 64 65 (ws-butler-chg delete rear-nonsticky t fontified t)) . 4418) (undo-tree-id264 . -64) (undo-tree-id265 . -64)) nil (25139 18438 954373 644000) 0 nil])
([nil nil ((nil fontified nil 4482 . 4483) (nil fontified nil 4481 . 4482) (nil fontified nil 4480 . 4481) (nil fontified nil 4479 . 4480) (nil fontified nil 4478 . 4479) (nil fontified nil 4477 . 4478) (nil fontified nil 4476 . 4477) (nil fontified nil 4475 . 4476) (nil fontified nil 4474 . 4475) (nil fontified nil 4473 . 4474) (nil fontified nil 4472 . 4473) (nil fontified nil 4471 . 4472) (nil fontified nil 4470 . 4471) (nil fontified nil 4469 . 4470) (nil fontified nil 4468 . 4469) (nil fontified nil 4467 . 4468) (nil fontified nil 4466 . 4467) (nil fontified nil 4465 . 4466) (nil fontified nil 4464 . 4465) (nil fontified nil 4463 . 4464) (nil fontified nil 4462 . 4463) (nil fontified nil 4461 . 4462) (nil fontified nil 4460 . 4461) (nil fontified nil 4459 . 4460) (nil fontified nil 4458 . 4459) (nil fontified nil 4457 . 4458) (nil fontified nil 4456 . 4457) (nil fontified nil 4455 . 4456) (nil fontified nil 4454 . 4455) (nil fontified nil 4453 . 4454) (nil fontified nil 4452 . 4453) (nil fontified nil 4451 . 4452) (nil fontified nil 4450 . 4451) (nil fontified nil 4449 . 4450) (nil fontified nil 4448 . 4449) (nil fontified nil 4447 . 4448) (nil fontified nil 4446 . 4447) (nil fontified nil 4445 . 4446) (nil fontified nil 4444 . 4445) (nil fontified nil 4443 . 4444) (nil fontified nil 4442 . 4443) (nil fontified nil 4441 . 4442) (nil fontified nil 4440 . 4441) (nil fontified nil 4439 . 4440) (nil fontified nil 4438 . 4439) (nil fontified nil 4437 . 4438) (nil fontified nil 4436 . 4437) (nil fontified nil 4435 . 4436) (nil fontified nil 4434 . 4435) (nil fontified nil 4433 . 4434) (nil fontified nil 4432 . 4433) (nil fontified nil 4431 . 4432) (nil fontified nil 4430 . 4431) (nil fontified nil 4418 . 4430) (4418 . 4483)) nil (25139 18438 954355 44000) 0 nil])
([nil nil ((4053 . 4057) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 4053) (nil fontified nil 4117 . 4118) (nil fontified nil 4116 . 4117) (nil fontified nil 4115 . 4116) (nil fontified nil 4114 . 4115) (nil fontified nil 4113 . 4114) (nil fontified nil 4112 . 4113) (nil fontified nil 4111 . 4112) (nil fontified nil 4110 . 4111) (nil fontified nil 4109 . 4110) (nil fontified nil 4108 . 4109) (nil fontified nil 4107 . 4108) (nil fontified nil 4106 . 4107) (nil fontified nil 4105 . 4106) (nil fontified nil 4104 . 4105) (nil fontified nil 4103 . 4104) (nil fontified nil 4102 . 4103) (nil fontified nil 4101 . 4102) (nil fontified nil 4100 . 4101) (nil fontified nil 4099 . 4100) (nil fontified nil 4098 . 4099) (nil fontified nil 4097 . 4098) (nil fontified nil 4096 . 4097) (nil fontified nil 4095 . 4096) (nil fontified nil 4094 . 4095) (nil fontified nil 4093 . 4094) (nil fontified nil 4092 . 4093) (nil fontified nil 4091 . 4092) (nil fontified nil 4090 . 4091) (nil fontified nil 4089 . 4090) (nil fontified nil 4088 . 4089) (nil fontified nil 4087 . 4088) (nil fontified nil 4086 . 4087) (nil fontified nil 4085 . 4086) (nil fontified nil 4084 . 4085) (nil fontified nil 4083 . 4084) (nil fontified nil 4082 . 4083) (nil fontified nil 4081 . 4082) (nil fontified nil 4080 . 4081) (nil fontified nil 4079 . 4080) (nil fontified nil 4078 . 4079) (nil fontified nil 4077 . 4078) (nil fontified nil 4076 . 4077) (nil fontified nil 4075 . 4076) (nil fontified nil 4074 . 4075) (nil fontified nil 4073 . 4074) (nil fontified nil 4072 . 4073) (nil fontified nil 4071 . 4072) (nil fontified nil 4070 . 4071) (nil fontified nil 4069 . 4070) (nil fontified nil 4068 . 4069) (nil fontified nil 4067 . 4068) (nil fontified nil 4066 . 4067) (nil fontified nil 4065 . 4066) (nil fontified nil 4053 . 4065) (4053 . 4118)) nil (25139 18438 954325 344000) 0 nil])
([nil nil ((#("    MenuSystem::instance.toggle_edit();
" 0 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t face font-lock-constant-face) 5 6 (ws-butler-chg chg fontified t face font-lock-constant-face) 6 7 (ws-butler-chg chg fontified t face font-lock-constant-face) 7 8 (ws-butler-chg chg fontified t face font-lock-constant-face) 8 9 (ws-butler-chg chg fontified t face font-lock-constant-face) 9 10 (ws-butler-chg chg fontified t face font-lock-constant-face) 10 11 (ws-butler-chg chg fontified t face font-lock-constant-face) 11 12 (ws-butler-chg chg fontified t face font-lock-constant-face) 12 13 (ws-butler-chg chg fontified t face font-lock-constant-face) 13 14 (ws-butler-chg chg fontified t face font-lock-constant-face) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t) 28 29 (ws-butler-chg chg fontified t) 29 30 (ws-butler-chg chg fontified t) 30 31 (ws-butler-chg chg fontified t) 31 32 (ws-butler-chg chg fontified t) 32 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg fontified t) 34 35 (ws-butler-chg chg fontified t) 35 36 (ws-butler-chg chg fontified t) 36 37 (ws-butler-chg chg fontified t) 37 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t rear-nonsticky t)) . 4110) (undo-tree-id263 . -40)) nil (25139 18438 954295 945000) 0 nil])
([nil nil ((4111 . 4113) (#("    " 0 1 (c-in-sws t c-is-sws t ws-butler-chg delete fontified t) 1 4 (c-in-sws t c-is-sws t fontified t)) . 4111) (t 25139 18438 962994 803000)) nil (25139 18474 626325 548000) 0 nil])
([nil nil ((4161 . 4163) (#("    " 0 4 (c-is-sws t c-in-sws t fontified t)) . 4161) (undo-tree-id318 . -2) 4163) nil (25139 18474 626311 748000) 0 nil])
([nil nil ((4234 . 4236) (#("    " 0 4 (fontified t)) . 4234) (undo-tree-id317 . -2) 4236) nil (25139 18474 626294 448000) 0 nil])
([nil nil ((4318 . 4324) (#("        " 0 8 (fontified t)) . 4318) (undo-tree-id316 . -4) 4322) nil (25139 18474 626225 648000) 0 nil])
([nil nil ((4368 . 4374)) nil (25139 18474 626209 648000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4368) (undo-tree-id310 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4369) (undo-tree-id311 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4370) (undo-tree-id312 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4371) (undo-tree-id313 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4372) (undo-tree-id314 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4373) (undo-tree-id315 . -1) 4374) nil (25139 18474 626195 448000) 0 nil])
([nil nil ((#("           menu_event_t evt;" 0 11 (fontified t) 11 21 (fontified t face font-lock-type-face) 21 22 (fontified t face font-lock-type-face) 22 23 (fontified t c-type c-decl-id-start face font-lock-type-face) 23 24 (fontified t) 24 27 (fontified t face font-lock-variable-name-face) 27 28 (fontified t)) . 4524)) nil (25139 18474 626170 248000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("            " 0 12 (fontified t)) . -4525) 4524) nil (25139 18474 626156 748000) 0 nil])
([nil nil ((#("evt.event = MenuEvent::OnRotate;" 0 1 (fontified t ws-butler-chg delete) 1 11 (fontified t) 11 12 (fontified t) 12 16 (fontified t face font-lock-constant-face) 16 21 (fontified t face font-lock-constant-face) 21 32 (fontified t)) . 4524)) nil (25139 18474 626143 48000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("            " 0 4 (fontified t) 4 5 (fontified t) 5 12 (fontified t)) . -4525) 4524) nil (25139 18474 626129 948000) 0 nil])
([nil nil ((#("evt.result = MenuResult::Nop;" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 13 (fontified t) 13 23 (fontified t face font-lock-constant-face) 23 29 (fontified t)) . 4524)) nil (25139 18474 626116 448000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("            " 0 12 (fontified t)) . -4525) 4524) nil (25139 18474 626102 948000) 0 nil])
([nil nil ((#("evt.dir = dir;" 0 1 (fontified t ws-butler-chg delete) 1 7 (fontified t) 7 9 (fontified t) 9 14 (fontified t)) . 4524)) nil (25139 18474 626089 148000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("            " 0 1 (fontified t) 1 12 (fontified t)) . -4525) 4524) nil (25139 18474 626075 548000) 0 nil])
([nil nil ((#("evt.edit = menu_edit_mode;" 0 1 (fontified t ws-butler-chg delete) 1 10 (fontified t) 10 26 (fontified t)) . 4524)) nil (25139 18474 626061 748000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("            " 0 12 (fontified t)) . -4525) 4524) nil (25139 18474 626048 348000) 0 nil])
([nil nil ((#("current_menu->menu_event(evt);" 0 1 (fontified t ws-butler-chg delete) 1 30 (fontified t)) . 4524)) nil (25139 18474 626034 348000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("            " 0 12 (fontified t)) . -4525) 4524) nil (25139 18474 626020 648000) 0 nil])
([nil nil ((#("switch (evt.result) {" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 6 (fontified t face font-lock-keyword-face) 6 21 (fontified t)) . 4524)) nil (25139 18474 626006 748000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                " 0 2 (fontified t) 2 16 (fontified t)) . -4525) 4524) nil (25139 18474 625993 548000) 0 nil])
([nil nil ((#("case MenuResult::EditStart:" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 13 (fontified t face font-lock-constant-face) 13 15 (fontified t face font-lock-constant-face) 15 26 (fontified t) 26 27 (fontified t c-type c-decl-end)) . 4524)) nil (25139 18474 625979 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                    " 0 20 (fontified t)) . -4525) 4524) nil (25139 18474 625966 448000) 0 nil])
([nil nil ((#("menu_edit_mode = true;" 0 1 (fontified t ws-butler-chg delete) 1 16 (fontified t) 16 17 (fontified t) 17 21 (fontified t face font-lock-constant-face) 21 22 (fontified t)) . 4524)) nil (25139 18474 625952 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                    " 0 20 (fontified t)) . -4525) 4524) nil (25139 18474 625939 348000) 0 nil])
([nil nil ((#("break;" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . 4524)) nil (25139 18474 625925 448000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                " 0 16 (fontified t)) . -4525) 4524) nil (25139 18474 625906 148000) 0 nil])
([nil nil ((#("case MenuResult::EditStop:" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 15 (fontified t face font-lock-constant-face) 15 25 (fontified t) 25 26 (fontified t c-type c-decl-end)) . 4524)) nil (25139 18474 625892 648000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                    " 0 20 (fontified t)) . -4525) 4524) nil (25139 18474 625879 148000) 0 nil])
([nil nil ((#("menu_edit_mode = false;" 0 1 (fontified t ws-butler-chg delete) 1 16 (fontified t) 16 17 (fontified t) 17 22 (fontified t face font-lock-constant-face) 22 23 (fontified t)) . 4524)) nil (25139 18474 625865 248000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                    " 0 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 20 (fontified t)) . -4525) 4524) nil (25139 18474 625851 748000) 0 nil])
([nil nil ((#("break;" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . 4524)) nil (25139 18474 625838 48000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                " 0 12 (fontified t) 12 16 (fontified t)) . -4525) 4524) nil (25139 18474 625824 648000) 0 nil])
([nil nil ((#("case MenuResult::MenuOpen:" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 15 (fontified t face font-lock-constant-face) 15 25 (fontified t) 25 26 (fontified t c-type c-decl-end)) . 4524)) nil (25139 18474 625810 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                    " 0 20 (fontified t)) . -4525) 4524) nil (25139 18474 625797 448000) 0 nil])
([nil nil ((#("open_menu(evt.menu);" 0 1 (fontified t ws-butler-chg delete) 1 20 (fontified t)) . 4524)) nil (25139 18474 625783 648000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                    " 0 2 (fontified t) 2 20 (fontified t)) . -4525) 4524) nil (25139 18474 625770 148000) 0 nil])
([nil nil ((#("break;" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . 4524)) nil (25139 18474 625756 748000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                " 0 16 (fontified t)) . -4525) 4524) nil (25139 18474 625742 948000) 0 nil])
([nil nil ((#("default:" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t c-type c-decl-end)) . 4524)) nil (25139 18474 625729 148000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("                    " 0 14 (fontified t) 14 20 (fontified t)) . -4525) 4524) nil (25139 18474 625715 548000) 0 nil])
([nil nil ((#("break;" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . 4524)) nil (25139 18474 625701 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("            " 0 12 (fontified t)) . -4525) 4524) nil (25139 18474 625688 448000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t ws-butler-chg delete)) . 4524)) nil (25139 18474 625675 48000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4524) (#("        " 0 1 (ws-butler-chg delete fontified t) 1 8 (fontified t)) . -4525) 4524) nil (25139 18474 625660 848000) 0 nil])
([nil nil ((742 . 4415) (#("
{
    // esp32-rotary-encoder requires that the GPIO ISR service is installed before calling rotary_encoder_register()
    ESP_ERROR_CHECK(gpio_install_isr_service(0));

    // Initialise the rotary encoder device with the GPIOs for A and B signals
    ESP_ERROR_CHECK(rotary_encoder_init(&encoder_info, ROT_ENC_A_GPIO, ROT_ENC_B_GPIO));
    ESP_ERROR_CHECK(rotary_encoder_enable_half_steps(&encoder_info, ROT_ENABLE_HALF_STEPS));
#ifdef FLIP_DIRECTION
    ESP_ERROR_CHECK(rotary_encoder_flip_direction(&encoder_info));
#endif

    // Create a queue for events from the rotary encoder driver.
    // Tasks can read from this queue to receive up to date position encoder_information.
    encoder_queue = rotary_encoder_create_queue();
    ESP_ERROR_CHECK(rotary_encoder_set_queue(&encoder_info, encoder_queue));

    // Config buttons
    set_gpio_mode(GP_BUTTON_ROT, GPIO_MODE_INPUT, 1);
    set_gpio_mode(GP_BUTTON_A, GPIO_MODE_INPUT, 1);
    set_gpio_mode(GP_BUTTON_B, GPIO_MODE_INPUT, 1);

    // Config the menu
    main_menu = new Menu(nullptr, \"Menu\");

    auto motor_speed_menu = new Menu(\"Speed...\", nullptr);
    main_menu->Add(motor_speed_menu);
    motor_speed_menu->Add(main_menu);
    motor_speed_menu->Add(new FloatItem(\"Speed\", &g_speed, 0, 1, 0.01));

    MenuSystem.instance.open_menu(main_menu);
}

// ==============================================================================
// Encoder API
// ==============================================================================
// The rotary_encoder_state_t& state can be one of the next values
//    ROTARY_ENCODER_DIRECTION_NOT_SET = 0,
//    ROTARY_ENCODER_DIRECTION_CLOCKWISE,
//    ROTARY_ENCODER_DIRECTION_COUNTER_CLOCKWISE,
// ==============================================================================

int get_encoder_evt_dir (rotary_encoder_state_t& state) {
    if (state.direction == ROTARY_ENCODER_DIRECTION_CLOCKWISE)
        return 1;
    if (state.direction == ROTARY_ENCODER_DIRECTION_COUNTER_CLOCKWISE)
        return -1;
    return 0;
}

int get_encoder_dir()
{
    rotary_encoder_state_t state = { 0, ROTARY_ENCODER_DIRECTION_NOT_SET  };
    ESP_ERROR_CHECK(rotary_encoder_get_state(&encoder_info, &state));
    if (state.direction == ROTARY_ENCODER_DIRECTION_CLOCKWISE)
        return 1;
    if (state.direction == ROTARY_ENCODER_DIRECTION_COUNTER_CLOCKWISE)
        return -1;
    return 0;
}

int get_encoder_pos()
{
    rotary_encoder_state_t state = { 0, ROTARY_ENCODER_DIRECTION_NOT_SET };
    ESP_ERROR_CHECK(rotary_encoder_get_state(&encoder_info, &state));
    return state.position;
}

// ==============================================================================
// The menu system
// ==============================================================================

/** Return the button is pressed and update previous state */
bool get_press(gpio_num_t gpio, bool& old_state) {
    bool state = !gpio_get_level(gpio);
    bool press = state && !old_state;
    old_state = state;
    return press;
}

static bool button_rot;
static bool button_a;
static bool button_b;

/**
 * Update menu every frame
 **/
void menu_update()
{
  auto press_rot = get_press(GP_BUTTON_ROT, button_rot);
  auto press_a = get_press(GP_BUTTON_A, button_a);
  auto press_b = get_press(GP_BUTTON_B, button_n);

  if (press_rot)
    MenuSystem::instance.on_event(MenuEvent::PressQuad);

  // Wait for incoming events on the event queue.
  rotary_encoder_event_t event = {0, ROTARY_ENCODER_DIRECTION_NOT_SET };
  if (xQueueReceive(encoder_queue, &event, 1 / portTICK_PERIOD_MS) == pdTRUE)
    {
      int dir = get_encoder_evt_dir(event.state);

        if (dir != 0) {
          if (MenuSystem::edit) {
            MenuSystem::instance.on_event(MenuEvent::PressQuad);
          } else {
          }
 }
  " 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 4 7 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 7 8 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 8 10 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 10 64 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 64 119 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 119 120 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 120 121 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 121 124 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 124 125 (ws-butler-chg chg c-is-sws t fontified t) 125 170 (ws-butler-chg chg fontified t) 170 171 (ws-butler-chg chg fontified t) 171 172 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 172 175 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 175 176 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 176 178 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 178 249 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 249 250 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 250 251 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 251 252 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 252 254 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 254 255 (ws-butler-chg chg c-is-sws t fontified t) 255 273 (ws-butler-chg chg fontified t) 273 291 (ws-butler-chg chg fontified t) 291 302 (ws-butler-chg chg fontified t) 302 303 (ws-butler-chg chg fontified t) 303 304 (ws-butler-chg chg fontified t) 304 337 (ws-butler-chg chg fontified t) 337 339 (ws-butler-chg chg fontified t) 339 340 (ws-butler-chg chg fontified t) 340 386 (ws-butler-chg chg fontified t) 386 393 (ws-butler-chg chg fontified t) 393 405 (ws-butler-chg chg fontified t) 405 406 (ws-butler-chg chg fontified t) 406 430 (ws-butler-chg chg fontified t) 430 432 (ws-butler-chg chg fontified t) 432 433 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 433 438 (ws-butler-chg chg c-in-sws t fontified t face font-lock-preprocessor-face) 438 453 (ws-butler-chg chg c-in-sws t fontified t) 453 454 (ws-butler-chg chg c-in-sws t fontified t) 454 455 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 455 458 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 458 459 (ws-butler-chg chg c-is-sws t fontified t) 459 500 (ws-butler-chg chg fontified t) 500 505 (ws-butler-chg chg fontified t) 505 517 (ws-butler-chg chg fontified t) 517 518 (ws-butler-chg chg fontified t) 518 519 (ws-butler-chg chg fontified t) 519 521 (ws-butler-chg chg fontified t) 521 522 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 522 525 (ws-butler-chg chg c-in-sws t fontified t face font-lock-preprocessor-face) 525 527 (ws-butler-chg chg c-in-sws t fontified t face font-lock-preprocessor-face) 527 528 (ws-butler-chg chg c-in-sws t fontified t) 528 529 (ws-butler-chg chg c-in-sws t fontified t) 529 530 (ws-butler-chg chg c-in-sws t fontified t) 530 533 (ws-butler-chg chg c-in-sws t fontified t) 533 534 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 534 536 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 536 593 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 593 594 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 594 595 (ws-butler-chg chg c-in-sws t fontified t) 595 598 (ws-butler-chg chg c-in-sws t fontified t) 598 599 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 599 601 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 601 644 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 644 663 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 663 675 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 675 683 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 683 684 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 684 685 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 685 688 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 688 689 (c-is-sws t ws-butler-chg chg fontified t) 689 701 (ws-butler-chg chg fontified t) 701 703 (ws-butler-chg chg fontified t) 703 735 (ws-butler-chg chg fontified t) 735 736 (ws-butler-chg chg fontified t) 736 781 (ws-butler-chg chg fontified t) 781 793 (ws-butler-chg chg fontified t) 793 794 (ws-butler-chg chg fontified t) 794 795 (ws-butler-chg chg fontified t) 795 804 (ws-butler-chg chg fontified t) 804 808 (ws-butler-chg chg fontified t) 808 809 (ws-butler-chg chg fontified t) 809 812 (ws-butler-chg chg fontified t) 812 813 (ws-butler-chg chg fontified t) 813 814 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 814 817 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 817 818 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 818 820 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 820 834 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 834 835 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 835 836 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 836 839 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 839 840 (ws-butler-chg chg fontified t c-is-sws t) 840 843 (ws-butler-chg chg fontified t) 843 844 (ws-butler-chg chg c-is-sws t fontified t) 844 848 (ws-butler-chg chg fontified t) 848 849 (ws-butler-chg chg fontified t) 849 850 (ws-butler-chg chg fontified t) 850 852 (ws-butler-chg chg fontified t) 852 853 (ws-butler-chg delete fontified t) 853 887 (ws-butler-chg chg fontified t) 887 888 (ws-butler-chg chg fontified t) 888 889 (ws-butler-chg chg fontified t) 889 890 (ws-butler-chg chg fontified t) 890 893 (ws-butler-chg chg fontified t) 893 894 (ws-butler-chg chg fontified t) 894 895 (ws-butler-chg chg fontified t) 895 896 (ws-butler-chg chg fontified t) 896 897 (ws-butler-chg chg fontified t) 897 898 (ws-butler-chg chg fontified t) 898 899 (ws-butler-chg chg fontified t) 899 900 (ws-butler-chg chg fontified t) 900 901 (ws-butler-chg chg fontified t) 901 902 (ws-butler-chg chg fontified t) 902 903 (ws-butler-chg chg fontified t) 903 904 (ws-butler-chg chg fontified t) 904 905 (ws-butler-chg chg fontified t) 905 906 (ws-butler-chg chg fontified t) 906 907 (ws-butler-chg delete fontified t) 907 918 (ws-butler-chg chg fontified t) 918 919 (ws-butler-chg chg fontified t) 919 935 (ws-butler-chg chg fontified t) 935 936 (ws-butler-chg chg fontified t) 936 939 (ws-butler-chg chg fontified t) 939 940 (ws-butler-chg chg fontified t) 940 941 (ws-butler-chg chg fontified t) 941 942 (ws-butler-chg chg fontified t) 942 945 (ws-butler-chg chg fontified t) 945 946 (ws-butler-chg chg fontified t) 946 947 (ws-butler-chg chg fontified t) 947 948 (ws-butler-chg chg fontified t) 948 949 (ws-butler-chg chg fontified t) 949 950 (ws-butler-chg chg fontified t) 950 951 (ws-butler-chg chg fontified t) 951 952 (ws-butler-chg chg fontified t) 952 953 (ws-butler-chg chg fontified t) 953 954 (ws-butler-chg chg fontified t) 954 955 (ws-butler-chg chg fontified t) 955 956 (ws-butler-chg chg fontified t) 956 957 (ws-butler-chg chg fontified t) 957 958 (ws-butler-chg chg fontified t) 958 959 (ws-butler-chg delete fontified t) 959 970 (ws-butler-chg chg fontified t) 970 971 (ws-butler-chg chg fontified t) 971 987 (ws-butler-chg chg fontified t) 987 988 (ws-butler-chg chg fontified t) 988 992 (ws-butler-chg chg fontified t) 992 993 (ws-butler-chg chg fontified t) 993 994 (ws-butler-chg chg fontified t) 994 995 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 995 998 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 998 999 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 999 1001 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 1001 1016 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 1016 1017 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1017 1018 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 1018 1021 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 1021 1022 (ws-butler-chg chg c-is-sws t fontified t) 1022 1033 (ws-butler-chg chg fontified t) 1033 1036 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1036 1037 (ws-butler-chg chg fontified t) 1037 1041 (ws-butler-chg chg fontified t face font-lock-type-face) 1041 1042 (ws-butler-chg chg fontified t) 1042 1043 (ws-butler-chg chg fontified t face font-lock-constant-face) 1043 1044 (ws-butler-chg chg fontified t face font-lock-constant-face) 1044 1045 (ws-butler-chg chg fontified t face font-lock-constant-face) 1045 1046 (ws-butler-chg chg fontified t face font-lock-constant-face) 1046 1047 (ws-butler-chg chg fontified t face font-lock-constant-face) 1047 1048 (ws-butler-chg chg fontified t face font-lock-constant-face) 1048 1049 (ws-butler-chg chg fontified t face font-lock-constant-face) 1049 1050 (ws-butler-chg chg fontified t) 1050 1051 (ws-butler-chg chg fontified t) 1051 1053 (ws-butler-chg chg fontified t face font-lock-string-face) 1053 1056 (ws-butler-chg chg fontified t face font-lock-string-face) 1056 1057 (ws-butler-chg delete fontified t face font-lock-string-face) 1057 1058 (ws-butler-chg delete fontified t) 1058 1060 (ws-butler-chg chg fontified t) 1060 1061 (ws-butler-chg delete fontified t) 1061 1062 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 1062 1065 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 1065 1066 (ws-butler-chg chg c-is-sws t fontified t face font-lock-keyword-face) 1066 1068 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1068 1069 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 1069 1070 (ws-butler-chg chg fontified t) 1070 1077 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 1077 1086 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 1086 1088 (ws-butler-chg chg fontified t) 1088 1089 (ws-butler-chg chg fontified t) 1089 1092 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1092 1093 (ws-butler-chg chg fontified t) 1093 1097 (ws-butler-chg chg fontified t face font-lock-type-face) 1097 1098 (ws-butler-chg chg fontified t) 1098 1108 (ws-butler-chg chg fontified t face font-lock-string-face) 1108 1110 (ws-butler-chg chg fontified t) 1110 1117 (ws-butler-chg chg fontified t face font-lock-constant-face) 1117 1120 (ws-butler-chg chg fontified t) 1120 1121 (ws-butler-chg chg fontified t) 1121 1153 (ws-butler-chg chg fontified t) 1153 1156 (ws-butler-chg chg fontified t) 1156 1157 (ws-butler-chg chg fontified t) 1157 1158 (ws-butler-chg chg fontified t) 1158 1159 (ws-butler-chg chg fontified t) 1159 1195 (ws-butler-chg chg fontified t) 1195 1196 (ws-butler-chg chg fontified t) 1196 1197 (ws-butler-chg chg fontified t) 1197 1202 (ws-butler-chg chg fontified t) 1202 1203 (ws-butler-chg chg fontified t) 1203 1222 (ws-butler-chg chg fontified t) 1222 1225 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1225 1226 (ws-butler-chg chg fontified t) 1226 1235 (ws-butler-chg chg fontified t face font-lock-type-face) 1235 1236 (ws-butler-chg chg fontified t) 1236 1243 (ws-butler-chg chg fontified t face font-lock-string-face) 1243 1251 (ws-butler-chg chg fontified t) 1251 1254 (ws-butler-chg chg fontified t) 1254 1268 (ws-butler-chg chg fontified t) 1268 1269 (ws-butler-chg chg fontified t) 1269 1270 (ws-butler-chg chg fontified t) 1270 1274 (ws-butler-chg chg fontified t) 1274 1275 (ws-butler-chg chg fontified t) 1275 1276 (ws-butler-chg chg fontified t) 1276 1277 (ws-butler-chg chg fontified t) 1277 1278 (ws-butler-chg chg fontified t) 1278 1279 (ws-butler-chg chg fontified t) 1279 1280 (ws-butler-chg chg fontified t) 1280 1281 (ws-butler-chg chg fontified t) 1281 1282 (ws-butler-chg chg fontified t) 1282 1283 (ws-butler-chg chg fontified t) 1283 1284 (ws-butler-chg chg fontified t) 1284 1285 (ws-butler-chg chg fontified t) 1285 1286 (ws-butler-chg chg fontified t) 1286 1288 (ws-butler-chg chg fontified t) 1288 1289 (ws-butler-chg chg fontified t) 1289 1290 (ws-butler-chg chg fontified t) 1290 1291 (ws-butler-chg chg fontified t) 1291 1292 (ws-butler-chg chg fontified t) 1292 1293 (ws-butler-chg chg fontified t) 1293 1294 (ws-butler-chg chg fontified t) 1294 1295 (ws-butler-chg chg fontified t) 1295 1296 (ws-butler-chg chg fontified t) 1296 1297 (ws-butler-chg chg fontified t) 1297 1298 (ws-butler-chg chg fontified t) 1298 1299 (ws-butler-chg chg fontified t) 1299 1300 (ws-butler-chg chg fontified t) 1300 1301 (ws-butler-chg chg fontified t) 1301 1302 (ws-butler-chg chg fontified t) 1302 1303 (ws-butler-chg chg fontified t) 1303 1304 (ws-butler-chg chg fontified t) 1304 1305 (ws-butler-chg chg fontified t) 1305 1306 (ws-butler-chg chg fontified t) 1306 1307 (ws-butler-chg chg fontified t) 1307 1308 (ws-butler-chg chg fontified t) 1308 1309 (ws-butler-chg chg fontified t) 1309 1310 (ws-butler-chg chg fontified t) 1310 1311 (ws-butler-chg chg fontified t) 1311 1312 (ws-butler-chg chg fontified t) 1312 1313 (ws-butler-chg chg fontified t) 1313 1314 (ws-butler-chg chg fontified t) 1314 1315 (ws-butler-chg chg fontified t) 1315 1316 (ws-butler-chg delete fontified t) 1316 1317 (ws-butler-chg delete fontified t) 1317 1318 (ws-butler-chg chg rear-nonsticky t fontified t) 1318 1319 (fontified t) 1319 1320 (ws-butler-chg delete c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1320 1322 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1322 1324 (c-in-sws t fontified t face font-lock-comment-face) 1324 1364 (c-in-sws t fontified t face font-lock-comment-face) 1364 1375 (c-in-sws t fontified t face font-lock-comment-face) 1375 1401 (c-in-sws t fontified t face font-lock-comment-face) 1401 1402 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1402 1404 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1404 1415 (c-in-sws t fontified t face font-lock-comment-face) 1415 1416 (fontified t face font-lock-comment-face c-in-sws t) 1416 1417 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-delimiter-face) 1417 1419 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 1419 1497 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 1497 1498 (c-in-sws t ws-butler-chg chg fontified t rear-nonsticky t face font-lock-comment-face) 1498 1499 (fontified t ws-butler-chg delete c-in-sws t face font-lock-comment-delimiter-face) 1499 1500 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-delimiter-face) 1500 1501 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-delimiter-face) 1501 1502 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1502 1504 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1504 1505 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1505 1527 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1527 1529 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1529 1534 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1534 1535 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1535 1536 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1536 1537 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1537 1538 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1538 1539 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1539 1540 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1540 1541 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1541 1542 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1542 1543 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1543 1544 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1544 1545 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1545 1546 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1546 1547 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1547 1548 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1548 1549 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1549 1550 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1550 1551 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1551 1552 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1552 1553 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1553 1554 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1554 1555 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1555 1556 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1556 1557 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1557 1558 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1558 1559 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1559 1560 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1560 1561 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1561 1562 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1562 1563 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1563 1564 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1564 1565 (fontified t ws-butler-chg delete c-in-sws t face font-lock-comment-face) 1565 1566 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1566 1571 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1571 1609 (c-in-sws t fontified t face font-lock-comment-face) 1609 1615 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1615 1628 (c-in-sws t fontified t face font-lock-comment-face) 1628 1629 (c-in-sws t fontified t face font-lock-comment-face) 1629 1651 (c-in-sws t fontified t face font-lock-comment-face) 1651 1652 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1652 1656 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1656 1657 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1657 1700 (c-in-sws t fontified t face font-lock-comment-face) 1700 1701 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1701 1702 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face c-in-sws t) 1702 1704 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 1704 1782 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 1782 1783 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-comment-face c-in-sws t) 1783 1784 (fontified t c-in-sws t) 1784 1785 (c-is-sws t fontified t face font-lock-type-face) 1785 1786 (fontified t face font-lock-type-face) 1786 1787 (fontified t c-type c-decl-id-start face font-lock-type-face) 1787 1788 (fontified t) 1788 1807 (fontified t face font-lock-function-name-face) 1807 1808 (fontified t) 1808 1809 (fontified t c-type c-decl-arg-start) 1809 1831 (ws-butler-chg chg fontified t face font-lock-type-face) 1831 1833 (ws-butler-chg chg fontified t) 1833 1838 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 1838 1839 (ws-butler-chg chg fontified t) 1839 1840 (ws-butler-chg chg fontified t) 1840 1841 (ws-butler-chg chg rear-nonsticky t fontified t) 1841 1842 (ws-butler-chg delete fontified t) 1842 1846 (fontified t) 1846 1848 (fontified t face font-lock-keyword-face) 1848 1905 (fontified t) 1905 1908 (fontified t) 1908 1913 (fontified t) 1913 1919 (fontified t face font-lock-keyword-face) 1919 1922 (fontified t) 1922 1923 (fontified t) 1923 1927 (fontified t) 1927 1929 (fontified t face font-lock-keyword-face) 1929 1942 (fontified t) 1942 1943 (fontified t) 1943 1949 (fontified t) 1949 1964 (fontified t) 1964 1965 (fontified t) 1965 1967 (fontified t) 1967 1968 (fontified t) 1968 1993 (fontified t) 1993 2002 (fontified t) 2002 2008 (fontified t face font-lock-keyword-face) 2008 2017 (fontified t) 2017 2023 (fontified t face font-lock-keyword-face) 2023 2030 (fontified t) 2030 2032 (fontified t face font-lock-type-face) 2032 2033 (fontified t c-type c-decl-id-start face font-lock-type-face) 2033 2034 (fontified t) 2034 2049 (fontified t face font-lock-function-name-face) 2049 2050 (fontified t) 2050 2052 (fontified t) 2052 2058 (fontified t) 2058 2079 (fontified t face font-lock-type-face) 2079 2080 (fontified t c-type c-decl-id-start face font-lock-type-face) 2080 2081 (fontified t) 2081 2086 (fontified t face font-lock-variable-name-face) 2086 2131 (fontified t) 2131 2147 (fontified t) 2147 2148 (fontified t) 2148 2177 (fontified t) 2177 2189 (ws-butler-chg chg fontified t) 2189 2190 (fontified t) 2190 2200 (fontified t) 2200 2205 (fontified t) 2205 2207 (fontified t face font-lock-keyword-face) 2207 2234 (fontified t) 2234 2263 (fontified t) 2263 2272 (fontified t) 2272 2278 (fontified t face font-lock-keyword-face) 2278 2284 (fontified t) 2284 2286 (fontified t) 2286 2288 (face font-lock-keyword-face fontified t) 2288 2342 (fontified t) 2342 2352 (fontified t) 2352 2353 (fontified t) 2353 2361 (fontified t) 2361 2367 (fontified t face font-lock-keyword-face) 2367 2376 (fontified t) 2376 2382 (fontified t face font-lock-keyword-face) 2382 2389 (fontified t) 2389 2391 (fontified t face font-lock-type-face) 2391 2392 (fontified t c-type c-decl-id-start face font-lock-type-face) 2392 2393 (fontified t) 2393 2405 (fontified t face font-lock-function-name-face) 2405 2408 (fontified t face font-lock-function-name-face) 2408 2410 (fontified t) 2410 2417 (fontified t) 2417 2431 (fontified t face font-lock-type-face) 2431 2438 (fontified t face font-lock-type-face) 2438 2439 (fontified t c-type c-decl-id-start face font-lock-type-face) 2439 2440 (fontified t) 2440 2445 (fontified t face font-lock-variable-name-face) 2445 2447 (fontified t) 2447 2489 (fontified t) 2489 2493 (fontified t) 2493 2501 (fontified t) 2501 2535 (fontified t) 2535 2547 (ws-butler-chg chg fontified t) 2547 2548 (fontified t) 2548 2558 (fontified t) 2558 2559 (fontified t) 2559 2563 (fontified t) 2563 2568 (fontified t face font-lock-keyword-face) 2568 2569 (fontified t face font-lock-keyword-face) 2569 2586 (fontified t) 2586 2588 (fontified t) 2588 2589 (ws-butler-chg chg fontified t) 2589 2590 (c-in-sws t c-is-sws t ws-butler-chg delete fontified t face font-lock-comment-delimiter-face) 2590 2592 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2592 2623 (c-in-sws t fontified t face font-lock-comment-face) 2623 2649 (c-in-sws t fontified t face font-lock-comment-face) 2649 2671 (c-in-sws t fontified t face font-lock-comment-face) 2671 2672 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2672 2674 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2674 2690 (c-in-sws t fontified t face font-lock-comment-face) 2690 2691 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 2691 2693 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2693 2700 (c-in-sws t fontified t face font-lock-comment-face) 2700 2771 (c-in-sws t fontified t face font-lock-comment-face) 2771 2772 (c-in-sws t fontified t face font-lock-comment-face) 2772 2773 (fontified t c-in-sws t) 2773 2774 (fontified t ws-butler-chg delete face font-lock-doc-face c-in-sws t) 2774 2777 (c-in-sws t fontified t face font-lock-doc-face) 2777 2784 (c-in-sws t fontified t face font-lock-doc-face) 2784 2786 (c-in-sws t fontified t face font-lock-doc-face) 2786 2831 (c-in-sws t fontified t face font-lock-doc-face) 2831 2833 (c-in-sws t fontified t face font-lock-doc-face) 2833 2834 (fontified t face font-lock-doc-face c-in-sws t) 2834 2835 (fontified t c-in-sws t) 2835 2836 (c-is-sws t fontified t face font-lock-type-face) 2836 2838 (fontified t face font-lock-type-face) 2838 2839 (fontified t c-type c-decl-id-start face font-lock-type-face) 2839 2840 (fontified t) 2840 2843 (fontified t face font-lock-function-name-face) 2843 2844 (fontified t face font-lock-function-name-face) 2844 2849 (fontified t face font-lock-function-name-face) 2849 2850 (fontified t c-type c-decl-arg-start) 2850 2860 (fontified t face font-lock-type-face) 2860 2861 (fontified t) 2861 2865 (fontified t face font-lock-variable-name-face) 2865 2866 (fontified t c-type c-decl-arg-start) 2866 2867 (fontified t) 2867 2871 (fontified t face font-lock-type-face) 2871 2873 (fontified t) 2873 2882 (fontified t face font-lock-variable-name-face) 2882 2883 (fontified t) 2883 2890 (fontified t) 2890 2893 (fontified t face font-lock-type-face) 2893 2894 (fontified t c-type c-decl-id-start face font-lock-type-face) 2894 2895 (fontified t) 2895 2900 (fontified t face font-lock-variable-name-face) 2900 2902 (fontified t) 2902 2903 (fontified t) 2903 2904 (fontified t face font-lock-negation-char-face) 2904 2930 (fontified t) 2930 2933 (fontified t face font-lock-type-face) 2933 2934 (fontified t c-type c-decl-id-start face font-lock-type-face) 2934 2935 (fontified t) 2935 2940 (fontified t face font-lock-variable-name-face) 2940 2950 (fontified t) 2950 2952 (fontified t) 2952 2953 (fontified t face font-lock-negation-char-face) 2953 2964 (fontified t) 2964 2978 (fontified t) 2978 2979 (fontified t) 2979 2980 (fontified t) 2980 2981 (fontified t) 2981 2986 (fontified t) 2986 2987 (fontified t) 2987 2991 (fontified t) 2991 2997 (fontified t face font-lock-keyword-face) 2997 3008 (fontified t) 3008 3014 (fontified t face font-lock-keyword-face) 3014 3015 (fontified t) 3015 3018 (fontified t face font-lock-type-face) 3018 3019 (fontified t c-type c-decl-id-start face font-lock-type-face) 3019 3020 (fontified t) 3020 3030 (fontified t face font-lock-variable-name-face) 3030 3032 (fontified t) 3032 3038 (fontified t face font-lock-keyword-face) 3038 3039 (fontified t) 3039 3042 (fontified t face font-lock-type-face) 3042 3043 (fontified t c-type c-decl-id-start face font-lock-type-face) 3043 3044 (fontified t) 3044 3052 (fontified t face font-lock-variable-name-face) 3052 3054 (fontified t) 3054 3060 (fontified t face font-lock-keyword-face) 3060 3061 (fontified t) 3061 3063 (fontified t face font-lock-type-face) 3063 3064 (fontified t face font-lock-type-face) 3064 3065 (fontified t c-type c-decl-id-start face font-lock-type-face) 3065 3066 (fontified t) 3066 3074 (fontified t face font-lock-variable-name-face) 3074 3076 (fontified t) 3076 3077 (fontified t) 3077 3078 (c-in-sws t c-is-sws t fontified t face font-lock-doc-face) 3078 3080 (c-in-sws t fontified t face font-lock-doc-face) 3080 3110 (c-in-sws t fontified t face font-lock-doc-face) 3110 3112 (c-in-sws t fontified t face font-lock-doc-face) 3112 3113 (fontified t c-in-sws t) 3113 3114 (c-is-sws t fontified t face font-lock-type-face) 3114 3116 (fontified t face font-lock-type-face) 3116 3117 (fontified t c-type c-decl-id-start face font-lock-type-face) 3117 3118 (fontified t) 3118 3129 (fontified t face font-lock-function-name-face) 3129 3133 (fontified t) 3133 3134 (fontified t ws-butler-chg chg) 3134 3136 (ws-butler-chg chg fontified t) 3136 3137 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3137 3138 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3138 3139 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3139 3140 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 3140 3141 (ws-butler-chg chg fontified t) 3141 3142 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3142 3143 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3143 3144 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3144 3145 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3145 3146 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3146 3147 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3147 3148 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3148 3149 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3149 3150 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3150 3151 (ws-butler-chg chg fontified t) 3151 3152 (ws-butler-chg chg fontified t) 3152 3153 (ws-butler-chg chg fontified t) 3153 3154 (ws-butler-chg chg fontified t) 3154 3162 (ws-butler-chg chg fontified t) 3162 3176 (ws-butler-chg chg fontified t) 3176 3177 (ws-butler-chg chg fontified t) 3177 3189 (ws-butler-chg chg fontified t) 3189 3190 (ws-butler-chg chg fontified t) 3190 3191 (ws-butler-chg chg fontified t rear-nonsticky t) 3191 3193 (ws-butler-chg chg fontified t) 3193 3194 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3194 3195 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3195 3196 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3196 3197 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 3197 3198 (ws-butler-chg chg fontified t) 3198 3199 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3199 3200 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3200 3201 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3201 3202 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3202 3203 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3203 3204 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3204 3205 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3205 3206 (ws-butler-chg delete fontified t) 3206 3207 (ws-butler-chg chg fontified t) 3207 3208 (ws-butler-chg chg fontified t) 3208 3209 (ws-butler-chg chg fontified t) 3209 3217 (ws-butler-chg chg fontified t) 3217 3228 (ws-butler-chg chg fontified t) 3228 3229 (ws-butler-chg chg fontified t) 3229 3230 (ws-butler-chg delete fontified t) 3230 3238 (ws-butler-chg chg fontified t) 3238 3239 (ws-butler-chg chg fontified t) 3239 3240 (ws-butler-chg delete fontified t) 3240 3241 (ws-butler-chg chg fontified t) 3241 3242 (ws-butler-chg chg rear-nonsticky t fontified t) 3242 3244 (ws-butler-chg chg fontified t) 3244 3245 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3245 3246 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3246 3247 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3247 3248 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 3248 3249 (ws-butler-chg chg fontified t) 3249 3250 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3250 3251 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3251 3252 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3252 3253 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3253 3254 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3254 3255 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3255 3256 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3256 3257 (ws-butler-chg delete fontified t) 3257 3258 (ws-butler-chg chg fontified t) 3258 3259 (ws-butler-chg chg fontified t) 3259 3260 (ws-butler-chg chg fontified t) 3260 3268 (ws-butler-chg chg fontified t) 3268 3279 (ws-butler-chg chg fontified t) 3279 3280 (ws-butler-chg chg fontified t) 3280 3281 (ws-butler-chg delete fontified t) 3281 3289 (ws-butler-chg chg fontified t) 3289 3290 (ws-butler-chg chg fontified t) 3290 3291 (ws-butler-chg delete fontified t) 3291 3292 (ws-butler-chg chg fontified t) 3292 3293 (ws-butler-chg chg rear-nonsticky t fontified t) 3293 3294 (fontified t ws-butler-chg chg) 3294 3296 (fontified t ws-butler-chg chg) 3296 3297 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3297 3298 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3298 3299 (fontified t ws-butler-chg chg) 3299 3300 (fontified t ws-butler-chg chg) 3300 3301 (fontified t ws-butler-chg chg) 3301 3302 (fontified t ws-butler-chg chg) 3302 3303 (fontified t ws-butler-chg chg) 3303 3304 (fontified t ws-butler-chg chg) 3304 3305 (fontified t ws-butler-chg chg) 3305 3306 (fontified t ws-butler-chg chg) 3306 3307 (fontified t ws-butler-chg chg) 3307 3308 (fontified t ws-butler-chg chg) 3308 3309 (fontified t ws-butler-chg chg) 3309 3310 (fontified t ws-butler-chg chg) 3310 3311 (fontified t ws-butler-chg chg) 3311 3315 (fontified t ws-butler-chg chg) 3315 3316 (ws-butler-chg delete fontified t face font-lock-constant-face) 3316 3317 (ws-butler-chg chg fontified t face font-lock-constant-face) 3317 3318 (ws-butler-chg chg fontified t face font-lock-constant-face) 3318 3319 (ws-butler-chg chg fontified t face font-lock-constant-face) 3319 3320 (ws-butler-chg chg fontified t face font-lock-constant-face) 3320 3321 (ws-butler-chg chg fontified t face font-lock-constant-face) 3321 3322 (ws-butler-chg chg fontified t face font-lock-constant-face) 3322 3323 (ws-butler-chg chg fontified t face font-lock-constant-face) 3323 3324 (ws-butler-chg chg fontified t face font-lock-constant-face) 3324 3325 (ws-butler-chg chg fontified t face font-lock-constant-face) 3325 3326 (ws-butler-chg chg fontified t) 3326 3327 (ws-butler-chg chg fontified t) 3327 3328 (ws-butler-chg chg fontified t) 3328 3329 (ws-butler-chg chg fontified t) 3329 3330 (ws-butler-chg chg fontified t) 3330 3331 (ws-butler-chg chg fontified t) 3331 3332 (ws-butler-chg chg fontified t) 3332 3333 (ws-butler-chg chg fontified t) 3333 3334 (ws-butler-chg chg fontified t) 3334 3335 (ws-butler-chg chg fontified t) 3335 3336 (ws-butler-chg chg fontified t) 3336 3337 (ws-butler-chg chg fontified t) 3337 3338 (ws-butler-chg chg fontified t) 3338 3339 (ws-butler-chg chg fontified t) 3339 3340 (ws-butler-chg chg fontified t) 3340 3341 (ws-butler-chg chg fontified t) 3341 3342 (ws-butler-chg chg fontified t) 3342 3343 (ws-butler-chg chg fontified t) 3343 3344 (ws-butler-chg chg fontified t) 3344 3345 (ws-butler-chg chg fontified t) 3345 3346 (ws-butler-chg chg fontified t face font-lock-constant-face) 3346 3347 (ws-butler-chg chg fontified t face font-lock-constant-face) 3347 3348 (ws-butler-chg chg fontified t face font-lock-constant-face) 3348 3349 (ws-butler-chg chg fontified t face font-lock-constant-face) 3349 3350 (ws-butler-chg chg fontified t face font-lock-constant-face) 3350 3351 (ws-butler-chg chg fontified t face font-lock-constant-face) 3351 3352 (ws-butler-chg chg fontified t face font-lock-constant-face) 3352 3353 (ws-butler-chg chg fontified t face font-lock-constant-face) 3353 3354 (ws-butler-chg chg fontified t face font-lock-constant-face) 3354 3355 (ws-butler-chg chg fontified t) 3355 3356 (ws-butler-chg chg fontified t) 3356 3357 (ws-butler-chg chg fontified t) 3357 3358 (ws-butler-chg chg fontified t) 3358 3359 (ws-butler-chg chg fontified t) 3359 3360 (ws-butler-chg chg fontified t) 3360 3361 (ws-butler-chg chg fontified t) 3361 3362 (ws-butler-chg chg fontified t) 3362 3363 (ws-butler-chg chg fontified t) 3363 3364 (ws-butler-chg chg fontified t) 3364 3365 (ws-butler-chg chg fontified t) 3365 3366 (ws-butler-chg chg fontified t) 3366 3367 (ws-butler-chg chg fontified t) 3367 3368 (ws-butler-chg chg rear-nonsticky t fontified t) 3368 3369 (ws-butler-chg delete fontified t) 3369 3371 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t) 3371 3372 (c-in-sws t c-is-sws t fontified t ws-butler-chg delete face font-lock-comment-delimiter-face) 3372 3374 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3374 3405 (c-in-sws t fontified t face font-lock-comment-face) 3405 3406 (c-in-sws t fontified t face font-lock-comment-face) 3406 3418 (c-in-sws t fontified t face font-lock-comment-face) 3418 3419 (fontified t face font-lock-comment-face c-in-sws t) 3419 3420 (fontified t c-is-sws t c-in-sws t ws-butler-chg chg) 3420 3421 (fontified t c-is-sws t c-in-sws t ws-butler-chg chg) 3421 3422 (c-is-sws t fontified t ws-butler-chg delete face font-lock-type-face) 3422 3434 (fontified t face font-lock-type-face) 3434 3442 (fontified t face font-lock-type-face) 3442 3443 (fontified t c-type c-decl-id-start face font-lock-type-face) 3443 3444 (fontified t) 3444 3449 (fontified t face font-lock-variable-name-face) 3449 3451 (fontified t) 3451 3492 (fontified t) 3492 3494 (fontified t ws-butler-chg chg) 3494 3495 (fontified t ws-butler-chg delete face font-lock-keyword-face) 3495 3496 (fontified t face font-lock-keyword-face) 3496 3504 (fontified t) 3504 3512 (fontified t) 3512 3525 (ws-butler-chg chg fontified t) 3525 3526 (fontified t) 3526 3558 (fontified t) 3558 3570 (fontified t) 3570 3576 (fontified t) 3576 3582 (ws-butler-chg chg fontified t) 3582 3583 (ws-butler-chg delete fontified t face font-lock-type-face) 3583 3584 (fontified t face font-lock-type-face) 3584 3585 (fontified t c-type c-decl-id-start face font-lock-type-face) 3585 3586 (fontified t) 3586 3589 (fontified t face font-lock-variable-name-face) 3589 3626 (fontified t) 3626 3627 (fontified t ws-butler-chg delete) 3627 3634 (fontified t) 3634 3635 (fontified t) 3635 3637 (fontified t face font-lock-keyword-face) 3637 3650 (fontified t) 3650 3651 (ws-butler-chg chg fontified t) 3651 3661 (ws-butler-chg chg fontified t) 3661 3662 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3662 3663 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3663 3664 (ws-butler-chg chg fontified t) 3664 3665 (ws-butler-chg chg fontified t) 3665 3666 (ws-butler-chg chg fontified t face font-lock-constant-face) 3666 3667 (ws-butler-chg chg fontified t face font-lock-constant-face) 3667 3668 (ws-butler-chg chg fontified t face font-lock-constant-face) 3668 3669 (ws-butler-chg chg fontified t face font-lock-constant-face) 3669 3670 (ws-butler-chg chg fontified t face font-lock-constant-face) 3670 3671 (ws-butler-chg chg fontified t face font-lock-constant-face) 3671 3672 (ws-butler-chg chg fontified t face font-lock-constant-face) 3672 3673 (ws-butler-chg chg fontified t face font-lock-constant-face) 3673 3674 (ws-butler-chg chg fontified t face font-lock-constant-face) 3674 3675 (ws-butler-chg chg fontified t face font-lock-constant-face) 3675 3676 (ws-butler-chg chg fontified t) 3676 3677 (ws-butler-chg chg fontified t) 3677 3678 (ws-butler-chg chg fontified t) 3678 3679 (ws-butler-chg chg fontified t) 3679 3680 (ws-butler-chg chg fontified t) 3680 3681 (ws-butler-chg chg fontified t) 3681 3682 (ws-butler-chg chg fontified t) 3682 3683 (ws-butler-chg chg fontified t) 3683 3684 (ws-butler-chg chg fontified t) 3684 3685 (ws-butler-chg chg fontified t) 3685 3697 (ws-butler-chg chg fontified t) 3697 3698 (ws-butler-chg chg fontified t face font-lock-constant-face) 3698 3699 (ws-butler-chg chg fontified t face font-lock-constant-face) 3699 3700 (ws-butler-chg chg fontified t face font-lock-constant-face) 3700 3701 (ws-butler-chg chg fontified t face font-lock-constant-face) 3701 3702 (ws-butler-chg chg fontified t face font-lock-constant-face) 3702 3703 (ws-butler-chg chg fontified t face font-lock-constant-face) 3703 3704 (ws-butler-chg chg fontified t face font-lock-constant-face) 3704 3705 (ws-butler-chg chg fontified t face font-lock-constant-face) 3705 3706 (ws-butler-chg chg fontified t face font-lock-constant-face) 3706 3707 (ws-butler-chg chg fontified t face font-lock-constant-face) 3707 3708 (ws-butler-chg chg fontified t) 3708 3709 (ws-butler-chg chg fontified t) 3709 3710 (ws-butler-chg chg fontified t) 3710 3711 (ws-butler-chg chg fontified t) 3711 3712 (ws-butler-chg chg fontified t) 3712 3713 (ws-butler-chg chg fontified t) 3713 3714 (ws-butler-chg chg fontified t) 3714 3715 (ws-butler-chg chg fontified t) 3715 3716 (ws-butler-chg chg fontified t) 3716 3717 (ws-butler-chg chg fontified t) 3717 3718 (ws-butler-chg chg fontified t) 3718 3719 (ws-butler-chg chg fontified t) 3719 3720 (ws-butler-chg chg fontified t) 3720 3721 (ws-butler-chg chg fontified t) 3721 3722 (ws-butler-chg chg fontified t) 3722 3723 (ws-butler-chg chg fontified t) 3723 3724 (ws-butler-chg chg fontified t) 3724 3725 (ws-butler-chg chg fontified t) 3725 3726 (ws-butler-chg chg fontified t) 3726 3727 (ws-butler-chg chg fontified t) 3727 3728 (ws-butler-chg chg fontified t face font-lock-constant-face) 3728 3729 (ws-butler-chg chg fontified t face font-lock-constant-face) 3729 3730 (ws-butler-chg chg fontified t face font-lock-constant-face) 3730 3731 (ws-butler-chg chg fontified t face font-lock-constant-face) 3731 3732 (ws-butler-chg chg fontified t face font-lock-constant-face) 3732 3733 (ws-butler-chg chg fontified t face font-lock-constant-face) 3733 3734 (ws-butler-chg chg fontified t face font-lock-constant-face) 3734 3735 (ws-butler-chg chg fontified t face font-lock-constant-face) 3735 3736 (ws-butler-chg chg fontified t face font-lock-constant-face) 3736 3737 (ws-butler-chg chg fontified t) 3737 3738 (ws-butler-chg chg fontified t) 3738 3739 (ws-butler-chg chg fontified t) 3739 3740 (ws-butler-chg chg fontified t) 3740 3741 (ws-butler-chg chg fontified t) 3741 3742 (ws-butler-chg chg fontified t) 3742 3743 (ws-butler-chg chg fontified t) 3743 3744 (ws-butler-chg chg fontified t) 3744 3745 (ws-butler-chg chg fontified t) 3745 3746 (ws-butler-chg chg fontified t) 3746 3747 (ws-butler-chg chg fontified t) 3747 3748 (ws-butler-chg chg fontified t) 3748 3749 (ws-butler-chg chg fontified t) 3749 3750 (ws-butler-chg chg rear-nonsticky t fontified t) 3750 3751 (ws-butler-chg delete fontified t) 3751 3760 (ws-butler-chg chg fontified t) 3760 3761 (ws-butler-chg delete fontified t) 3761 3762 (ws-butler-chg chg fontified t) 3762 3766 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3766 3767 (ws-butler-chg chg fontified t) 3767 3768 (ws-butler-chg chg fontified t) 3768 3769 (ws-butler-chg chg fontified t) 3769 3779 (ws-butler-chg chg fontified t) 3779 3780 (ws-butler-chg delete fontified t) 3780 3781 (ws-butler-chg delete fontified t) 3781 3782 (fontified t) 3782 3783 (fontified t ws-butler-chg delete) 3783 3784 (fontified t) 3784 3786 (fontified t)) . 742) (undo-tree-id266 . -521) (undo-tree-id267 . -527) (undo-tree-id268 . -3076) (undo-tree-id269 . -3685) (undo-tree-id270 . -3311) (undo-tree-id271 . -1317) (undo-tree-id272 . -1784) (undo-tree-id273 . -2028) (undo-tree-id274 . -1809) (undo-tree-id275 . -1839) (undo-tree-id276 . -2030) (undo-tree-id277 . -2387) (undo-tree-id278 . -2389) (undo-tree-id279 . -2587) (undo-tree-id280 . -2835) (undo-tree-id281 . -3006) (undo-tree-id282 . -2850) (undo-tree-id283 . -2866) (undo-tree-id284 . -2867) (undo-tree-id285 . -2883) (undo-tree-id286 . -3008) (undo-tree-id287 . -3031) (undo-tree-id288 . -3032) (undo-tree-id289 . -3053) (undo-tree-id290 . -3054) (undo-tree-id291 . -3075) (undo-tree-id292 . -1809) (undo-tree-id293 . -1505) (undo-tree-id294 . -1416) (undo-tree-id295 . -1701) (undo-tree-id296 . -3369) (undo-tree-id297 . -3134) (undo-tree-id298 . -3191) (undo-tree-id299 . -3242) (undo-tree-id300 . -3311) (undo-tree-id301 . -3685) (undo-tree-id302 . -3311) (undo-tree-id303 . -3113) (undo-tree-id304 . -3782) (undo-tree-id305 . -3782) (undo-tree-id306 . -3076) (undo-tree-id307 . -3076) (undo-tree-id308 . -3782) (undo-tree-id309 . -3782)) nil (25139 18474 625642 648000) 0 nil])
([nil nil ((4400 . 4409) (t 25139 18474 636326 776000)) nil (25139 18485 164564 347000) 0 nil])
([nil nil ((#("        " 0 8 (ws-butler-chg chg fontified t)) . 4401) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) 4409) nil (25139 18485 164548 747000) 0 nil])
([nil nil ((4324 . 4333) (t 25139 18485 176326 378000)) nil (25139 18541 896599 42000) 0 nil])
([nil nil ((4333 . 4336)) nil (25139 18541 896586 141000) 0 nil])
([nil nil ((4336 . 4337)) nil (25139 18541 896573 442000) 0 nil])
([nil nil ((4337 . 4340)) nil (25139 18541 896560 442000) 0 nil])
([nil nil ((4340 . 4341)) nil (25139 18541 896547 642000) 0 nil])
([nil nil ((4341 . 4342)) nil (25139 18541 896534 941000) 0 nil])
([nil nil ((4342 . 4343)) nil (25139 18541 896522 341000) 0 nil])
([nil nil ((4344 . 4354) (#("        " 0 8 (ws-butler-chg chg fontified t)) . 4344)) nil (25139 18541 896508 541000) 0 nil])
([nil nil ((4406 . 4415)) nil (25139 18541 896495 642000) 0 nil])
([nil nil ((4415 . 4419)) nil (25139 18541 896482 942000) 0 nil])
([nil nil ((4419 . 4420) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -4419) (4419 . 4421) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 4419) (undo-tree-id340 . -4) (4415 . 4419) 4419) nil (25139 18541 896469 41000) 0 nil])
([nil nil ((#("          MenuSystem::instance.on_event(MenuEvent::PressQuad);
" 0 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg delete fontified t face font-lock-constant-face) 11 20 (ws-butler-chg chg fontified t face font-lock-constant-face) 20 22 (ws-butler-chg chg fontified t) 22 30 (ws-butler-chg chg fontified t) 30 40 (ws-butler-chg chg fontified t) 40 49 (ws-butler-chg chg fontified t face font-lock-constant-face) 49 62 (ws-butler-chg chg fontified t) 62 63 (ws-butler-chg chg fontified t)) . 4344)) nil (25139 18541 896451 841000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4406 . 4407) (nil fontified nil 4406 . 4407) (nil fontified nil 4393 . 4406) (nil fontified nil 4384 . 4393) (nil fontified nil 4374 . 4384) (nil fontified nil 4366 . 4374) (nil fontified nil 4364 . 4366) (nil fontified nil 4355 . 4364) (nil fontified nil 4354 . 4355) (nil fontified nil 4344 . 4354) (4344 . 4407)) nil (25139 18541 896438 241000) 0 nil])
([nil nil ((4324 . 4333)) nil (25139 18541 896422 741000) 0 nil])
([nil nil ((4333 . 4334)) nil (25139 18541 896410 242000) 0 nil])
([nil nil ((4334 . 4347)) nil (25139 18541 896397 541000) 0 nil])
([nil nil ((4347 . 4348)) nil (25139 18541 896385 41000) 0 nil])
([nil nil ((4348 . 4358)) nil (25139 18541 896372 142000) 0 nil])
([nil nil ((#("W" 0 1 (ws-butler-chg chg fontified t)) . -4357) (undo-tree-id339 . -1) 4358) nil (25139 18541 896358 542000) 0 nil])
([nil nil ((4357 . 4363)) nil (25139 18541 896342 542000) 0 nil])
([nil nil ((#("L" 0 1 (ws-butler-chg chg fontified t)) . -4361) (undo-tree-id337 . -1) (#("L" 0 1 (ws-butler-chg chg fontified t)) . -4362) (undo-tree-id338 . -1) 4363) nil (25139 18541 896328 941000) 0 nil])
([nil nil ((4361 . 4363)) nil (25139 18541 896311 442000) 0 nil])
([nil nil ((4363 . 4365)) nil (25139 18541 896298 741000) 0 nil])
([nil nil ((4365 . 4366)) nil (25139 18541 896286 142000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -4365) (undo-tree-id336 . -1) 4366) nil (25139 18541 896273 142000) 0 nil])
([nil nil ((4365 . 4366)) nil (25139 18541 896257 341000) 0 nil])
([nil nil ((4366 . 4367)) nil (25139 18541 896244 741000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -4365) (undo-tree-id334 . -1) (#(":" 0 1 (ws-butler-chg chg fontified t)) . -4366) (undo-tree-id335 . -1) 4367) nil (25139 18541 896231 441000) 0 nil])
([nil nil ((4365 . 4366)) nil (25139 18541 896211 242000) 0 nil])
([nil nil ((#("U" 0 1 (ws-butler-chg chg fontified t)) . -4363) (undo-tree-id331 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t)) . -4364) (undo-tree-id332 . -1) (#(":" 0 1 (ws-butler-chg chg fontified t)) . -4365) (undo-tree-id333 . -1) 4366) nil (25139 18541 896189 342000) 0 nil])
([nil nil ((4363 . 4365)) nil (25139 18541 896170 641000) 0 nil])
([nil nil ((4365 . 4366)) nil (25139 18541 896157 742000) 0 nil])
([nil nil ((#(":" 0 1 (ws-butler-chg chg fontified t)) . -4363) (undo-tree-id328 . -1) (#(":" 0 1 (ws-butler-chg chg fontified t)) . -4364) (undo-tree-id329 . -1) (#("D" 0 1 (ws-butler-chg chg fontified t)) . -4365) (undo-tree-id330 . -1) 4366) nil (25139 18541 896143 942000) 0 nil])
([nil nil ((4363 . 4370)) nil (25139 18541 896125 641000) 0 nil])
([nil nil ((#("L" 0 1 (ws-butler-chg chg fontified t)) . -4368) (undo-tree-id326 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4369) (undo-tree-id327 . -1) 4370) nil (25139 18541 896112 441000) 0 nil])
([nil nil ((4368 . 4369)) nil (25139 18541 896095 341000) 0 nil])
([nil nil ((4369 . 4374)) nil (25139 18541 896082 541000) 0 nil])
([nil nil ((4370 . 4379) (#("Menu" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t)) . -4370) (undo-tree-id325 . -4) 4374) nil (25139 18541 896069 141000) 0 nil])
([nil nil ((4379 . 4380)) nil (25139 18541 896053 41000) 0 nil])
([nil nil ((4380 . 4381)) nil (25139 18541 896040 541000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t ws-butler-chg chg)) . -4380) (undo-tree-id324 . -1) 4381) nil (25139 18541 896027 542000) 0 nil])
([nil nil ((4380 . 4381)) nil (25139 18541 896011 742000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t ws-butler-chg chg)) . -4380) (undo-tree-id323 . -1) 4381) nil (25139 18541 895998 241000) 0 nil])
([nil nil ((4380 . 4381)) nil (25139 18541 895976 141000) 0 nil])
([nil nil ((4381 . 4383)) nil (25139 18541 895963 641000) 0 nil])
([nil nil ((4383 . 4384)) nil (25139 18541 895950 742000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 4479) 4384) nil (25139 18541 895933 741000) 0 nil])
([nil nil ((#("        if (dir>0)
" 0 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-keyword-face) 9 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t)) . 4385) (undo-tree-id341 . -19) (undo-tree-id342 . -19) (t 25139 18541 906324 217000)) nil (25139 18547 400055 676000) 0 nil])
([nil nil ((4385 . 4393) (#("          " 0 1 (ws-butler-chg delete fontified t) 1 10 (ws-butler-chg chg fontified t)) . 4385)) nil (25139 18561 883501 569000) 0 nil] [nil nil ((#("          MenuSystem::instance.on_event(MenuEvent::PressQuad);
" 0 1 (ws-butler-chg delete fontified t) 1 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t face font-lock-constant-face) 11 20 (ws-butler-chg chg fontified t face font-lock-constant-face) 20 22 (ws-butler-chg chg fontified t) 22 30 (ws-butler-chg chg fontified t) 30 40 (ws-butler-chg chg fontified t) 40 49 (ws-butler-chg chg fontified t face font-lock-constant-face) 49 62 (ws-butler-chg chg fontified t) 62 63 (ws-butler-chg chg rear-nonsticky t fontified t)) . 4385)) ((nil ws-butler-chg delete 4448 . 4449) (4385 . 4448)) (25139 18547 398943 175000) 0 nil])
([nil nil ((4423 . 4424)) nil (25139 18561 883488 769000) 0 nil])
nil
([nil nil ((4424 . 4426)) nil (25139 18561 883476 269000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("u" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("Q" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("s" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("s" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("e" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("r" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("P" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#(":" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#(":" 0 1 (ws-butler-chg delete fontified t)) . 4426) (#("t" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 4426) (#("n" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 4426) (#("e" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 4426) (#("v" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 4426) (#("E" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 4426) (#("u" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 4426) (#("n" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 4426) (#("e" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 4426) (#("M" 0 1 (ws-butler-chg chg fontified t face font-lock-constant-face)) . 4426)) nil (25139 18561 883458 869000) 0 nil])
([nil nil ((#("        MenuSystem::instance.on_event(evt);
" 0 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg delete fontified t face font-lock-constant-face) 9 18 (ws-butler-chg chg fontified t face font-lock-constant-face) 18 20 (ws-butler-chg chg fontified t) 20 28 (ws-butler-chg chg fontified t) 28 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg delete fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (ws-butler-chg chg rear-nonsticky t fontified t)) . 4385) (undo-tree-id345 . -41) (undo-tree-id346 . -41)) nil (25139 18561 883440 869000) 0 nil])
([nil nil ((nil fontified nil 4428 . 4429) (nil fontified nil 4427 . 4428) (nil fontified nil 4426 . 4427) (nil fontified nil 4425 . 4426) (nil fontified nil 4424 . 4425) (nil fontified nil 4423 . 4424) (nil fontified nil 4413 . 4423) (nil fontified nil 4405 . 4413) (nil fontified nil 4403 . 4405) (nil fontified nil 4394 . 4403) (nil fontified nil 4393 . 4394) (nil fontified nil 4385 . 4393) (4385 . 4429)) nil (25139 18561 883423 770000) 0 nil])
([nil nil ((#("        else
" 0 1 (fontified t ws-butler-chg delete) 1 8 (ws-butler-chg chg fontified t) 8 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 13 (ws-butler-chg delete fontified t)) . 4429) (undo-tree-id343 . -13) (undo-tree-id344 . -13)) nil (25139 18561 883405 169000) 0 nil])
([nil nil ((#("        auto evt = dir>0 ? MenuEvent::Down : MenuEvent::Up;
" 0 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-keyword-face) 9 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 11 (ws-butler-chg chg fontified t face font-lock-keyword-face) 11 12 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t face font-lock-constant-face) 28 29 (ws-butler-chg chg fontified t face font-lock-constant-face) 29 30 (ws-butler-chg chg fontified t face font-lock-constant-face) 30 31 (ws-butler-chg chg fontified t face font-lock-constant-face) 31 32 (ws-butler-chg chg fontified t face font-lock-constant-face) 32 33 (ws-butler-chg chg fontified t face font-lock-constant-face) 33 34 (ws-butler-chg chg fontified t face font-lock-constant-face) 34 35 (ws-butler-chg chg fontified t face font-lock-constant-face) 35 36 (ws-butler-chg chg fontified t face font-lock-constant-face) 36 37 (ws-butler-chg chg fontified t) 37 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg chg fontified t) 45 54 (fontified t ws-butler-chg chg face font-lock-constant-face) 54 55 (fontified t ws-butler-chg chg) 55 56 (fontified t ws-butler-chg chg) 56 57 (fontified t ws-butler-chg chg) 57 58 (fontified t ws-butler-chg chg) 58 59 (fontified t ws-butler-chg chg) 59 60 (ws-butler-chg delete fontified t)) . 4325) (undo-tree-id357 . -60) (undo-tree-id358 . -60) (undo-tree-id359 . -60) (undo-tree-id360 . -60) (t 25139 18561 892990 122000)) nil (25139 18568 352622 355000) 0 nil])
([nil nil ((#("        MenuSystem::instance.on_event(evt);
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-constant-face) 9 18 (ws-butler-chg chg fontified t face font-lock-constant-face) 18 20 (ws-butler-chg chg fontified t) 20 28 (ws-butler-chg chg fontified t) 28 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (ws-butler-chg chg rear-nonsticky t fontified t)) . 4325) (undo-tree-id351 . -44) (undo-tree-id352 . -44) (undo-tree-id353 . -44) (undo-tree-id354 . -44) (undo-tree-id355 . -44) (undo-tree-id356 . -44)) nil (25139 18568 352602 956000) 0 nil])
([nil nil ((nil fontified nil 4428 . 4429) (nil fontified nil 4427 . 4428) (nil fontified nil 4426 . 4427) (nil fontified nil 4425 . 4426) (nil fontified nil 4424 . 4425) (nil fontified nil 4423 . 4424) (nil fontified nil 4413 . 4423) (nil fontified nil 4405 . 4413) (nil fontified nil 4403 . 4405) (nil fontified nil 4394 . 4403) (nil fontified nil 4393 . 4394) (nil fontified nil 4386 . 4393) (nil fontified nil 4385 . 4386) (nil fontified nil 4384 . 4385) (nil fontified nil 4383 . 4384) (nil fontified nil 4382 . 4383) (nil fontified nil 4381 . 4382) (nil fontified nil 4380 . 4381) (nil fontified nil 4379 . 4380) (nil fontified nil 4370 . 4379) (nil fontified nil 4369 . 4370) (nil fontified nil 4368 . 4369) (nil fontified nil 4367 . 4368) (nil fontified nil 4366 . 4367) (nil fontified nil 4365 . 4366) (nil fontified nil 4364 . 4365) (nil fontified nil 4363 . 4364) (nil fontified nil 4362 . 4363) (nil fontified nil 4361 . 4362) (nil fontified nil 4360 . 4361) (nil fontified nil 4359 . 4360) (nil fontified nil 4358 . 4359) (nil fontified nil 4357 . 4358) (nil fontified nil 4356 . 4357) (nil fontified nil 4355 . 4356) (nil fontified nil 4354 . 4355) (nil fontified nil 4353 . 4354) (nil fontified nil 4352 . 4353) (nil fontified nil 4351 . 4352) (nil fontified nil 4350 . 4351) (nil fontified nil 4349 . 4350) (nil fontified nil 4348 . 4349) (nil fontified nil 4347 . 4348) (nil fontified nil 4346 . 4347) (nil fontified nil 4345 . 4346) (nil fontified nil 4344 . 4345) (nil fontified nil 4343 . 4344) (nil fontified nil 4342 . 4343) (nil fontified nil 4341 . 4342) (nil fontified nil 4340 . 4341) (nil fontified nil 4339 . 4340) (nil fontified nil 4338 . 4339) (nil fontified nil 4337 . 4338) (nil fontified nil 4336 . 4337) (nil fontified nil 4335 . 4336) (nil fontified nil 4334 . 4335) (nil fontified nil 4333 . 4334) (nil fontified nil 4325 . 4333) (4325 . 4429)) nil (25139 18568 352578 155000) 0 nil])
([nil nil ((nil fontified nil 4547 . 4548) (nil fontified nil 4546 . 4547) (nil fontified nil 4545 . 4546) (nil fontified nil 4544 . 4545) (nil fontified nil 4543 . 4544) (nil fontified nil 4542 . 4543) (nil fontified nil 4532 . 4542) (nil fontified nil 4524 . 4532) (nil fontified nil 4522 . 4524) (nil fontified nil 4513 . 4522) (nil fontified nil 4512 . 4513) (nil fontified nil 4505 . 4512) (nil fontified nil 4504 . 4505) (nil fontified nil 4503 . 4504) (nil fontified nil 4502 . 4503) (nil fontified nil 4501 . 4502) (nil fontified nil 4500 . 4501) (nil fontified nil 4499 . 4500) (nil fontified nil 4498 . 4499) (nil fontified nil 4489 . 4498) (nil fontified nil 4488 . 4489) (nil fontified nil 4487 . 4488) (nil fontified nil 4486 . 4487) (nil fontified nil 4485 . 4486) (nil fontified nil 4484 . 4485) (nil fontified nil 4483 . 4484) (nil fontified nil 4482 . 4483) (nil fontified nil 4481 . 4482) (nil fontified nil 4480 . 4481) (nil fontified nil 4479 . 4480) (nil fontified nil 4478 . 4479) (nil fontified nil 4477 . 4478) (nil fontified nil 4476 . 4477) (nil fontified nil 4475 . 4476) (nil fontified nil 4474 . 4475) (nil fontified nil 4473 . 4474) (nil fontified nil 4472 . 4473) (nil fontified nil 4471 . 4472) (nil fontified nil 4470 . 4471) (nil fontified nil 4469 . 4470) (nil fontified nil 4468 . 4469) (nil fontified nil 4467 . 4468) (nil fontified nil 4466 . 4467) (nil fontified nil 4465 . 4466) (nil fontified nil 4464 . 4465) (nil fontified nil 4463 . 4464) (nil fontified nil 4462 . 4463) (nil fontified nil 4461 . 4462) (nil fontified nil 4460 . 4461) (nil fontified nil 4459 . 4460) (nil fontified nil 4458 . 4459) (nil fontified nil 4457 . 4458) (nil fontified nil 4456 . 4457) (nil fontified nil 4455 . 4456) (nil fontified nil 4454 . 4455) (nil fontified nil 4453 . 4454) (nil fontified nil 4452 . 4453) (nil fontified nil 4444 . 4452) (4444 . 4548)) nil (25139 18568 352549 756000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t ws-butler-chg chg fontified t)) . -4547) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) 4548) nil (25139 18568 352520 456000) 0 nil])
([nil nil ((#("float g_speed = 1;
" 0 1 (fontified t c-is-sws t face font-lock-type-face) 1 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t) 6 13 (fontified t face font-lock-variable-name-face) 13 19 (fontified t)) . 446) (undo-tree-id364 . -18) (undo-tree-id365 . -19) (t 25139 18568 362989 882000)) nil (25139 18717 811391 901000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete c-is-sws t c-in-sws t)) . 446) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1)) nil (25139 18717 811371 701000) 0 nil])
([nil nil ((443 . 454) (t 25139 18717 826317 527000)) nil (25139 18725 565134 875000) 0 nil])
([nil nil ((727 . 738) (t 25139 18725 576317 230000)) nil (25139 18745 569905 609000) 0 nil])
([nil nil ((3778 . 3789)) nil (25139 18745 569892 909000) 0 nil])
([nil nil ((#("-" 0 1 (ws-butler-chg chg fontified t)) . -3788) (undo-tree-id366 . -1) (undo-tree-id367 . -1) 3789) nil (25139 18745 569879 409000) 0 nil])
([nil nil ((3788 . 3789)) nil (25139 18745 569849 909000) 0 nil])
([nil nil ((3498 . 3505) (t 25139 18745 586316 472000)) nil (25139 18856 130837 359000) 0 nil])
([nil nil ((3058 . 3065)) nil (25139 18856 130824 659000) 0 nil])
([nil nil ((2714 . 2721)) nil (25139 18856 130812 159000) 0 nil])
([nil nil ((2480 . 2487)) nil (25139 18856 130799 559000) 0 nil])
([nil nil ((#("/**
" 0 1 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t face font-lock-doc-face) 1 3 (ws-butler-chg chg c-in-sws t fontified t face font-lock-doc-face) 3 4 (ws-butler-chg chg c-in-sws t fontified t face font-lock-doc-face)) . 3760)) nil (25139 18856 130786 859000) 0 nil])
([nil nil ((#(" * Update menu every frame
" 0 1 (ws-butler-chg delete fontified t) 1 27 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130774 258000) 0 nil])
([nil nil ((#(" **/
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t)) . 3760)) nil (25139 18856 130761 559000) 0 nil])
([nil nil ((#("void menu_controller_update() {
" 0 1 (ws-butler-chg delete c-is-sws t fontified t face font-lock-type-face) 1 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t) 5 10 (ws-butler-chg chg fontified t face font-lock-function-name-face) 10 11 (ws-butler-chg chg fontified t face font-lock-function-name-face) 11 12 (ws-butler-chg chg fontified t face font-lock-function-name-face) 12 13 (ws-butler-chg chg fontified t face font-lock-function-name-face) 13 14 (ws-butler-chg chg fontified t face font-lock-function-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-function-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-function-name-face) 16 17 (ws-butler-chg chg fontified t face font-lock-function-name-face) 17 18 (ws-butler-chg chg fontified t face font-lock-function-name-face) 18 19 (ws-butler-chg chg fontified t face font-lock-function-name-face) 19 20 (ws-butler-chg chg fontified t face font-lock-function-name-face) 20 21 (ws-butler-chg chg fontified t face font-lock-function-name-face) 21 22 (ws-butler-chg delete fontified t face font-lock-function-name-face) 22 27 (ws-butler-chg chg fontified t face font-lock-function-name-face) 27 29 (ws-butler-chg chg fontified t) 29 32 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130748 959000) 0 nil])
([nil nil ((#("  auto press_rot = get_press(GP_BUTTON_ROT, button_rot);
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 6 7 (ws-butler-chg chg fontified t) 7 16 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 16 57 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130736 259000) 0 nil])
([nil nil ((#("  auto press_a = get_press(GP_BUTTON_A, button_a);
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 6 7 (ws-butler-chg chg fontified t) 7 14 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 14 51 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130723 459000) 0 nil])
([nil nil ((#("  auto press_b = get_press(GP_BUTTON_B, button_n);
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 6 7 (ws-butler-chg chg fontified t) 7 14 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 14 51 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130710 758000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 3760)) nil (25139 18856 130697 959000) 0 nil])
([nil nil ((#("  if (press_rot)
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 4 (ws-butler-chg chg fontified t face font-lock-keyword-face) 4 17 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130685 159000) 0 nil])
([nil nil ((#("    MenuSystem::instance.on_event(MenuEvent::PressQuad);
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 14 (ws-butler-chg chg fontified t face font-lock-constant-face) 14 20 (ws-butler-chg chg fontified t) 20 34 (ws-butler-chg chg fontified t) 34 43 (ws-butler-chg chg fontified t face font-lock-constant-face) 43 52 (ws-butler-chg chg fontified t) 52 55 (ws-butler-chg chg fontified t) 55 56 (ws-butler-chg chg fontified t) 56 57 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130672 559000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 3760)) nil (25139 18856 130659 859000) 0 nil])
([nil nil ((#("  // Wait for incoming events on the event queue.
" 0 1 (ws-butler-chg delete c-in-sws t c-is-sws t fontified t) 1 2 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 2 3 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3 5 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 14 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 14 49 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 49 50 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . 3760)) nil (25139 18856 130647 58000) 0 nil])
([nil nil ((#("  rotary_encoder_event_t event = {0, ROTARY_ENCODER_DIRECTION_NOT_SET };
" 0 1 (ws-butler-chg delete c-is-sws t c-in-sws t fontified t) 1 2 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 2 3 (ws-butler-chg chg c-is-sws t fontified t face font-lock-type-face) 3 23 (ws-butler-chg chg fontified t face font-lock-type-face) 23 24 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 24 25 (ws-butler-chg chg fontified t) 25 30 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 30 48 (ws-butler-chg chg fontified t) 48 71 (ws-butler-chg chg fontified t) 71 73 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130634 359000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 3760)) nil (25139 18856 130621 659000) 0 nil])
([nil nil ((#("  if (xQueueReceive(encoder_queue, &event, 1 / portTICK_PERIOD_MS) == pdTRUE) {
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 4 (ws-butler-chg chg fontified t face font-lock-keyword-face) 4 15 (ws-butler-chg chg fontified t) 15 66 (ws-butler-chg chg fontified t) 66 80 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130608 958000) 0 nil])
([nil nil ((#("    int dir = get_encoder_evt_dir(event.state);
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 6 (ws-butler-chg chg fontified t face font-lock-type-face) 6 7 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (ws-butler-chg chg fontified t) 8 11 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 11 35 (ws-butler-chg chg fontified t) 35 46 (ws-butler-chg chg fontified t) 46 48 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130596 259000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 3760)) nil (25139 18856 130583 458000) 0 nil])
([nil nil ((#("    if (dir != 0) {
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 9 (ws-butler-chg chg fontified t) 9 14 (ws-butler-chg chg fontified t) 14 20 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130570 758000) 0 nil])
([nil nil ((#("      if (MenuSystem::edit) {
" 0 1 (ws-butler-chg delete fontified t) 1 6 (ws-butler-chg chg fontified t) 6 8 (ws-butler-chg chg fontified t face font-lock-keyword-face) 8 10 (ws-butler-chg chg fontified t) 10 20 (ws-butler-chg chg fontified t face font-lock-constant-face) 20 29 (ws-butler-chg chg fontified t) 29 30 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130557 958000) 0 nil])
([nil nil ((#("        auto evt = dir>0 ? MenuEvent::Down : MenuEvent::Up;
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-keyword-face) 9 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 11 (ws-butler-chg chg fontified t face font-lock-keyword-face) 11 12 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t face font-lock-constant-face) 28 29 (ws-butler-chg chg fontified t face font-lock-constant-face) 29 30 (ws-butler-chg chg fontified t face font-lock-constant-face) 30 31 (ws-butler-chg chg fontified t face font-lock-constant-face) 31 32 (ws-butler-chg chg fontified t face font-lock-constant-face) 32 33 (ws-butler-chg chg fontified t face font-lock-constant-face) 33 34 (ws-butler-chg chg fontified t face font-lock-constant-face) 34 35 (ws-butler-chg chg fontified t face font-lock-constant-face) 35 36 (ws-butler-chg chg fontified t face font-lock-constant-face) 36 37 (ws-butler-chg chg fontified t) 37 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg chg fontified t) 45 54 (ws-butler-chg chg fontified t face font-lock-constant-face) 54 55 (ws-butler-chg chg fontified t) 55 56 (ws-butler-chg chg fontified t) 56 57 (ws-butler-chg chg fontified t) 57 58 (ws-butler-chg chg fontified t) 58 59 (ws-butler-chg chg fontified t) 59 60 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130534 759000) 0 nil])
([nil nil ((#("        MenuSystem::instance.on_event(evt);
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-constant-face) 9 18 (ws-butler-chg chg fontified t face font-lock-constant-face) 18 20 (ws-butler-chg chg fontified t) 20 28 (ws-butler-chg chg fontified t) 28 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (rear-nonsticky t ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130521 959000) 0 nil])
([nil nil ((#("      } else {
" 0 1 (ws-butler-chg delete fontified t) 1 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t)) . 3760) (undo-tree-id394 . -15)) nil (25139 18856 130509 59000) 0 nil])
([nil nil ((#("        auto evt = dir>0 ? MenuEvent::Down : MenuEvent::Up;
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-keyword-face) 9 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 11 (ws-butler-chg chg fontified t face font-lock-keyword-face) 11 12 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t face font-lock-constant-face) 28 29 (ws-butler-chg chg fontified t face font-lock-constant-face) 29 30 (ws-butler-chg chg fontified t face font-lock-constant-face) 30 31 (ws-butler-chg chg fontified t face font-lock-constant-face) 31 32 (ws-butler-chg chg fontified t face font-lock-constant-face) 32 33 (ws-butler-chg chg fontified t face font-lock-constant-face) 33 34 (ws-butler-chg chg fontified t face font-lock-constant-face) 34 35 (ws-butler-chg chg fontified t face font-lock-constant-face) 35 36 (ws-butler-chg chg fontified t face font-lock-constant-face) 36 37 (ws-butler-chg chg fontified t) 37 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg chg fontified t) 45 54 (ws-butler-chg chg fontified t face font-lock-constant-face) 54 55 (ws-butler-chg chg fontified t) 55 56 (ws-butler-chg chg fontified t) 56 57 (ws-butler-chg chg fontified t) 57 58 (ws-butler-chg chg fontified t) 58 59 (ws-butler-chg chg fontified t) 59 60 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130493 559000) 0 nil])
([nil nil ((#("        MenuSystem::instance.on_event(evt);
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t face font-lock-constant-face) 9 15 (ws-butler-chg chg fontified t face font-lock-constant-face) 15 18 (ws-butler-chg chg fontified t face font-lock-constant-face) 18 20 (ws-butler-chg chg fontified t) 20 28 (ws-butler-chg chg fontified t) 28 38 (ws-butler-chg chg fontified t) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (ws-butler-chg delete fontified t)) . 3760)) nil (25139 18856 130480 859000) 0 nil])
([nil nil ((#("      }
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130468 59000) 0 nil])
([nil nil ((#("    }
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 6 (ws-butler-chg chg fontified t)) . 3760)) nil (25139 18856 130454 859000) 0 nil])
([nil nil ((#("  }
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t)) . 3760)) nil (25139 18856 130442 158000) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 3760)) nil (25139 18856 130429 259000) 0 nil])
([nil nil ((2014 . 2015)) nil (25139 18856 130416 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2863 . 2864) (nil fontified nil 2863 . 2864) (nil fontified nil 2862 . 2863) (nil fontified nil 2859 . 2862) (nil fontified nil 2858 . 2859) (nil fontified nil 2854 . 2858) (nil fontified nil 2853 . 2854) (nil fontified nil 2852 . 2853) (nil fontified nil 2845 . 2852) (nil fontified nil 2844 . 2845) (nil fontified nil 2843 . 2844) (nil fontified nil 2842 . 2843) (nil fontified nil 2841 . 2842) (nil fontified nil 2840 . 2841) (nil fontified nil 2839 . 2840) (nil fontified nil 2838 . 2839) (nil fontified nil 2828 . 2838) (nil fontified nil 2820 . 2828) (nil fontified nil 2818 . 2820) (nil fontified nil 2815 . 2818) (nil fontified nil 2809 . 2815) (nil fontified nil 2808 . 2809) (nil fontified nil 2801 . 2808) (nil fontified nil 2800 . 2801) (nil fontified nil 2799 . 2800) (nil fontified nil 2798 . 2799) (nil fontified nil 2797 . 2798) (nil fontified nil 2796 . 2797) (nil fontified nil 2795 . 2796) (nil fontified nil 2794 . 2795) (nil fontified nil 2785 . 2794) (nil fontified nil 2784 . 2785) (nil fontified nil 2783 . 2784) (nil fontified nil 2782 . 2783) (nil fontified nil 2781 . 2782) (nil fontified nil 2780 . 2781) (nil fontified nil 2779 . 2780) (nil fontified nil 2778 . 2779) (nil fontified nil 2777 . 2778) (nil fontified nil 2776 . 2777) (nil fontified nil 2775 . 2776) (nil fontified nil 2774 . 2775) (nil fontified nil 2773 . 2774) (nil fontified nil 2772 . 2773) (nil fontified nil 2771 . 2772) (nil fontified nil 2770 . 2771) (nil fontified nil 2769 . 2770) (nil fontified nil 2768 . 2769) (nil fontified nil 2767 . 2768) (nil fontified nil 2766 . 2767) (nil fontified nil 2765 . 2766) (nil fontified nil 2764 . 2765) (nil fontified nil 2763 . 2764) (nil fontified nil 2762 . 2763) (nil fontified nil 2761 . 2762) (nil fontified nil 2760 . 2761) (nil fontified nil 2759 . 2760) (nil fontified nil 2758 . 2759) (nil fontified nil 2757 . 2758) (nil fontified nil 2756 . 2757) (nil fontified nil 2755 . 2756) (nil fontified nil 2754 . 2755) (nil fontified nil 2753 . 2754) (nil fontified nil 2752 . 2753) (nil fontified nil 2751 . 2752) (nil fontified nil 2750 . 2751) (nil fontified nil 2749 . 2750) (nil fontified nil 2748 . 2749) (nil fontified nil 2741 . 2748) (nil fontified nil 2740 . 2741) (nil fontified nil 2739 . 2740) (nil fontified nil 2737 . 2739) (nil fontified nil 2733 . 2737) (nil fontified nil 2732 . 2733) (nil fontified nil 2726 . 2732) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (nil fontified nil 2723 . 2724) (nil fontified nil 2722 . 2723) (nil fontified nil 2721 . 2722) (nil fontified nil 2720 . 2721) (nil fontified nil 2719 . 2720) (nil fontified nil 2709 . 2719) (nil fontified nil 2701 . 2709) (nil fontified nil 2699 . 2701) (nil fontified nil 2690 . 2699) (nil fontified nil 2689 . 2690) (nil fontified nil 2682 . 2689) (nil fontified nil 2681 . 2682) (nil fontified nil 2680 . 2681) (nil fontified nil 2679 . 2680) (nil fontified nil 2678 . 2679) (nil fontified nil 2677 . 2678) (nil fontified nil 2676 . 2677) (nil fontified nil 2675 . 2676) (nil fontified nil 2666 . 2675) (nil fontified nil 2665 . 2666) (nil fontified nil 2664 . 2665) (nil fontified nil 2663 . 2664) (nil fontified nil 2662 . 2663) (nil fontified nil 2661 . 2662) (nil fontified nil 2660 . 2661) (nil fontified nil 2659 . 2660) (nil fontified nil 2658 . 2659) (nil fontified nil 2657 . 2658) (nil fontified nil 2656 . 2657) (nil fontified nil 2655 . 2656) (nil fontified nil 2654 . 2655) (nil fontified nil 2653 . 2654) (nil fontified nil 2652 . 2653) (nil fontified nil 2651 . 2652) (nil fontified nil 2650 . 2651) (nil fontified nil 2649 . 2650) (nil fontified nil 2648 . 2649) (nil fontified nil 2647 . 2648) (nil fontified nil 2646 . 2647) (nil fontified nil 2645 . 2646) (nil fontified nil 2644 . 2645) (nil fontified nil 2643 . 2644) (nil fontified nil 2642 . 2643) (nil fontified nil 2641 . 2642) (nil fontified nil 2640 . 2641) (nil fontified nil 2639 . 2640) (nil fontified nil 2638 . 2639) (nil fontified nil 2637 . 2638) (nil fontified nil 2636 . 2637) (nil fontified nil 2635 . 2636) (nil fontified nil 2634 . 2635) (nil fontified nil 2633 . 2634) (nil fontified nil 2632 . 2633) (nil fontified nil 2631 . 2632) (nil fontified nil 2630 . 2631) (nil fontified nil 2629 . 2630) (nil fontified nil 2622 . 2629) (nil fontified nil 2621 . 2622) (nil fontified nil 2620 . 2621) (nil fontified nil 2611 . 2620) (nil fontified nil 2601 . 2611) (nil fontified nil 2599 . 2601) (nil fontified nil 2597 . 2599) (nil fontified nil 2592 . 2597) (nil fontified nil 2591 . 2592) (nil fontified nil 2585 . 2591) (nil fontified nil 2580 . 2585) (nil fontified nil 2577 . 2580) (nil fontified nil 2575 . 2577) (nil fontified nil 2572 . 2575) (nil fontified nil 2571 . 2572) (nil fontified nil 2570 . 2571) (nil fontified nil 2568 . 2570) (nil fontified nil 2557 . 2568) (nil fontified nil 2533 . 2557) (nil fontified nil 2530 . 2533) (nil fontified nil 2529 . 2530) (nil fontified nil 2528 . 2529) (nil fontified nil 2526 . 2528) (nil fontified nil 2523 . 2526) (nil fontified nil 2522 . 2523) (nil fontified nil 2508 . 2522) (nil fontified nil 2457 . 2508) (nil fontified nil 2446 . 2457) (nil fontified nil 2444 . 2446) (nil fontified nil 2443 . 2444) (nil fontified nil 2442 . 2443) (nil fontified nil 2441 . 2442) (nil fontified nil 2439 . 2441) (nil fontified nil 2416 . 2439) (nil fontified nil 2398 . 2416) (nil fontified nil 2393 . 2398) (nil fontified nil 2392 . 2393) (nil fontified nil 2391 . 2392) (nil fontified nil 2371 . 2391) (nil fontified nil 2370 . 2371) (nil fontified nil 2369 . 2370) (nil fontified nil 2368 . 2369) (nil fontified nil 2367 . 2368) (nil fontified nil 2332 . 2367) (nil fontified nil 2323 . 2332) (nil fontified nil 2321 . 2323) (nil fontified nil 2320 . 2321) (nil fontified nil 2319 . 2320) (nil fontified nil 2318 . 2319) (nil fontified nil 2317 . 2318) (nil fontified nil 2316 . 2317) (nil fontified nil 2315 . 2316) (nil fontified nil 2312 . 2315) (nil fontified nil 2303 . 2312) (nil fontified nil 2294 . 2303) (nil fontified nil 2280 . 2294) (nil fontified nil 2274 . 2280) (nil fontified nil 2264 . 2274) (nil fontified nil 2261 . 2264) (nil fontified nil 2260 . 2261) (nil fontified nil 2247 . 2260) (nil fontified nil 2245 . 2247) (nil fontified nil 2244 . 2245) (nil fontified nil 2243 . 2244) (nil fontified nil 2242 . 2243) (nil fontified nil 2205 . 2242) (nil fontified nil 2198 . 2205) (nil fontified nil 2197 . 2198) (nil fontified nil 2196 . 2197) (nil fontified nil 2193 . 2196) (nil fontified nil 2192 . 2193) (nil fontified nil 2191 . 2192) (nil fontified nil 2154 . 2191) (nil fontified nil 2147 . 2154) (nil fontified nil 2146 . 2147) (nil fontified nil 2145 . 2146) (nil fontified nil 2142 . 2145) (nil fontified nil 2141 . 2142) (nil fontified nil 2140 . 2141) (nil fontified nil 2099 . 2140) (nil fontified nil 2090 . 2099) (nil fontified nil 2089 . 2090) (nil fontified nil 2088 . 2089) (nil fontified nil 2085 . 2088) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2080 . 2083) (nil fontified nil 2078 . 2080) (nil fontified nil 2073 . 2078) (nil fontified nil 2072 . 2073) (nil fontified nil 2071 . 2072) (nil fontified nil 2070 . 2071) (nil fontified nil 2069 . 2070) (nil fontified nil 2068 . 2069) (nil fontified nil 2067 . 2068) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (nil fontified nil 2064 . 2065) (nil fontified nil 2063 . 2064) (nil fontified nil 2062 . 2063) (nil fontified nil 2061 . 2062) (nil fontified nil 2056 . 2061) (nil fontified nil 2055 . 2056) (nil fontified nil 2054 . 2055) (nil fontified nil 2052 . 2054) (nil fontified nil 2051 . 2052) (nil fontified nil 2050 . 2051) (nil fontified nil 2049 . 2050) (nil fontified nil 2048 . 2049) (nil fontified nil 2047 . 2048) (nil fontified nil 2046 . 2047) (nil fontified nil 2020 . 2046) (nil fontified nil 2019 . 2020) (nil fontified nil 2018 . 2019) (nil fontified nil 2016 . 2018) (nil fontified nil 2015 . 2016) (2015 . 2864)) nil (25139 18856 130393 259000) 0 nil])
([nil nil ((#("static bool button_rot;
" 0 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 10 (ws-butler-chg chg fontified t face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (ws-butler-chg chg fontified t) 12 22 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 22 24 (ws-butler-chg chg fontified t)) . 4541)) nil (25139 18856 130323 159000) 0 nil])
([nil nil ((#("static bool button_a;
" 0 1 (ws-butler-chg delete fontified t face font-lock-keyword-face) 1 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 10 (ws-butler-chg chg fontified t face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (ws-butler-chg chg fontified t) 12 20 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 20 22 (ws-butler-chg chg fontified t)) . 4541)) nil (25139 18856 130310 459000) 0 nil])
([nil nil ((#("static bool button_b;
" 0 1 (ws-butler-chg delete fontified t face font-lock-keyword-face) 1 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 10 (ws-butler-chg chg fontified t face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (ws-butler-chg chg fontified t) 12 20 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 20 22 (ws-butler-chg chg fontified t)) . 4541)) nil (25139 18856 130297 458000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 4541) (undo-tree-id393 . -1)) nil (25139 18856 130284 258000) 0 nil])
([nil nil ((nil rear-nonsticky nil 604 . 605) (nil fontified nil 604 . 605) (nil fontified nil 602 . 604) (nil fontified nil 594 . 602) (nil fontified nil 593 . 594) (nil fontified nil 592 . 593) (nil fontified nil 589 . 592) (nil fontified nil 588 . 589) (nil fontified nil 583 . 588) (nil fontified nil 582 . 583) (nil fontified nil 580 . 582) (nil fontified nil 572 . 580) (nil fontified nil 571 . 572) (nil fontified nil 570 . 571) (nil fontified nil 567 . 570) (nil fontified nil 566 . 567) (nil fontified nil 561 . 566) (nil fontified nil 560 . 561) (nil fontified nil 558 . 560) (nil fontified nil 548 . 558) (nil fontified nil 547 . 548) (nil fontified nil 546 . 547) (nil fontified nil 543 . 546) (nil fontified nil 542 . 543) (nil fontified nil 536 . 542) (536 . 605)) nil (25139 18856 130267 959000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 605) (undo-tree-id392 . -1)) nil (25139 18856 130249 58000) 0 nil])
([nil nil ((#("static bool get_press(gpio_num_t gpio, bool &old_state) {
" 0 1 (ws-butler-chg chg c-is-sws t fontified t face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified t face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified t face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg c-is-sws t fontified t face font-lock-type-face) 8 10 (ws-butler-chg chg fontified t face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (ws-butler-chg chg fontified t) 12 21 (ws-butler-chg chg fontified t face font-lock-function-name-face) 21 22 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 22 32 (ws-butler-chg chg fontified t face font-lock-type-face) 32 33 (ws-butler-chg chg fontified t) 33 37 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 37 38 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 38 39 (ws-butler-chg chg fontified t) 39 43 (ws-butler-chg chg fontified t face font-lock-type-face) 43 45 (ws-butler-chg chg fontified t) 45 52 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 52 54 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 54 55 (ws-butler-chg chg fontified t) 55 58 (ws-butler-chg chg fontified t)) . 4437)) nil (25139 18856 130233 758000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4494 . 4495) (nil fontified nil 4492 . 4495) (nil fontified nil 4491 . 4492) (nil fontified nil 4489 . 4491) (nil fontified nil 4482 . 4489) (nil fontified nil 4480 . 4482) (nil fontified nil 4476 . 4480) (nil fontified nil 4475 . 4476) (nil fontified nil 4474 . 4475) (nil fontified nil 4470 . 4474) (nil fontified nil 4469 . 4470) (nil fontified nil 4459 . 4469) (nil fontified nil 4458 . 4459) (nil fontified nil 4449 . 4458) (nil fontified nil 4448 . 4449) (nil fontified nil 4447 . 4448) (nil fontified nil 4445 . 4447) (nil fontified nil 4444 . 4445) (nil fontified nil 4443 . 4444) (nil fontified nil 4442 . 4443) (nil fontified nil 4441 . 4442) (nil fontified nil 4440 . 4441) (nil fontified nil 4439 . 4440) (nil fontified nil 4438 . 4439) (nil fontified nil 4437 . 4438) (4437 . 4495)) nil (25139 18856 130220 158000) 0 nil])
([nil nil ((604 . 605)) nil (25139 18856 130201 759000) 0 nil])
([nil nil ((nil rear-nonsticky nil 662 . 663) (nil fontified nil 660 . 663) (nil fontified nil 659 . 660) (nil fontified nil 657 . 659) (nil fontified nil 650 . 657) (nil fontified nil 648 . 650) (nil fontified nil 644 . 648) (nil fontified nil 643 . 644) (nil fontified nil 642 . 643) (nil fontified nil 638 . 642) (nil fontified nil 637 . 638) (nil fontified nil 627 . 637) (nil fontified nil 626 . 627) (nil fontified nil 617 . 626) (nil fontified nil 616 . 617) (nil fontified nil 615 . 616) (nil fontified nil 613 . 615) (nil fontified nil 612 . 613) (nil fontified nil 611 . 612) (nil fontified nil 610 . 611) (nil fontified nil 609 . 610) (nil fontified nil 608 . 609) (nil fontified nil 607 . 608) (nil fontified nil 606 . 607) (nil fontified nil 605 . 606) (605 . 663)) nil (25139 18856 130188 59000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -660) (undo-tree-id390 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -661) (undo-tree-id391 . -1) 662) nil (25139 18856 130168 358000) 0 nil])
([nil nil ((660 . 661)) nil (25139 18856 130151 558000) 0 nil])
([nil nil ((#("void menu_controller_update() {
" 0 1 (ws-butler-chg chg c-is-sws t fontified t face font-lock-type-face) 1 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face fontified t) 4 5 (ws-butler-chg chg fontified t) 5 10 (ws-butler-chg chg face font-lock-function-name-face fontified t) 10 11 (ws-butler-chg chg face font-lock-function-name-face fontified t) 11 12 (ws-butler-chg chg face font-lock-function-name-face fontified t) 12 13 (ws-butler-chg chg face font-lock-function-name-face fontified t) 13 14 (ws-butler-chg chg face font-lock-function-name-face fontified t) 14 15 (ws-butler-chg chg face font-lock-function-name-face fontified t) 15 16 (ws-butler-chg chg face font-lock-function-name-face fontified t) 16 17 (ws-butler-chg chg face font-lock-function-name-face fontified t) 17 18 (ws-butler-chg chg face font-lock-function-name-face fontified t) 18 19 (ws-butler-chg chg face font-lock-function-name-face fontified t) 19 20 (ws-butler-chg chg face font-lock-function-name-face fontified t) 20 21 (ws-butler-chg chg face font-lock-function-name-face fontified t) 21 22 (ws-butler-chg chg face font-lock-function-name-face fontified t) 22 27 (ws-butler-chg chg face font-lock-function-name-face fontified t) 27 29 (ws-butler-chg chg fontified t) 29 32 (ws-butler-chg chg fontified t)) . 2177)) nil (25139 18856 130138 859000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2208 . 2209) (nil fontified nil 2206 . 2209) (nil fontified nil 2204 . 2206) (nil fontified nil 2199 . 2204) (nil fontified nil 2198 . 2199) (nil fontified nil 2197 . 2198) (nil fontified nil 2196 . 2197) (nil fontified nil 2195 . 2196) (nil fontified nil 2194 . 2195) (nil fontified nil 2193 . 2194) (nil fontified nil 2192 . 2193) (nil fontified nil 2191 . 2192) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2188 . 2189) (nil fontified nil 2187 . 2188) (nil fontified nil 2182 . 2187) (nil fontified nil 2181 . 2182) (nil fontified nil 2180 . 2181) (nil fontified nil 2178 . 2180) (nil fontified nil 2177 . 2178) (2177 . 2209)) nil (25139 18856 130125 359000) 0 nil])
([nil nil ((nil rear-nonsticky nil 693 . 694) (nil fontified nil 691 . 694) (nil fontified nil 689 . 691) (nil fontified nil 684 . 689) (nil fontified nil 683 . 684) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 680 . 681) (nil fontified nil 679 . 680) (nil fontified nil 678 . 679) (nil fontified nil 677 . 678) (nil fontified nil 676 . 677) (nil fontified nil 675 . 676) (nil fontified nil 674 . 675) (nil fontified nil 673 . 674) (nil fontified nil 672 . 673) (nil fontified nil 667 . 672) (nil fontified nil 666 . 667) (nil fontified nil 665 . 666) (nil fontified nil 663 . 665) (nil fontified nil 662 . 663) (662 . 694)) nil (25139 18856 130106 959000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -691) (undo-tree-id388 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -692) (undo-tree-id389 . -1) 693) nil (25139 18856 130088 558000) 0 nil])
([nil nil ((691 . 692)) nil (25139 18856 130071 559000) 0 nil])
([nil nil ((#("static int get_encoder_evt_dir (rotary_encoder_state_t &state) {
" 0 1 (ws-butler-chg chg c-is-sws t fontified t face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified t face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified t face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg c-is-sws t fontified t face font-lock-type-face) 8 9 (ws-butler-chg chg fontified t face font-lock-type-face) 9 10 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t) 11 13 (ws-butler-chg chg fontified t face font-lock-function-name-face) 13 30 (ws-butler-chg chg fontified t face font-lock-function-name-face) 30 31 (ws-butler-chg chg fontified t) 31 32 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 32 35 (ws-butler-chg chg fontified t face font-lock-type-face) 35 54 (ws-butler-chg chg fontified t face font-lock-type-face) 54 56 (ws-butler-chg chg fontified t) 56 61 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 61 62 (ws-butler-chg chg fontified t) 62 65 (ws-butler-chg chg fontified t)) . 3487)) nil (25139 18856 130058 659000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3551 . 3552) (nil fontified nil 3549 . 3552) (nil fontified nil 3548 . 3549) (nil fontified nil 3543 . 3548) (nil fontified nil 3541 . 3543) (nil fontified nil 3522 . 3541) (nil fontified nil 3519 . 3522) (nil fontified nil 3518 . 3519) (nil fontified nil 3517 . 3518) (nil fontified nil 3500 . 3517) (nil fontified nil 3498 . 3500) (nil fontified nil 3497 . 3498) (nil fontified nil 3496 . 3497) (nil fontified nil 3495 . 3496) (nil fontified nil 3494 . 3495) (nil fontified nil 3493 . 3494) (nil fontified nil 3492 . 3493) (nil fontified nil 3491 . 3492) (nil fontified nil 3490 . 3491) (nil fontified nil 3489 . 3490) (nil fontified nil 3488 . 3489) (nil fontified nil 3487 . 3488) (3487 . 3552)) nil (25139 18856 130033 758000) 0 nil])
([nil nil ((nil rear-nonsticky nil 757 . 758) (nil fontified nil 755 . 758) (nil fontified nil 754 . 755) (nil fontified nil 749 . 754) (nil fontified nil 747 . 749) (nil fontified nil 728 . 747) (nil fontified nil 725 . 728) (nil fontified nil 724 . 725) (nil fontified nil 723 . 724) (nil fontified nil 706 . 723) (nil fontified nil 704 . 706) (nil fontified nil 703 . 704) (nil fontified nil 702 . 703) (nil fontified nil 701 . 702) (nil fontified nil 700 . 701) (nil fontified nil 699 . 700) (nil fontified nil 698 . 699) (nil fontified nil 697 . 698) (nil fontified nil 696 . 697) (nil fontified nil 695 . 696) (nil fontified nil 694 . 695) (nil fontified nil 693 . 694) (693 . 758)) nil (25139 18856 130014 858000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -755) (undo-tree-id386 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -756) (undo-tree-id387 . -1) 757) nil (25139 18856 129996 459000) 0 nil])
([nil nil ((755 . 756)) nil (25139 18856 129977 758000) 0 nil])
([nil nil ((#("static int get_encoder_dir() {
" 0 1 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified t face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified t face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 9 (ws-butler-chg chg fontified t face font-lock-type-face) 9 10 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t) 11 26 (ws-butler-chg chg fontified t face font-lock-function-name-face) 26 28 (ws-butler-chg chg fontified t) 28 31 (ws-butler-chg chg fontified t)) . 3792)) nil (25139 18856 129964 958000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3822 . 3823) (nil fontified nil 3820 . 3823) (nil fontified nil 3818 . 3820) (nil fontified nil 3803 . 3818) (nil fontified nil 3802 . 3803) (nil fontified nil 3801 . 3802) (nil fontified nil 3799 . 3801) (nil fontified nil 3798 . 3799) (nil fontified nil 3797 . 3798) (nil fontified nil 3796 . 3797) (nil fontified nil 3795 . 3796) (nil fontified nil 3794 . 3795) (nil fontified nil 3793 . 3794) (nil fontified nil 3792 . 3793) (3792 . 3823)) nil (25139 18856 129951 758000) 0 nil])
([nil nil ((nil rear-nonsticky nil 787 . 788) (nil fontified nil 785 . 788) (nil fontified nil 783 . 785) (nil fontified nil 768 . 783) (nil fontified nil 767 . 768) (nil fontified nil 766 . 767) (nil fontified nil 764 . 766) (nil fontified nil 763 . 764) (nil fontified nil 762 . 763) (nil fontified nil 761 . 762) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (nil fontified nil 758 . 759) (nil fontified nil 757 . 758) (757 . 788)) nil (25139 18856 129935 359000) 0 nil])
([nil nil ((#("void menu_controller_update();
" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face) 1 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t) 5 10 (ws-butler-chg chg fontified t face font-lock-function-name-face) 10 11 (ws-butler-chg chg fontified t face font-lock-function-name-face) 11 12 (ws-butler-chg chg fontified t face font-lock-function-name-face) 12 13 (ws-butler-chg chg fontified t face font-lock-function-name-face) 13 14 (ws-butler-chg chg fontified t face font-lock-function-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-function-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-function-name-face) 16 17 (ws-butler-chg chg fontified t face font-lock-function-name-face) 17 18 (ws-butler-chg chg fontified t face font-lock-function-name-face) 18 19 (ws-butler-chg chg fontified t face font-lock-function-name-face) 19 20 (ws-butler-chg chg fontified t face font-lock-function-name-face) 20 21 (ws-butler-chg chg fontified t face font-lock-function-name-face) 21 22 (ws-butler-chg chg fontified t face font-lock-function-name-face) 22 27 (ws-butler-chg chg fontified t face font-lock-function-name-face) 27 29 (ws-butler-chg chg fontified t) 29 30 (ws-butler-chg chg fontified t) 30 31 (ws-butler-chg delete fontified t rear-nonsticky t)) . 662) (undo-tree-id383 . -31) (undo-tree-id384 . -30) (undo-tree-id385 . -31)) nil (25139 18856 129918 958000) 0 nil])
([nil nil ((604 . 605)) nil (25139 18856 129901 658000) 0 nil])
([nil nil ((nil fontified nil 635 . 636) (nil fontified nil 634 . 635) (nil fontified nil 632 . 634) (nil fontified nil 627 . 632) (nil fontified nil 626 . 627) (nil fontified nil 625 . 626) (nil fontified nil 624 . 625) (nil fontified nil 623 . 624) (nil fontified nil 622 . 623) (nil fontified nil 621 . 622) (nil fontified nil 620 . 621) (nil fontified nil 619 . 620) (nil fontified nil 618 . 619) (nil fontified nil 617 . 618) (nil fontified nil 616 . 617) (nil fontified nil 615 . 616) (nil fontified nil 610 . 615) (nil fontified nil 609 . 610) (nil fontified nil 608 . 609) (nil fontified nil 606 . 608) (nil fontified nil 605 . 606) (605 . 636)) nil (25139 18856 129888 158000) 0 nil])
([nil nil ((#("static int get_encoder_pos() {
" 0 1 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified t face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified t face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 9 (ws-butler-chg chg fontified t face font-lock-type-face) 9 10 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t) 11 26 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 26 28 (ws-butler-chg chg fontified t) 28 31 (ws-butler-chg chg fontified t)) . 4175)) nil (25139 18856 129870 458000) 0 nil])
([nil nil ((4175 . 4176) (nil rear-nonsticky nil 4205 . 4206) (nil fontified nil 4203 . 4206) (nil fontified nil 4201 . 4203) (nil fontified nil 4186 . 4201) (nil fontified nil 4185 . 4186) (nil fontified nil 4184 . 4185) (nil fontified nil 4182 . 4184) (nil fontified nil 4181 . 4182) (nil fontified nil 4180 . 4181) (nil fontified nil 4179 . 4180) (nil fontified nil 4178 . 4179) (nil fontified nil 4177 . 4178) (nil fontified nil 4176 . 4177) (nil fontified nil 4175 . 4176) (4175 . 4206)) nil (25139 18856 129857 358000) 0 nil])
([nil nil ((789 . 791) (nil rear-nonsticky nil 819 . 820) (nil fontified nil 817 . 820) (nil fontified nil 815 . 817) (nil fontified nil 800 . 815) (nil fontified nil 799 . 800) (nil fontified nil 798 . 799) (nil fontified nil 796 . 798) (nil fontified nil 795 . 796) (nil fontified nil 794 . 795) (nil fontified nil 793 . 794) (nil fontified nil 792 . 793) (nil fontified nil 791 . 792) (nil fontified nil 790 . 791) (nil fontified nil 789 . 790) (789 . 820)) nil (25139 18856 129840 658000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 789) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 789)) nil (25139 18856 129823 958000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -817) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -818) (undo-tree-id382 . -1) 819) nil (25139 18856 129810 258000) 0 nil])
([nil nil ((789 . 791) (817 . 818)) nil (25139 18856 129792 159000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -786) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -787) (undo-tree-id379 . -1) 788) nil (25139 18856 129778 558000) 0 nil])
([nil nil ((786 . 787)) nil (25139 18856 129760 658000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 788) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 788)) nil (25139 18856 129746 358000) 0 nil])
([nil nil ((#("static bool get_press(gpio_num_t gpio, bool &old_state);
" 0 1 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified t face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified t face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t face font-lock-type-face) 8 10 (ws-butler-chg chg fontified t face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (ws-butler-chg chg fontified t) 12 21 (ws-butler-chg chg fontified t face font-lock-function-name-face) 21 22 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 22 32 (ws-butler-chg chg fontified t face font-lock-type-face) 32 33 (ws-butler-chg chg fontified t) 33 37 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 37 38 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 38 39 (ws-butler-chg chg fontified t) 39 43 (ws-butler-chg chg fontified t face font-lock-type-face) 43 45 (ws-butler-chg chg fontified t) 45 52 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 52 54 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 54 55 (ws-butler-chg chg fontified t) 55 56 (ws-butler-chg chg fontified t) 56 57 (ws-butler-chg delete rear-nonsticky t fontified t)) . 637) (undo-tree-id368 . -57) (undo-tree-id369 . -57) (undo-tree-id370 . -56) (undo-tree-id371 . -22) (undo-tree-id372 . -38) (undo-tree-id373 . -39) (undo-tree-id374 . -55) (undo-tree-id375 . -57) (undo-tree-id376 . -57)) nil (25139 18856 129729 159000) 0 nil])
([nil nil ((nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 815 . 816) (nil fontified nil 813 . 815) (nil fontified nil 806 . 813) (nil fontified nil 804 . 806) (nil fontified nil 800 . 804) (nil fontified nil 799 . 800) (nil fontified nil 798 . 799) (nil fontified nil 794 . 798) (nil fontified nil 793 . 794) (nil fontified nil 783 . 793) (nil fontified nil 782 . 783) (nil fontified nil 773 . 782) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 769 . 771) (nil fontified nil 768 . 769) (nil fontified nil 767 . 768) (nil fontified nil 766 . 767) (nil fontified nil 765 . 766) (nil fontified nil 764 . 765) (nil fontified nil 763 . 764) (nil fontified nil 762 . 763) (nil fontified nil 761 . 762) (761 . 818)) nil (25139 18856 129695 658000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg)) . 4823) (4824 . 4824) 761) nil (25139 18856 129672 458000) 0 nil])
([nil nil ((604 . 605) (t 25139 18856 142978 928000)) nil (25139 18873 954374 158000) 0 nil])
([nil nil ((#("// ==============================================================================
" 0 1 (c-is-sws t c-in-sws t ws-butler-chg delete fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 3 82 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face)) . 820)) nil (25139 18873 954359 58000) 0 nil])
([nil nil ((nil rear-nonsticky nil 901 . 902) (nil fontified nil 823 . 902) (nil fontified nil 821 . 823) (nil fontified nil 820 . 821) (820 . 902)) nil (25139 18873 954345 858000) 0 nil])
([nil nil ((nil rear-nonsticky nil 686 . 687) (nil fontified nil 608 . 687) (nil fontified nil 606 . 608) (nil fontified nil 605 . 606) (605 . 687)) nil (25139 18873 954331 58000) 0 nil])
([nil nil ((nil rear-nonsticky nil 768 . 769) (nil fontified nil 690 . 769) (nil fontified nil 688 . 690) (nil fontified nil 687 . 688) (687 . 769)) nil (25139 18873 954316 158000) 0 nil])
([nil nil ((686 . 687)) nil (25139 18873 954301 658000) 0 nil])
([nil nil ((687 . 689)) nil (25139 18873 954288 658000) 0 nil])
([nil nil ((689 . 708)) nil (25139 18873 954271 58000) 0 nil])
([nil nil ((#("  // Config the menu
" 0 2 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t) 2 3 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3 5 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 20 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 20 21 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 2175) (undo-tree-id402 . -21) (undo-tree-id403 . -21) (t 25139 18873 966311 581000)) nil (25139 18894 829979 418000) 0 nil])
([nil nil ((#("  main_menu = new Menu(nullptr, \"Menu\");
" 0 1 (ws-butler-chg delete c-is-sws t c-in-sws t fontified t) 1 2 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 2 3 (ws-butler-chg chg c-is-sws t fontified t) 3 14 (ws-butler-chg chg fontified t) 14 17 (ws-butler-chg chg fontified t face font-lock-keyword-face) 17 18 (ws-butler-chg chg fontified t) 18 22 (ws-butler-chg chg fontified t face font-lock-type-face) 22 23 (ws-butler-chg chg fontified t) 23 30 (ws-butler-chg chg fontified t face font-lock-constant-face) 30 32 (ws-butler-chg chg fontified t) 32 38 (ws-butler-chg chg fontified t face font-lock-string-face) 38 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t)) . 2175) (undo-tree-id400 . -40) (undo-tree-id401 . -41)) nil (25139 18894 829962 118000) 0 nil])
([nil nil ((#("  auto motor_speed_menu = new Menu(\"Speed...\", nullptr);
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 6 7 (ws-butler-chg chg fontified t) 7 23 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 23 26 (ws-butler-chg chg fontified t) 26 29 (ws-butler-chg chg fontified t face font-lock-keyword-face) 29 30 (ws-butler-chg chg fontified t) 30 34 (ws-butler-chg chg fontified t face font-lock-type-face) 34 35 (ws-butler-chg chg fontified t) 35 45 (ws-butler-chg chg fontified t face font-lock-string-face) 45 47 (ws-butler-chg chg fontified t) 47 54 (ws-butler-chg chg fontified t face font-lock-constant-face) 54 57 (ws-butler-chg chg fontified t)) . 2175) (undo-tree-id399 . -57)) nil (25139 18894 829945 218000) 0 nil])
([nil nil ((#("  main_menu->Add(motor_speed_menu);
" 0 1 (ws-butler-chg delete fontified t) 1 35 (ws-butler-chg chg fontified t) 35 36 (ws-butler-chg chg fontified t)) . 2175) (undo-tree-id398 . -36)) nil (25139 18894 829929 218000) 0 nil])
([nil nil ((#("  motor_speed_menu->Add(main_menu);
" 0 1 (ws-butler-chg delete fontified t) 1 35 (ws-butler-chg chg fontified t) 35 36 (ws-butler-chg chg fontified t)) . 2175) (undo-tree-id397 . -36)) nil (25139 18894 829913 418000) 0 nil])
([nil nil ((#("  motor_speed_menu->Add(new FloatItem(\"Speed\", &g_speed, 0, 1, 0.01));
" 0 1 (ws-butler-chg delete fontified t) 1 13 (ws-butler-chg chg fontified t) 13 24 (ws-butler-chg chg fontified t) 24 27 (ws-butler-chg chg fontified t face font-lock-keyword-face) 27 28 (ws-butler-chg chg fontified t) 28 37 (ws-butler-chg chg fontified t face font-lock-type-face) 37 38 (ws-butler-chg chg fontified t) 38 45 (ws-butler-chg chg fontified t face font-lock-string-face) 45 70 (ws-butler-chg chg fontified t) 70 71 (ws-butler-chg chg fontified t)) . 2175) (undo-tree-id396 . -71)) nil (25139 18894 829897 118000) 0 nil])
([nil current ((#("  MenuSystem.instance.open_menu(main_menu);
" 0 1 (ws-butler-chg delete fontified t) 1 44 (ws-butler-chg chg fontified t)) . 2175) (undo-tree-id395 . -44)) nil (25139 18894 829879 18000) 0 nil])
nil

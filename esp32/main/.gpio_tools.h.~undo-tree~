(undo-tree-save-format-version . 1)
"b7f31f613127ef0ff3743826db44d8f2aa054e8a"
[nil nil nil nil (25139 12749 20982 408000) 0 nil]
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg delete face font-lock-function-name-face)) . 77) (#("o" 0 1 (fontified t ws-butler-chg delete face font-lock-function-name-face)) . 77) (#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-function-name-face)) . 77) (#("e" 0 1 (fontified t ws-butler-chg delete face font-lock-function-name-face)) . 77) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("k" 0 1 (fontified t ws-butler-chg delete face font-lock-function-name-face)) . 77) (#("a" 0 1 (fontified t ws-butler-chg delete face font-lock-function-name-face)) . 77) (#("m" 0 1 (fontified t face font-lock-function-name-face)) . 77) (t 25137 50853 674870 813000)) nil (25139 12749 20968 308000) 0 nil])
([nil nil ((77 . 80)) nil (25139 12749 20949 608000) 0 nil])
([nil nil ((85 . 88)) nil (25139 12749 20937 308000) 0 nil])
([nil nil ((123 . 126)) nil (25139 12749 20924 908000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face font-lock-function-name-face)) . -113) (undo-tree-id8 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -114) (undo-tree-id9 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -115) (undo-tree-id10 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -116) (undo-tree-id11 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -117) (undo-tree-id12 . -1) 118) nil (25139 12749 20911 8000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-function-name-face)) . -111) (undo-tree-id6 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -112) (undo-tree-id7 . -1) 113) nil (25139 12749 20890 308000) 0 nil])
([nil nil ((111 . 114)) nil (25139 12749 20873 608000) 0 nil])
([nil nil ((#("void toggle_pin(gpio_num_t pin);
" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t c-type c-decl-arg-start) 16 26 (fontified t face font-lock-type-face) 26 27 (fontified t) 27 30 (fontified t face font-lock-variable-name-face) 30 33 (fontified t)) . 140) (undo-tree-id0 . -32) (undo-tree-id1 . -16) (undo-tree-id2 . -31) (undo-tree-id3 . -33) (undo-tree-id4 . -8) (undo-tree-id5 . -33)) nil (25139 12749 20860 308000) 0 nil])
([nil nil ((nil rear-nonsticky nil 213 . 214) (nil fontified nil 211 . 214) (nil fontified nil 208 . 211) (nil fontified nil 207 . 208) (nil fontified nil 197 . 207) (nil fontified nil 196 . 197) (nil fontified nil 186 . 196) (nil fontified nil 185 . 186) (nil fontified nil 184 . 185) (nil fontified nil 181 . 184) (181 . 214)) nil (25139 12749 20817 308000) 0 nil])
([nil nil ((149 . 154) (t 25139 12749 23211 275000)) nil (25139 12843 427384 531000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 154) (#("i" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 154) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . 154)) nil (25139 12843 427371 32000) 0 nil])
([nil nil ((154 . 157)) nil (25139 12843 427358 232000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 154) (#("i" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 154) (#("p" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . 154)) nil (25139 12843 427345 331000) 0 nil])
([nil nil ((154 . 159)) nil (25139 12843 427332 332000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -155) (undo-tree-id12 . -1) (#("a" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -156) (undo-tree-id13 . -1) (#("t" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -157) (undo-tree-id14 . -1) (#("e" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -158) (undo-tree-id15 . -1) 159) nil (25139 12843 427318 932000) 0 nil])
([nil nil ((155 . 156)) nil (25139 12843 427300 31000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -154) (undo-tree-id10 . -1) (#("v" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -155) (undo-tree-id11 . -1) 156) nil (25139 12843 427287 31000) 0 nil])
([nil nil ((154 . 159)) nil (25139 12843 427270 432000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . -200) (undo-tree-id7 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -201) (undo-tree-id8 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -202) (undo-tree-id9 . -1) 203) nil (25139 12843 427257 132000) 0 nil])
([nil nil ((200 . 201)) nil (25139 12843 427239 432000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -200) (undo-tree-id6 . -1) 201) nil (25139 12843 427226 732000) 0 nil])
([nil nil ((200 . 205)) nil (25139 12843 427211 332000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -203) (undo-tree-id4 . -1) (#("n" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -204) (undo-tree-id5 . -1) 205) nil (25139 12843 427198 332000) 0 nil])
([nil nil ((203 . 205)) nil (25139 12843 427180 632000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -204) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 205) nil (25139 12843 427165 231000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 153) (#("u" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 153) (#("l" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 153) (#("a" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 153) (#("v" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 153) (#("_" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . 153) (t 25139 12843 429874 367000)) nil (25139 12848 832345 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 138 . 139) (nil fontified nil 136 . 139) (nil fontified nil 135 . 136) (nil fontified nil 128 . 135) (nil fontified nil 127 . 128) (nil fontified nil 124 . 127) (nil fontified nil 123 . 124) (nil fontified nil 122 . 123) (nil fontified nil 114 . 122) (nil fontified nil 113 . 114) (nil fontified nil 110 . 113) (nil fontified nil 109 . 110) (nil fontified nil 108 . 109) (nil fontified nil 101 . 108) (nil fontified nil 100 . 101) (nil fontified nil 97 . 100) (nil fontified nil 96 . 97) (nil fontified nil 95 . 96) (nil fontified nil 94 . 95) (nil fontified nil 93 . 94) (nil fontified nil 92 . 93) (nil fontified nil 87 . 92) (nil fontified nil 86 . 87) (nil fontified nil 85 . 86) (nil fontified nil 84 . 85) (nil fontified nil 83 . 84) (nil fontified nil 82 . 83) (nil fontified nil 81 . 82) (nil fontified nil 78 . 81) (nil fontified nil 77 . 78) (nil fontified nil 72 . 77) (nil fontified nil 71 . 72) (71 . 139) (t 25139 12848 833207 499000)) nil (25139 17406 544622 599000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -138) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 139) nil (25139 17406 544601 499000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -136) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -137) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 138) nil (25139 17406 544581 299000) 0 nil])
([nil nil ((136 . 137)) nil (25139 17406 543326 599000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 71) (#("c" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 71) (#("i" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 71) (#("t" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 71) (#("a" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 71) (#("t" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 71) (#("s" 0 1 (ws-butler-chg chg c-is-sws t fontified t face font-lock-keyword-face)) . 71)) nil (25139 17406 543311 599000) 0 nil])
([nil nil ((71 . 72)) nil (25139 17406 543294 299000) 0 nil])
([nil nil ((#("N" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 99) (t 25139 17406 546367 417000)) nil (25139 17418 844732 263000) 0 nil])
([nil nil ((99 . 100)) nil (25139 17418 844719 363000) 0 nil])
([nil nil ((#("M" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 112)) nil (25139 17418 844706 463000) 0 nil])
([nil nil ((112 . 113)) nil (25139 17418 844693 763000) 0 nil])
([nil nil ((#("V" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 126)) nil (25139 17418 844680 263000) 0 nil])
([nil nil ((126 . 127)) nil (25139 17418 844663 863000) 0 nil])
([nil nil ((71 . 72) (t 25139 17418 846366 950000)) nil (25139 17543 130627 185000) 0 nil])
([nil nil ((nil fontified nil 147 . 148) (nil fontified nil 145 . 147) (nil fontified nil 144 . 145) (nil fontified nil 143 . 144) (nil fontified nil 142 . 143) (nil fontified nil 141 . 142) (nil fontified nil 137 . 141) (nil fontified nil 136 . 137) (nil fontified nil 133 . 136) (nil fontified nil 132 . 133) (nil fontified nil 131 . 132) (nil fontified nil 129 . 131) (nil fontified nil 128 . 129) (nil fontified nil 127 . 128) (nil fontified nil 123 . 127) (nil fontified nil 122 . 123) (nil fontified nil 121 . 122) (nil fontified nil 120 . 121) (nil fontified nil 119 . 120) (nil fontified nil 118 . 119) (nil fontified nil 117 . 118) (nil fontified nil 116 . 117) (nil fontified nil 115 . 116) (nil fontified nil 114 . 115) (nil fontified nil 113 . 114) (nil fontified nil 112 . 113) (nil fontified nil 111 . 112) (nil fontified nil 110 . 111) (nil fontified nil 109 . 110) (nil fontified nil 108 . 109) (nil fontified nil 107 . 108) (nil fontified nil 106 . 107) (nil fontified nil 102 . 106) (nil fontified nil 101 . 102) (nil fontified nil 100 . 101) (nil fontified nil 99 . 100) (nil fontified nil 98 . 99) (nil fontified nil 97 . 98) (nil fontified nil 96 . 97) (nil fontified nil 95 . 96) (nil fontified nil 94 . 95) (nil fontified nil 93 . 94) (nil fontified nil 92 . 93) (nil fontified nil 91 . 92) (nil fontified nil 90 . 91) (nil fontified nil 89 . 90) (nil fontified nil 88 . 89) (nil fontified nil 87 . 88) (nil fontified nil 86 . 87) (nil fontified nil 81 . 86) (nil fontified nil 80 . 81) (nil fontified nil 79 . 80) (nil fontified nil 78 . 79) (nil fontified nil 77 . 78) (nil fontified nil 76 . 77) (nil fontified nil 75 . 76) (nil fontified nil 73 . 75) (nil fontified nil 72 . 73) (72 . 148)) nil (25139 17543 130611 885000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -145) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -146) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("
" 0 1 (ws-butler-chg chg rear-nonsticky t fontified t)) . -147) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 148) nil (25139 17543 130584 585000) 0 nil])
([nil nil ((145 . 146)) nil (25139 17543 130558 685000) 0 nil])
([nil current ((#("void set_gpio_mode(int gpionum, int gpiomode, int gpioval);
" 0 1 (ws-butler-chg delete c-is-sws t fontified t face font-lock-type-face) 1 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t face font-lock-function-name-face) 6 7 (ws-butler-chg chg fontified t face font-lock-function-name-face) 7 8 (ws-butler-chg chg fontified t face font-lock-function-name-face) 8 9 (ws-butler-chg chg fontified t face font-lock-function-name-face) 9 14 (ws-butler-chg chg fontified t face font-lock-function-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-function-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-function-name-face) 16 17 (ws-butler-chg chg fontified t face font-lock-function-name-face) 17 18 (ws-butler-chg chg fontified t face font-lock-function-name-face) 18 19 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 19 22 (ws-butler-chg chg fontified t face font-lock-type-face) 22 23 (ws-butler-chg chg fontified t) 23 27 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 27 28 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 28 29 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 29 30 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 30 31 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 31 32 (ws-butler-chg chg fontified t) 32 35 (ws-butler-chg chg fontified t face font-lock-type-face) 35 36 (ws-butler-chg chg fontified t) 36 40 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 40 41 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 41 42 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 42 44 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 44 45 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 45 46 (ws-butler-chg chg fontified t) 46 49 (ws-butler-chg chg fontified t face font-lock-type-face) 49 50 (ws-butler-chg chg fontified t) 50 54 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 54 55 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 55 56 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 56 57 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 57 58 (ws-butler-chg chg fontified t) 58 59 (ws-butler-chg chg fontified t) 59 60 (ws-butler-chg delete fontified t)) . 147) (undo-tree-id10 . -60) (undo-tree-id11 . -59) (undo-tree-id12 . -19) (undo-tree-id13 . -31) (undo-tree-id14 . -32) (undo-tree-id15 . -45) (undo-tree-id16 . -46) (undo-tree-id17 . -58) (undo-tree-id18 . -55) (undo-tree-id19 . -55) (undo-tree-id20 . -55) (undo-tree-id21 . -55) (undo-tree-id22 . -55) (undo-tree-id23 . -55) (undo-tree-id24 . -60)) nil (25139 17543 130542 785000) 0 nil])
nil

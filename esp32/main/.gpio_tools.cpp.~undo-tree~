(undo-tree-save-format-version . 1)
"379d5e18aaf3f644a99da52aa51f704c6fe7f110"
[nil nil nil nil (25139 12796 759721 651000) 0 nil]
([nil nil ((63 . 66) (t 25137 50831 598204 977000)) nil (25139 12796 759709 251000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-function-name-face fontified t)) . -51) (undo-tree-id14 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -52) (undo-tree-id15 . -1) (#("k" 0 1 (face font-lock-function-name-face fontified t)) . -53) (undo-tree-id16 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -54) (undo-tree-id17 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -55) (undo-tree-id18 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -56) (undo-tree-id19 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -57) (undo-tree-id20 . -1) 58) nil (25139 12796 759694 651000) 0 nil])
([nil nil ((51 . 54)) nil (25139 12796 759670 751000) 0 nil])
([nil nil ((302 . 306)) nil (25139 12796 759658 251000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 306) (#("i" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 306) (#("_" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 306) (#("e" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 306) (#("k" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 306) (#("a" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 306) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . 306)) nil (25139 12796 759644 151000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face ws-butler-chg delete fontified t)) . 306)) nil (25139 12796 759629 551000) 0 nil])
([nil nil ((310 . 313)) nil (25139 12796 759615 451000) 0 nil])
([nil nil ((#("bool set_pin(gpio_num_t pin, int value)
" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 12 (face font-lock-function-name-face fontified t) 12 13 (c-type c-decl-arg-start fontified t) 13 23 (face font-lock-type-face fontified t) 23 24 (fontified t) 24 27 (face font-lock-variable-name-face fontified t) 27 28 (c-type c-decl-arg-start fontified t) 28 29 (fontified t) 29 32 (face font-lock-type-face fontified t) 32 33 (fontified t) 33 38 (face font-lock-variable-name-face fontified t) 38 40 (fontified t)) . 628) (undo-tree-id9 . -13) (undo-tree-id10 . -28) (undo-tree-id11 . -29) (undo-tree-id12 . -39) (undo-tree-id13 . -40)) nil (25139 12796 759357 951000) 0 nil])
([nil nil ((#("{
" 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t)) . 628) (undo-tree-id8 . -2)) nil (25139 12796 759338 351000) 0 nil])
([nil nil ((#("  if (pin == GPIO_NULL)
" 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 24 (fontified t)) . 628) (undo-tree-id6 . -17) (undo-tree-id7 . -24)) nil (25139 12796 759322 751000) 0 nil])
([nil nil ((#("    return false;
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 16 (face font-lock-constant-face fontified t) 16 18 (fontified t)) . 628) (undo-tree-id5 . -18)) nil (25139 12796 759306 51000) 0 nil])
([nil nil ((#("  int oldval = gpio_get_level(pin);
" 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t) 2 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t) 5 6 (fontified t) 6 12 (face font-lock-variable-name-face fontified t) 12 36 (fontified t)) . 628) (undo-tree-id4 . -36)) nil (25139 12796 759290 251000) 0 nil])
([nil nil ((#("  gpio_set_level(pin, value);
" 0 1 (ws-butler-chg delete fontified t) 1 30 (fontified t)) . 628) (undo-tree-id3 . -30)) nil (25139 12796 759274 451000) 0 nil])
([nil nil ((#("  return oldval != value;
" 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t) 2 8 (face font-lock-keyword-face fontified t) 8 14 (fontified t) 14 18 (fontified t) 18 26 (fontified t)) . 628) (undo-tree-id2 . -26)) nil (25139 12796 759258 451000) 0 nil])
([nil nil ((#("}
" 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t)) . 628) (undo-tree-id0 . -1) (undo-tree-id1 . -2)) nil (25139 12796 759241 151000) 0 nil])
([nil nil ((nil rear-nonsticky nil 647 . 648) (nil fontified nil 647 . 648) (nil fontified nil 646 . 647) (nil fontified nil 638 . 646) (nil fontified nil 634 . 638) (nil fontified nil 628 . 634) (nil fontified nil 622 . 628) (nil fontified nil 621 . 622) (nil fontified nil 620 . 621) (nil fontified nil 591 . 620) (nil fontified nil 590 . 591) (nil fontified nil 566 . 590) (nil fontified nil 560 . 566) (nil fontified nil 559 . 560) (nil fontified nil 558 . 559) (nil fontified nil 556 . 558) (nil fontified nil 555 . 556) (nil fontified nil 554 . 555) (nil fontified nil 552 . 554) (nil fontified nil 547 . 552) (nil fontified nil 546 . 547) (nil fontified nil 540 . 546) (nil fontified nil 537 . 540) (nil fontified nil 536 . 537) (nil fontified nil 516 . 536) (nil fontified nil 514 . 516) (nil fontified nil 513 . 514) (nil fontified nil 512 . 513) (nil fontified nil 511 . 512) (nil fontified nil 510 . 511) (nil fontified nil 508 . 510) (nil fontified nil 503 . 508) (nil fontified nil 502 . 503) (nil fontified nil 499 . 502) (nil fontified nil 498 . 499) (nil fontified nil 497 . 498) (nil fontified nil 494 . 497) (nil fontified nil 493 . 494) (nil fontified nil 483 . 493) (nil fontified nil 482 . 483) (nil fontified nil 475 . 482) (nil fontified nil 474 . 475) (nil fontified nil 473 . 474) (nil fontified nil 470 . 473) (470 . 648)) nil (25139 12796 759179 751000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -479) (undo-tree-id24 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -480) (undo-tree-id25 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t ws-butler-chg chg)) . -481) (undo-tree-id26 . -1) 482 (t 25139 12796 763209 467000)) nil (25139 12870 335984 614000) 0 nil])
([nil nil ((479 . 483)) nil (25139 12870 335742 114000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . -662) (undo-tree-id21 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -663) (undo-tree-id22 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -664) (undo-tree-id23 . -1) 665) nil (25139 12870 335727 814000) 0 nil])
([nil nil ((662 . 666)) nil (25139 12870 335698 814000) 0 nil])
([nil nil ((45 . 46) (t 25139 12870 336540 14000)) nil (25139 17377 693515 420000) 0 nil])
([nil nil ((578 . 580) (#("    " 0 1 (ws-butler-chg chg fontified nil) 1 4 (ws-butler-chg chg fontified nil)) . 578) (536 . 538) (#("    " 0 1 (ws-butler-chg chg fontified nil) 1 4 (ws-butler-chg chg fontified nil)) . 536) (483 . 485) (#("    " 0 1 (ws-butler-chg chg fontified nil) 1 4 (ws-butler-chg chg fontified nil)) . 483) (444 . 446) (#("    " 0 1 (ws-butler-chg chg fontified nil) 1 4 (ws-butler-chg chg fontified nil)) . 444) (395 . 397) (#("    " 0 1 (ws-butler-chg chg fontified nil) 1 4 (ws-butler-chg chg fontified nil)) . 395) (349 . 351) (#("    " 0 1 (ws-butler-chg chg fontified nil) 1 4 (ws-butler-chg chg fontified nil)) . 349) (nil rear-nonsticky nil 647 . 648) (nil fontified nil 647 . 648) (nil fontified nil 646 . 647) (nil fontified nil 645 . 646) (nil fontified nil 589 . 645) (nil fontified nil 588 . 589) (nil fontified nil 545 . 588) (nil fontified nil 544 . 545) (nil fontified nil 490 . 544) (nil fontified nil 489 . 490) (nil fontified nil 449 . 489) (nil fontified nil 448 . 449) (nil fontified nil 435 . 448) (nil fontified nil 424 . 435) (nil fontified nil 420 . 424) (nil fontified nil 406 . 420) (nil fontified nil 405 . 406) (nil fontified nil 404 . 405) (nil fontified nil 401 . 404) (nil fontified nil 398 . 401) (nil fontified nil 397 . 398) (nil fontified nil 385 . 397) (nil fontified nil 375 . 385) (nil fontified nil 371 . 375) (nil fontified nil 358 . 371) (nil fontified nil 357 . 358) (nil fontified nil 356 . 357) (nil fontified nil 353 . 356) (nil fontified nil 350 . 353) (nil fontified nil 349 . 350) (nil fontified nil 345 . 349) (nil fontified nil 338 . 345) (nil fontified nil 337 . 338) (nil fontified nil 334 . 337) (nil fontified nil 333 . 334) (nil fontified nil 332 . 333) (nil fontified nil 324 . 332) (nil fontified nil 323 . 324) (nil fontified nil 320 . 323) (nil fontified nil 319 . 320) (nil fontified nil 318 . 319) (nil fontified nil 311 . 318) (nil fontified nil 310 . 311) (nil fontified nil 307 . 310) (nil fontified nil 306 . 307) (nil fontified nil 296 . 306) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 291 . 294) (nil fontified nil 290 . 291) (nil fontified nil 285 . 290) (nil fontified nil 284 . 285) (nil fontified nil 283 . 284) (nil fontified nil 204 . 283) (nil fontified nil 202 . 204) (nil fontified nil 201 . 202) (nil fontified nil 196 . 201) (nil fontified nil 194 . 196) (nil fontified nil 193 . 194) (nil fontified nil 114 . 193) (nil fontified nil 112 . 114) (nil fontified nil 111 . 112) (nil fontified nil 110 . 111) (nil fontified nil 107 . 110) (nil fontified nil 100 . 107) (nil fontified nil 99 . 100) (nil fontified nil 96 . 99) (nil fontified nil 95 . 96) (nil fontified nil 94 . 95) (nil fontified nil 86 . 94) (nil fontified nil 85 . 86) (nil fontified nil 82 . 85) (nil fontified nil 81 . 82) (nil fontified nil 80 . 81) (nil fontified nil 73 . 80) (nil fontified nil 72 . 73) (nil fontified nil 69 . 72) (nil fontified nil 68 . 69) (nil fontified nil 58 . 68) (nil fontified nil 57 . 58) (nil fontified nil 56 . 57) (nil fontified nil 53 . 56) (nil fontified nil 52 . 53) (nil fontified nil 46 . 52) (46 . 648)) nil (25139 17377 693497 120000) 0 nil])
([nil nil ((296 . 300)) nil (25139 17377 693462 420000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg delete fontified t face font-lock-function-name-face)) . 305) (#("u" 0 1 (ws-butler-chg delete fontified t face font-lock-function-name-face)) . 305) (#("t" 0 1 (ws-butler-chg delete fontified t face font-lock-function-name-face)) . 305) (#("e" 0 1 (ws-butler-chg delete fontified t face font-lock-function-name-face)) . 305) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . 305)) nil (25139 17377 693448 520000) 0 nil])
([nil nil ((305 . 309)) nil (25139 17377 693434 920000) 0 nil])
([nil nil ((#("static void gpio_setup(int gpioNum, int gpioMode, int gpioVal);
" 0 1 (ws-butler-chg chg fontified t face font-lock-keyword-face c-is-sws t) 1 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 10 (ws-butler-chg chg fontified t face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (ws-butler-chg chg fontified t) 12 22 (ws-butler-chg chg fontified t face font-lock-function-name-face) 22 23 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 23 26 (ws-butler-chg chg fontified t face font-lock-type-face) 26 27 (ws-butler-chg chg fontified t) 27 34 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 34 35 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 35 36 (ws-butler-chg chg fontified t) 36 39 (ws-butler-chg chg fontified t face font-lock-type-face) 39 40 (ws-butler-chg chg fontified t) 40 48 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 48 49 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 49 50 (ws-butler-chg chg fontified t) 50 53 (ws-butler-chg chg fontified t face font-lock-type-face) 53 54 (ws-butler-chg chg fontified t) 54 61 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 61 64 (ws-butler-chg chg fontified t)) . 46) (undo-tree-id7 . -63) (undo-tree-id8 . -23) (undo-tree-id9 . -35) (undo-tree-id10 . -36) (undo-tree-id11 . -49) (undo-tree-id12 . -50) (undo-tree-id13 . -62) (undo-tree-id14 . -64)) nil (25139 17377 693421 820000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t c-is-sws t c-in-sws t)) . 46) (undo-tree-id6 . -1)) nil (25139 17377 693395 920000) 0 nil])
([nil nil ((#("// ==============================================================================
" 0 1 (ws-butler-chg delete fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 1 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 82 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . 46) (undo-tree-id5 . -82)) nil (25139 17377 693380 920000) 0 nil])
([nil nil ((#("// GPIO
" 0 1 (ws-butler-chg delete fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 1 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 8 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . 46) (undo-tree-id4 . -8)) nil (25139 17377 693365 820000) 0 nil])
([nil nil ((#("// ==============================================================================
" 0 1 (ws-butler-chg delete fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 1 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 82 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . 46) (undo-tree-id3 . -82)) nil (25139 17377 693350 220000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t c-is-sws t c-in-sws t)) . 46) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (25139 17377 693332 420000) 0 nil])
([nil nil ((#("static void set_gpio_mode(int gpioNum, int gpioMode, int gpioVal) {
" 0 1 (ws-butler-chg delete fontified t c-is-sws t face font-lock-keyword-face) 1 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 10 (ws-butler-chg chg fontified t face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t face font-lock-function-name-face) 13 14 (ws-butler-chg chg fontified t face font-lock-function-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-function-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-function-name-face) 16 21 (ws-butler-chg chg fontified t face font-lock-function-name-face) 21 22 (ws-butler-chg chg fontified t face font-lock-function-name-face) 22 23 (ws-butler-chg chg fontified t face font-lock-function-name-face) 23 24 (ws-butler-chg chg fontified t face font-lock-function-name-face) 24 25 (ws-butler-chg chg fontified t face font-lock-function-name-face) 25 26 (ws-butler-chg delete fontified t c-type c-decl-arg-start) 26 29 (ws-butler-chg chg fontified t face font-lock-type-face) 29 30 (ws-butler-chg chg fontified t) 30 37 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 37 38 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 38 39 (ws-butler-chg chg fontified t) 39 42 (ws-butler-chg chg fontified t face font-lock-type-face) 42 43 (ws-butler-chg chg fontified t) 43 51 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 51 52 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 52 53 (ws-butler-chg chg fontified t) 53 56 (ws-butler-chg chg fontified t face font-lock-type-face) 56 57 (ws-butler-chg chg fontified t) 57 64 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 64 65 (ws-butler-chg chg fontified t) 65 68 (ws-butler-chg chg fontified t)) . 46) (undo-tree-id15 . -26) (undo-tree-id16 . -38) (undo-tree-id17 . -39) (undo-tree-id18 . -52) (undo-tree-id19 . -53) (undo-tree-id20 . -65) (undo-tree-id21 . -68) (t 25139 17377 696368 508000)) nil (25139 17379 286510 461000) 0 nil])
([nil nil ((nil rear-nonsticky nil 113 . 114) (nil fontified nil 111 . 114) (nil fontified nil 110 . 111) (nil fontified nil 103 . 110) (nil fontified nil 102 . 103) (nil fontified nil 99 . 102) (nil fontified nil 98 . 99) (nil fontified nil 97 . 98) (nil fontified nil 89 . 97) (nil fontified nil 88 . 89) (nil fontified nil 85 . 88) (nil fontified nil 84 . 85) (nil fontified nil 83 . 84) (nil fontified nil 76 . 83) (nil fontified nil 75 . 76) (nil fontified nil 72 . 75) (nil fontified nil 71 . 72) (nil fontified nil 70 . 71) (nil fontified nil 69 . 70) (nil fontified nil 68 . 69) (nil fontified nil 67 . 68) (nil fontified nil 62 . 67) (nil fontified nil 61 . 62) (nil fontified nil 60 . 61) (nil fontified nil 59 . 60) (nil fontified nil 58 . 59) (nil fontified nil 57 . 58) (nil fontified nil 56 . 57) (nil fontified nil 53 . 56) (nil fontified nil 52 . 53) (nil fontified nil 47 . 52) (nil fontified nil 46 . 47) (46 . 114)) nil (25139 17379 286477 160000) 0 nil])
([nil nil ((#("V" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 107) (t 25139 17379 289701 780000)) nil (25139 17481 412890 328000) 0 nil])
([nil nil ((107 . 108)) nil (25139 17481 412877 428000) 0 nil])
([nil nil ((#("M" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 93)) nil (25139 17481 412864 428000) 0 nil])
([nil nil ((93 . 94)) nil (25139 17481 412851 828000) 0 nil])
([nil nil ((#("N" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 80)) nil (25139 17481 412839 128000) 0 nil])
([nil nil ((80 . 81)) nil (25139 17481 412826 728000) 0 nil])
([nil nil ((#("N" 0 1 (ws-butler-chg chg fontified t)) . 154)) nil (25139 17481 412814 128000) 0 nil])
([nil nil ((154 . 155)) nil (25139 17481 412801 428000) 0 nil])
([nil nil ((#("M" 0 1 (ws-butler-chg chg fontified t)) . 202)) nil (25139 17481 412788 428000) 0 nil])
([nil nil ((202 . 203)) nil (25139 17481 412776 28000) 0 nil])
([nil nil ((72 . 82)) nil (25139 17481 412763 428000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg delete fontified t)) . 82) (#("n" 0 1 (ws-butler-chg delete fontified t)) . 82) (#("i" 0 1 (ws-butler-chg chg fontified t)) . 82)) nil (25139 17481 412750 128000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -92) (undo-tree-id24 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -93) (undo-tree-id25 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -94) (undo-tree-id26 . -1) 95) nil (25139 17481 412736 128000) 0 nil])
([nil nil ((92 . 103)) nil (25139 17481 412717 628000) 0 nil])
([nil nil ((#("  auto gpioNumNative = (gpio_num_t)(gpionum);
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg delete fontified t face font-lock-keyword-face) 3 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 6 7 (ws-butler-chg chg fontified t) 7 20 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 20 24 (ws-butler-chg chg fontified t) 24 34 (ws-butler-chg chg fontified t face font-lock-type-face) 34 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg chg fontified t) 41 42 (ws-butler-chg delete fontified t) 42 44 (ws-butler-chg chg fontified t) 44 46 (ws-butler-chg chg fontified t)) . 129) (undo-tree-id23 . -46)) nil (25139 17481 412704 428000) 0 nil])
([nil nil ((#("  auto gpioModeNative = (gpio_mode_t)(gpiomode);
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg delete fontified t face font-lock-keyword-face) 3 5 (ws-butler-chg chg fontified t face font-lock-keyword-face) 5 6 (ws-butler-chg chg fontified t face font-lock-keyword-face c-type c-decl-id-start) 6 7 (ws-butler-chg chg fontified t) 7 21 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 21 25 (ws-butler-chg chg fontified t) 25 36 (ws-butler-chg chg fontified t face font-lock-type-face) 36 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (ws-butler-chg delete fontified t) 44 47 (ws-butler-chg chg fontified t) 47 49 (ws-butler-chg chg fontified t)) . 129) (undo-tree-id22 . -49)) nil (25139 17481 412685 828000) 0 nil])
([nil nil ((#("N" 0 1 (ws-butler-chg chg fontified t)) . 156) (t 25139 17481 416364 552000)) nil (25139 17513 608229 707000) 0 nil])
([nil nil ((156 . 157)) nil (25139 17513 608217 207000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg delete fontified t)) . 159) (#("v" 0 1 (ws-butler-chg delete fontified t)) . 159) (#("i" 0 1 (ws-butler-chg delete fontified t)) . 159) (#("t" 0 1 (ws-butler-chg delete fontified t)) . 159) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 159) (#("N" 0 1 (ws-butler-chg chg fontified t)) . 159)) nil (25139 17513 608203 507000) 0 nil])
([nil nil ((#("M" 0 1 (ws-butler-chg chg fontified t)) . 202)) nil (25139 17513 608189 707000) 0 nil])
([nil nil ((202 . 203)) nil (25139 17513 608177 107000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg delete fontified t)) . 206) (#("v" 0 1 (ws-butler-chg delete fontified t)) . 206) (#("i" 0 1 (ws-butler-chg delete fontified t)) . 206) (#("t" 0 1 (ws-butler-chg delete fontified t)) . 206) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 206) (#("N" 0 1 (ws-butler-chg chg fontified t)) . 206)) nil (25139 17513 608163 507000) 0 nil])
([nil nil ((#("v" 0 1 (ws-butler-chg delete fontified t)) . 190) (#("i" 0 1 (ws-butler-chg delete fontified t)) . 190) (#("t" 0 1 (ws-butler-chg delete fontified t)) . 190) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 190) (#("N" 0 1 (ws-butler-chg chg fontified t)) . 190)) nil (25139 17513 608148 607000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg delete fontified t)) . 190)) nil (25139 17513 608135 207000) 0 nil])
([nil nil ((#("N" 0 1 (ws-butler-chg chg fontified t)) . 187)) nil (25139 17513 608121 407000) 0 nil])
([nil nil ((187 . 188)) nil (25139 17513 608109 107000) 0 nil])
([nil nil ((224 . 225)) nil (25139 17513 608096 607000) 0 nil])
([nil nil ((#("N" 0 1 (ws-butler-chg chg fontified t)) . 225)) nil (25139 17513 608084 7000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg delete fontified t)) . 227) (#("v" 0 1 (ws-butler-chg delete fontified t)) . 227) (#("i" 0 1 (ws-butler-chg delete fontified t)) . 227) (#("t" 0 1 (ws-butler-chg delete fontified t)) . 227) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 227) (#("N" 0 1 (ws-butler-chg chg fontified t)) . 227)) nil (25139 17513 608070 507000) 0 nil])
([nil nil ((#("V" 0 1 (ws-butler-chg chg fontified t)) . 233)) nil (25139 17513 608056 607000) 0 nil])
([nil nil ((233 . 234)) nil (25139 17513 608044 7000) 0 nil])
([nil nil ((264 . 265)) nil (25139 17513 608031 306000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg delete fontified t)) . 265) (#("v" 0 1 (ws-butler-chg delete fontified t)) . 265) (#("i" 0 1 (ws-butler-chg delete fontified t)) . 265) (#("t" 0 1 (ws-butler-chg delete fontified t)) . 265) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 265) (#("N" 0 1 (ws-butler-chg delete fontified t)) . 265) (#("m" 0 1 (ws-butler-chg delete fontified t)) . 265) (#("u" 0 1 (ws-butler-chg delete fontified t)) . 265) (#("N" 0 1 (ws-butler-chg chg fontified t)) . 265)) nil (25139 17513 608016 7000) 0 nil])
([nil nil ((265 . 267)) nil (25139 17513 607998 7000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t c-is-sws t c-in-sws t)) . 46) (#("c" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 46) (#("i" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 46) (#("t" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 46) (#("a" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 46) (#("t" 0 1 (ws-butler-chg delete fontified t c-is-sws t)) . 46) (#("s" 0 1 (ws-butler-chg chg fontified t c-is-sws t face font-lock-keyword-face)) . 46) (t 25139 17513 609696 661000)) nil (25139 17534 446803 469000) 0 nil])
([nil nil ((#("void set_gpio_mode(gpio_num_t gpionum, gpio_mode_t gpiomode, int gpioval) {
" 0 1 (ws-butler-chg delete fontified t c-is-sws t face font-lock-type-face) 1 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t face font-lock-function-name-face) 6 7 (ws-butler-chg chg fontified t face font-lock-function-name-face) 7 8 (ws-butler-chg chg fontified t face font-lock-function-name-face) 8 9 (ws-butler-chg chg fontified t face font-lock-function-name-face) 9 14 (ws-butler-chg chg fontified t face font-lock-function-name-face) 14 15 (ws-butler-chg chg fontified t face font-lock-function-name-face) 15 16 (ws-butler-chg chg fontified t face font-lock-function-name-face) 16 17 (ws-butler-chg chg fontified t face font-lock-function-name-face) 17 18 (ws-butler-chg chg fontified t face font-lock-function-name-face) 18 19 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 19 20 (ws-butler-chg chg fontified t face font-lock-type-face) 20 21 (ws-butler-chg chg fontified t face font-lock-type-face) 21 22 (ws-butler-chg chg fontified t face font-lock-type-face) 22 23 (ws-butler-chg chg fontified t face font-lock-type-face) 23 24 (ws-butler-chg chg fontified t face font-lock-type-face) 24 25 (ws-butler-chg chg fontified t face font-lock-type-face) 25 26 (ws-butler-chg chg fontified t face font-lock-type-face) 26 27 (ws-butler-chg chg fontified t face font-lock-type-face) 27 28 (ws-butler-chg chg fontified t face font-lock-type-face) 28 29 (ws-butler-chg chg fontified t face font-lock-type-face) 29 30 (ws-butler-chg delete fontified t) 30 34 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 34 35 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 35 36 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 36 37 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 37 38 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 38 39 (ws-butler-chg chg fontified t) 39 40 (ws-butler-chg chg fontified t face font-lock-type-face) 40 41 (ws-butler-chg chg fontified t face font-lock-type-face) 41 42 (ws-butler-chg chg fontified t face font-lock-type-face) 42 43 (ws-butler-chg chg fontified t face font-lock-type-face) 43 44 (ws-butler-chg chg fontified t face font-lock-type-face) 44 45 (ws-butler-chg chg fontified t face font-lock-type-face) 45 46 (ws-butler-chg chg fontified t face font-lock-type-face) 46 47 (ws-butler-chg chg fontified t face font-lock-type-face) 47 48 (ws-butler-chg chg fontified t face font-lock-type-face) 48 49 (ws-butler-chg chg fontified t face font-lock-type-face) 49 50 (ws-butler-chg chg fontified t face font-lock-type-face) 50 51 (ws-butler-chg delete fontified t) 51 55 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 55 56 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 56 57 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 57 59 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 59 60 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 60 61 (ws-butler-chg chg fontified t) 61 64 (ws-butler-chg chg fontified t face font-lock-type-face) 64 65 (ws-butler-chg chg fontified t) 65 69 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 69 70 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 70 71 (ws-butler-chg delete fontified t face font-lock-variable-name-face) 71 72 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 72 73 (ws-butler-chg chg fontified t) 73 75 (ws-butler-chg chg fontified t) 75 76 (ws-butler-chg chg rear-nonsticky t fontified t)) . 46) (undo-tree-id27 . -76) (undo-tree-id28 . -76) (undo-tree-id29 . -19) (undo-tree-id30 . -38) (undo-tree-id31 . -39) (undo-tree-id32 . -60) (undo-tree-id33 . -61) (undo-tree-id34 . -73) (undo-tree-id35 . -76)) nil (25139 17534 446787 769000) 0 nil])
([nil current ((nil fontified nil 121 . 122) (nil fontified nil 119 . 121) (nil fontified nil 118 . 119) (nil fontified nil 117 . 118) (nil fontified nil 116 . 117) (nil fontified nil 115 . 116) (nil fontified nil 111 . 115) (nil fontified nil 110 . 111) (nil fontified nil 107 . 110) (nil fontified nil 106 . 107) (nil fontified nil 105 . 106) (nil fontified nil 103 . 105) (nil fontified nil 102 . 103) (nil fontified nil 101 . 102) (nil fontified nil 97 . 101) (nil fontified nil 96 . 97) (nil fontified nil 95 . 96) (nil fontified nil 94 . 95) (nil fontified nil 93 . 94) (nil fontified nil 92 . 93) (nil fontified nil 91 . 92) (nil fontified nil 90 . 91) (nil fontified nil 89 . 90) (nil fontified nil 88 . 89) (nil fontified nil 87 . 88) (nil fontified nil 86 . 87) (nil fontified nil 85 . 86) (nil fontified nil 84 . 85) (nil fontified nil 83 . 84) (nil fontified nil 82 . 83) (nil fontified nil 81 . 82) (nil fontified nil 80 . 81) (nil fontified nil 76 . 80) (nil fontified nil 75 . 76) (nil fontified nil 74 . 75) (nil fontified nil 73 . 74) (nil fontified nil 72 . 73) (nil fontified nil 71 . 72) (nil fontified nil 70 . 71) (nil fontified nil 69 . 70) (nil fontified nil 68 . 69) (nil fontified nil 67 . 68) (nil fontified nil 66 . 67) (nil fontified nil 65 . 66) (nil fontified nil 64 . 65) (nil fontified nil 63 . 64) (nil fontified nil 62 . 63) (nil fontified nil 61 . 62) (nil fontified nil 60 . 61) (nil fontified nil 55 . 60) (nil fontified nil 54 . 55) (nil fontified nil 53 . 54) (nil fontified nil 52 . 53) (nil fontified nil 51 . 52) (nil fontified nil 50 . 51) (nil fontified nil 49 . 50) (nil fontified nil 47 . 49) (nil fontified nil 46 . 47) (46 . 122)) nil (25139 17534 446751 569000) 0 nil])
nil
